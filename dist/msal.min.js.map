{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///msal.min.js","webpack:///webpack/bootstrap 92e80a4bc592c1e4b364","webpack:///./src/Utils.ts","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./src/Logger.ts","webpack:///./src/Authority.ts","webpack:///./src/ErrorMessage.ts","webpack:///./src/Constants.ts","webpack:///./src/User.ts","webpack:///./src/AadAuthority.ts","webpack:///./src/XHRClient.ts","webpack:///./src/index.ts","webpack:///./src/UserAgentApplication.ts","webpack:///./src/AccessTokenKey.ts","webpack:///./src/AccessTokenValue.ts","webpack:///./src/AuthenticationRequestParameters.ts","webpack:///./src/ClientInfo.ts","webpack:///./src/IdToken.ts","webpack:///./src/Storage.ts","webpack:///./src/AccessTokenCacheItem.ts","webpack:///./src/RequestInfo.ts","webpack:///./src/AuthorityFactory.ts","webpack:///./src/B2cAuthority.ts"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","Utils","compareObjects","u1","u2","userIdentifier","expiresIn","expires","now","parseInt","Math","round","Date","getTime","isEmpty","str","length","extractIdToken","encodedIdToken","decodedToken","decodeJwt","base64IdToken","JWSPayload","base64Decoded","base64DecodeStringUrlSafe","JSON","parse","err","base64EncodeStringUrlSafe","input","window","btoa","encode","replace","atob","decodeURIComponent","decode","chr1","chr2","chr3","enc1","enc2","enc3","enc4","keyStr","output","utf8Encode","charCodeAt","isNaN","charAt","utftext","String","fromCharCode","codes","Error","h1","h2","h3","h4","bits","c1","c2","c3","decoded","indexOf","jwtToken","idTokenPartsRegex","matches","exec","header","JWSSig","deserialize","query","match","pl","search","obj","isIntersectingScopes","cachedScopes","scopes","convertToLowerCase","toLowerCase","containsScope","every","toString","map","scope","removeElement","filter","decimalToHex","num","hex","getLibraryVersion","replaceFirstPath","href","tenantId","urlObject","GetUrlComponents","pathArray","PathSegments","shift","Protocol","HostNameAndPort","join","createNewGuid","cryptoObj","crypto","getRandomValues","buffer","Uint8Array","guidHolder","r","guidResponse","random","url","regEx","RegExp","urlComponents","AbsolutePath","pathSegments","split","val","CanonicalizeUri","endsWith","suffix","__webpack_exports__","__extends","b","__","constructor","extendStatics","create","__rest","e","t","getOwnPropertySymbols","__decorate","decorators","target","key","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","throw","result","done","then","apply","__generator","body","verb","v","op","f","TypeError","_","y","label","ops","pop","trys","push","g","sent","return","Symbol","iterator","__exportStar","__values","__read","ar","error","__spread","concat","__await","__asyncGenerator","a","q","resume","settle","fulfill","asyncIterator","__asyncDelegator","__asyncValues","__assign","setPrototypeOf","__proto__","Array","assign","LogLevel","Utils_1","Logger","localCallback","options","_level","Info","_a","correlationId","_b","level","_c","piiLoggingEnabled","_localCallback","_correlationId","_piiLoggingEnabled","logMessage","logLevel","containsPii","log","timestamp","toUTCString","executeCallback","message","errorPii","warning","Warning","warningPii","info","infoPii","verbose","Verbose","verbosePii","ErrorMessage_1","XHRClient_1","AuthorityType","Authority","authority","validateAuthority","IsValidationEnabled","CanonicalAuthority","validateAsUri","CanonicalAuthorityUrlComponents","validateResolved","tenantDiscoveryResponse","AuthorizationEndpoint","Tenant","EndSessionEndpoint","Issuer","canonicalAuthority","set","canonicalAuthorityUrlComponents","components","ErrorMessage","invalidAuthorityType","authorityUriInsecure","authorityUriInvalidPath","DiscoverEndpoints","openIdConfigurationEndpoint","XhrClient","sendRequestAsync","response","authorization_endpoint","end_session_endpoint","issuer","ResolveEndpointsAsync","_this","GetOpenIdConfigurationEndpointAsync","openIdConfigurationEndpointResponse","Constants","_popUpWidth","width","_popUpHeight","height","ErrorCodes","ErrorDescription","User","displayableId","identityProvider","idToken","createUser","clientInfo","uid","utid","preferredName","decodedIdToken","tslib_1","Authority_1","AadAuthority","_super","AadInstanceDiscoveryEndpoint","Aad","resultPromise","DefaultOpenIdConfigurationEndpoint","host","IsInTrustedHostList","AadInstanceDiscoveryEndpointUrl","tenant_discovery_endpoint","TrustedHostList","login.windows.net","login.chinacloudapi.cn","login.cloudgovapi.us","login.microsoftonline.com","login.microsoftonline.de","login.microsoftonline.us","method","enableCaching","xhr","XMLHttpRequest","open","onload","ev","status","handleError","responseText","jsonResponse","onerror","send","UserAgentApplication_1","UserAgentApplication","Logger_1","Logger_2","User_1","AccessTokenKey_1","AccessTokenValue_1","AuthenticationRequestParameters_1","ClientInfo_1","Constants_1","IdToken_1","Storage_1","RequestInfo_1","AuthorityFactory_1","ResponseTypes","id_token","token","id_token_token","resolveTokenOnlyIfOutOfIframe","propertyKey","descriptor","tokenAcquisitionMethod","args","_i","isInIframe","clientId","tokenReceivedCallback","_cacheLocations","localStorage","sessionStorage","_clockSkew","_tokenReceivedCallback","cacheLocation","redirectUri","location","_d","postLogoutRedirectUri","_e","logger","_f","loadFrameTimeout","_g","navigateToLoginRequestUrl","_redirectUri","_postLogoutredirectUri","_loginInProgress","_acquireTokenInProgress","_renewStates","_activeRenewals","_cacheLocation","_navigateToLoginRequestUrl","_cacheStorage","Storage","_logger","_openedWindows","msal","callBackMappedToRenewStates","callBacksMappedToRenewStates","urlHash","hash","isCallback","handleAuthenticationResponse","pendingCallback","getItem","processCallBack","authorityInstance","AuthorityFactory","CreateInstance","requestInfo","getRequestInfo","saveTokenFromHash","tokenType","parameters","accessToken","errorDesc","errorDescription","removeItem","loginRedirect","extraQueryParameters","isValidScope","validateInputScope","filterScopes","authenticationRequest","AuthenticationRequestParameters","setItem","loginRequest","loginError","stateLogin","state","nonceIdToken","nonce","msalError","msalErrorDescription","authorityKey","resourceDelimeter","urlNavigate","createNavigateUrl","_requestType","login","promptUser","loginPopup","loginProgressError","inputScopesError","popUpWindow","openWindow","registerCallback","endpointResolutionError","close","catch","title","interval","instance","popupWindow","openPopup","popUpWidth","popUpHeight","popUpWindowError","pollTimer","setInterval","closed","userCancelledError","clearInterval","logout","clearCache","_user","encodeURIComponent","accessTokenItems","getAllAccessTokens","stringify","removeAcquireTokenEntries","acquireTokenUser","renewStatus","resetCacheItems","winLeft","screenLeft","screenX","winTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","innerHeight","clientHeight","left","top_1","focus","isArray","element","expectedState","getCachedToken","user","accessTokenCacheItem","tokenCacheItems","filteredItems","cacheItem","authorityList","getUniqueAuthority","expired","Number","offset","getAllUsers","users","accessTokenCacheItems","IdToken","ClientInfo","getUniqueUsers","flags","uniqueUsers","index","forEach","addHintParameters","userObject","getUser","decodedClientInfo","urlContainsQueryStringParameter","test","acquireTokenRedirect","userLoginError","acquireTokenAuthority","acquireTokenUserKey","stateAcquireToken","renewToken","acquireTokenPopup","acquireTokenProgressError","acquireTokenSilent","scope_1","userObject_1","authenticationRequest_1","newAuthority","cacheResult","renewIdToken","loadIframeTimeout","frameName","tokenRenewStatusInProgress","loadFrame","setTimeout","tokenRenewStatusCancelled","frameCheck","frameHandle","addAdalFrame","src","iframeId","adalFrame","getElementById","createElement","navigator","userAgent","ifr","setAttribute","style","visibility","position","border","getElementsByTagName","appendChild","insertAdjacentHTML","frames","rawIdToken","idTokenKey","rawClientInfo","msalClientInfo","self","isPopup","isWindowOpenerMsal","opener","parent","stateResponse","requestType","saveAccessToken","tokenResponse","clientObj","consentedScopes","accessTokenKey","AccessTokenKey","accessTokenValue","AccessTokenValue","expiration","stateMatch","sessionState","msalSessionState","tokenRenewStatusCompleted","getHash","substring","TokenResponse","valid","statesInParentContext","getScopeFromState","splitIndex","responseType","xClientSku","xClientVer","translateclientIdUsedInScope","parseScope","authEndpoint","clientIdIndex","splice","scopeList","_uid","_utid","objectId","subject","version","homeObjectId","AccessTokenCacheItem_1","_instance","_localStorageSupported","_sessionStorageSupported","clear","results","storage","AccessTokenCacheItem","acquireTokenStatus","AadAuthority_1","B2cAuthority_1","DetectAuthorityFromUrl","authorityUrl","B2C","Adfs","B2cAuthority","b2cAuthorityUriInvalidPath","unsupportedAuthorityValidation"],"mappings":"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","file":"msal.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Msal\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Msal\"] = factory();\n\telse\n\t\troot[\"Msal\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Msal\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Msal\"] = factory();\n\telse\n\t\troot[\"Msal\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * @hidden\r\n */\r\nvar Utils = /** @class */ (function () {\r\n    function Utils() {\r\n    }\r\n    Utils.compareObjects = function (u1, u2) {\r\n        if (!u1 || !u2) {\r\n            return false;\r\n        }\r\n        if (u1.userIdentifier && u2.userIdentifier) {\r\n            if (u1.userIdentifier === u2.userIdentifier) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Utils.expiresIn = function (expires) {\r\n        // if AAD did not send \"expires_in\" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as \"expires_in\" value instead of 3600\r\n        if (!expires) {\r\n            expires = \"3599\";\r\n        }\r\n        return this.now() + parseInt(expires, 10);\r\n    };\r\n    Utils.now = function () {\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n    Utils.isEmpty = function (str) {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    };\r\n    Utils.extractIdToken = function (encodedIdToken) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = this.decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            var base64IdToken = decodedToken.JWSPayload;\r\n            var base64Decoded = this.base64DecodeStringUrlSafe(base64IdToken);\r\n            if (!base64Decoded) {\r\n                //this._requestContext.logger.info(\"The returned id_token could not be base64 url safe decoded.\");\r\n                return null;\r\n            }\r\n            // ECMA script has JSON built-in support\r\n            return JSON.parse(base64Decoded);\r\n        }\r\n        catch (err) {\r\n            //this._requestContext.logger.error(\"The returned id_token could not be decoded\" + err);\r\n        }\r\n        return null;\r\n    };\r\n    Utils.base64EncodeStringUrlSafe = function (input) {\r\n        // html5 should support atob function for decoding\r\n        if (window.btoa) {\r\n            return window.btoa(input);\r\n        }\r\n        else {\r\n            return this.encode(input);\r\n        }\r\n    };\r\n    Utils.base64DecodeStringUrlSafe = function (base64IdToken) {\r\n        // html5 should support atob function for decoding\r\n        base64IdToken = base64IdToken.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        if (window.atob) {\r\n            return decodeURIComponent(window.atob(base64IdToken)); // jshint ignore:line\r\n        }\r\n        else {\r\n            return decodeURIComponent(this.decode(base64IdToken));\r\n        }\r\n    };\r\n    Utils.encode = function (input) {\r\n        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        var output = \"\";\r\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n        input = this.utf8Encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            }\r\n            else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n        }\r\n        return output.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\r\n    };\r\n    Utils.utf8Encode = function (input) {\r\n        input = input.replace(/\\r\\n/g, \"\\n\");\r\n        var utftext = \"\";\r\n        for (var n = 0; n < input.length; n++) {\r\n            var c = input.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            }\r\n            else if ((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n            else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n        }\r\n        return utftext;\r\n    };\r\n    Utils.decode = function (base64IdToken) {\r\n        var codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        base64IdToken = String(base64IdToken).replace(/=+$/, \"\");\r\n        var length = base64IdToken.length;\r\n        if (length % 4 === 1) {\r\n            throw new Error(\"The token to be decoded is not correctly encoded.\");\r\n        }\r\n        var h1, h2, h3, h4, bits, c1, c2, c3, decoded = \"\";\r\n        for (var i = 0; i < length; i += 4) {\r\n            //Every 4 base64 encoded character will be converted to 3 byte string, which is 24 bits\r\n            // then 6 bits per base64 encoded character\r\n            h1 = codes.indexOf(base64IdToken.charAt(i));\r\n            h2 = codes.indexOf(base64IdToken.charAt(i + 1));\r\n            h3 = codes.indexOf(base64IdToken.charAt(i + 2));\r\n            h4 = codes.indexOf(base64IdToken.charAt(i + 3));\r\n            // For padding, if last two are \"=\"\r\n            if (i + 2 === length - 1) {\r\n                bits = h1 << 18 | h2 << 12 | h3 << 6;\r\n                c1 = bits >> 16 & 255;\r\n                c2 = bits >> 8 & 255;\r\n                decoded += String.fromCharCode(c1, c2);\r\n                break;\r\n            }\r\n            else if (i + 1 === length - 1) {\r\n                bits = h1 << 18 | h2 << 12;\r\n                c1 = bits >> 16 & 255;\r\n                decoded += String.fromCharCode(c1);\r\n                break;\r\n            }\r\n            bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\r\n            // then convert to 3 byte chars\r\n            c1 = bits >> 16 & 255;\r\n            c2 = bits >> 8 & 255;\r\n            c3 = bits & 255;\r\n            decoded += String.fromCharCode(c1, c2, c3);\r\n        }\r\n        return decoded;\r\n    };\r\n    Utils.decodeJwt = function (jwtToken) {\r\n        if (this.isEmpty(jwtToken)) {\r\n            return null;\r\n        }\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            //this._requestContext.logger.warn(\"The returned id_token is not parseable.\");\r\n            return null;\r\n        }\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n        return crackedToken;\r\n    };\r\n    Utils.deserialize = function (query) {\r\n        var match; // Regex for replacing addition symbol with a space\r\n        var pl = /\\+/g;\r\n        var search = /([^&=]+)=([^&]*)/g;\r\n        var decode = function (s) { return decodeURIComponent(s.replace(pl, \" \")); };\r\n        var obj = {};\r\n        match = search.exec(query);\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n        return obj;\r\n    };\r\n    Utils.isIntersectingScopes = function (cachedScopes, scopes) {\r\n        cachedScopes = this.convertToLowerCase(cachedScopes);\r\n        for (var i = 0; i < scopes.length; i++) {\r\n            if (cachedScopes.indexOf(scopes[i].toLowerCase()) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Utils.containsScope = function (cachedScopes, scopes) {\r\n        cachedScopes = this.convertToLowerCase(cachedScopes);\r\n        return scopes.every(function (value) { return cachedScopes.indexOf(value.toString().toLowerCase()) >= 0; });\r\n    };\r\n    Utils.convertToLowerCase = function (scopes) {\r\n        return scopes.map(function (scope) { return scope.toLowerCase(); });\r\n    };\r\n    Utils.removeElement = function (scopes, scope) {\r\n        return scopes.filter(function (value) { return value !== scope; });\r\n    };\r\n    Utils.decimalToHex = function (num) {\r\n        var hex = num.toString(16);\r\n        while (hex.length < 2) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    };\r\n    Utils.getLibraryVersion = function () {\r\n        return \"0.1.4\";\r\n    };\r\n    /*\r\n      * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n      * @param href The url\r\n      * @param tenantId The tenant id to replace\r\n      */\r\n    Utils.replaceFirstPath = function (href, tenantId) {\r\n        var match = href.match(/^(https?\\:)\\/\\/(([^:\\/?#] *)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#] *)(\\?[^#] *|)(#. *|)$/);\r\n        if (match) {\r\n            var urlObject = Utils.GetUrlComponents(href);\r\n            var pathArray = urlObject.PathSegments;\r\n            pathArray.shift();\r\n            if (pathArray[0] && pathArray[0] === \"common\" || pathArray[0] === \"organizations\") {\r\n                pathArray[0] = tenantId;\r\n                href = urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + pathArray.join(\"/\");\r\n            }\r\n        }\r\n        return href;\r\n    };\r\n    Utils.createNewGuid = function () {\r\n        // RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n        // pseudo-random numbers.\r\n        // The algorithm is as follows:\r\n        //     Set the two most significant bits (bits 6 and 7) of the\r\n        //        clock_seq_hi_and_reserved to zero and one, respectively.\r\n        //     Set the four most significant bits (bits 12 through 15) of the\r\n        //        time_hi_and_version field to the 4-bit version number from\r\n        //        Section 4.1.3. Version4\r\n        //     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n        //     values.\r\n        // UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n        // time-low               = 4hexOctet\r\n        // time-mid               = 2hexOctet\r\n        // time-high-and-version  = 2hexOctet\r\n        // clock-seq-and-reserved = hexOctet:\r\n        // clock-seq-low          = hexOctet\r\n        // node                   = 6hexOctet\r\n        // Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n        // y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n        // y values are 8, 9, A, B\r\n        var cryptoObj = window.crypto; // for IE 11\r\n        if (cryptoObj && cryptoObj.getRandomValues) {\r\n            var buffer = new Uint8Array(16);\r\n            cryptoObj.getRandomValues(buffer);\r\n            //buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; //buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; //buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n            //buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; //buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; //buffer[8] & 10111111 will set the 6 bit to 0.\r\n            return Utils.decimalToHex(buffer[0]) + Utils.decimalToHex(buffer[1])\r\n                + Utils.decimalToHex(buffer[2]) + Utils.decimalToHex(buffer[3])\r\n                + \"-\" + Utils.decimalToHex(buffer[4]) + Utils.decimalToHex(buffer[5])\r\n                + \"-\" + Utils.decimalToHex(buffer[6]) + Utils.decimalToHex(buffer[7])\r\n                + \"-\" + Utils.decimalToHex(buffer[8]) + Utils.decimalToHex(buffer[9])\r\n                + \"-\" + Utils.decimalToHex(buffer[10]) + Utils.decimalToHex(buffer[11])\r\n                + Utils.decimalToHex(buffer[12]) + Utils.decimalToHex(buffer[13])\r\n                + Utils.decimalToHex(buffer[14]) + Utils.decimalToHex(buffer[15]);\r\n        }\r\n        else {\r\n            var guidHolder = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n            var hex = \"0123456789abcdef\";\r\n            var r = 0;\r\n            var guidResponse = \"\";\r\n            for (var i = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === \"x\") {\r\n                    guidResponse += hex[r];\r\n                }\r\n                else if (guidHolder[i] === \"y\") {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                }\r\n                else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    };\r\n    /*\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    Utils.GetUrlComponents = function (url) {\r\n        if (!url) {\r\n            throw \"Url required\";\r\n        }\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        var match = url.match(regEx);\r\n        if (!match || match.length < 6) {\r\n            throw \"Valid url required\";\r\n        }\r\n        var urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5]\r\n        };\r\n        var pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; }); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        return urlComponents;\r\n    };\r\n    /*\r\n     * Given a url or path, append a trailing slash if one doesnt exist\r\n     */\r\n    Utils.CanonicalizeUri = function (url) {\r\n        if (url) {\r\n            url = url.toLowerCase();\r\n        }\r\n        if (url && !Utils.endsWith(url, \"/\")) {\r\n            url += \"/\";\r\n        }\r\n        return url;\r\n    };\r\n    /*\r\n      * Checks to see if the url ends with the suffix\r\n      * Required because we are compiling for es5 instead of es6\r\n      * @param url\r\n      * @param str\r\n      */\r\n    Utils.endsWith = function (url, suffix) {\r\n        if (!url || !suffix) {\r\n            return false;\r\n        }\r\n        return url.indexOf(suffix, url.length - suffix.length) !== -1;\r\n    };\r\n    return Utils;\r\n}());\r\nexports.Utils = Utils;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"__extends\"] = __extends;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (immutable) */ __webpack_exports__[\"__rest\"] = __rest;\n/* harmony export (immutable) */ __webpack_exports__[\"__decorate\"] = __decorate;\n/* harmony export (immutable) */ __webpack_exports__[\"__param\"] = __param;\n/* harmony export (immutable) */ __webpack_exports__[\"__metadata\"] = __metadata;\n/* harmony export (immutable) */ __webpack_exports__[\"__awaiter\"] = __awaiter;\n/* harmony export (immutable) */ __webpack_exports__[\"__generator\"] = __generator;\n/* harmony export (immutable) */ __webpack_exports__[\"__exportStar\"] = __exportStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__values\"] = __values;\n/* harmony export (immutable) */ __webpack_exports__[\"__read\"] = __read;\n/* harmony export (immutable) */ __webpack_exports__[\"__spread\"] = __spread;\n/* harmony export (immutable) */ __webpack_exports__[\"__await\"] = __await;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncGenerator\"] = __asyncGenerator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncDelegator\"] = __asyncDelegator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncValues\"] = __asyncValues;\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils_1 = __webpack_require__(0);\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(localCallback, options) {\r\n        if (options === void 0) { options = {}; }\r\n        /*\r\n         * @hidden\r\n         */\r\n        this._level = LogLevel.Info;\r\n        var _a = options.correlationId, correlationId = _a === void 0 ? \"\" : _a, _b = options.level, level = _b === void 0 ? LogLevel.Info : _b, _c = options.piiLoggingEnabled, piiLoggingEnabled = _c === void 0 ? false : _c;\r\n        this._localCallback = localCallback;\r\n        this._correlationId = correlationId;\r\n        this._level = level;\r\n        this._piiLoggingEnabled = piiLoggingEnabled;\r\n    }\r\n    /*\r\n     * @hidden\r\n     */\r\n    Logger.prototype.logMessage = function (logLevel, logMessage, containsPii) {\r\n        if ((logLevel > this._level) || (!this._piiLoggingEnabled && containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        var log;\r\n        if (!Utils_1.Utils.isEmpty(this._correlationId)) {\r\n            log = timestamp + \":\" + this._correlationId + \"-\" + Utils_1.Utils.getLibraryVersion() + \"-\" + LogLevel[logLevel] + \" \" + logMessage;\r\n        }\r\n        else {\r\n            log = timestamp + \":\" + Utils_1.Utils.getLibraryVersion() + \"-\" + LogLevel[logLevel] + \" \" + logMessage;\r\n        }\r\n        this.executeCallback(logLevel, log, containsPii);\r\n    };\r\n    /*\r\n     * @hidden\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this._localCallback) {\r\n            this._localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /*\r\n     * @hidden\r\n     */\r\n    Logger.prototype.error = function (message) {\r\n        this.logMessage(LogLevel.Error, message, false);\r\n    };\r\n    /*\r\n     * @hidden\r\n     */\r\n    Logger.prototype.errorPii = function (message) {\r\n        this.logMessage(LogLevel.Error, message, true);\r\n    };\r\n    /*\r\n     * @hidden\r\n     */\r\n    Logger.prototype.warning = function (message) {\r\n        this.logMessage(LogLevel.Warning, message, false);\r\n    };\r\n    /*\r\n     * @hidden\r\n     */\r\n    Logger.prototype.warningPii = function (message) {\r\n        this.logMessage(LogLevel.Warning, message, true);\r\n    };\r\n    /*\r\n     * @hidden\r\n     */\r\n    Logger.prototype.info = function (message) {\r\n        this.logMessage(LogLevel.Info, message, false);\r\n    };\r\n    /*\r\n     * @hidden\r\n     */\r\n    Logger.prototype.infoPii = function (message) {\r\n        this.logMessage(LogLevel.Info, message, true);\r\n    };\r\n    /*\r\n     * @hidden\r\n     */\r\n    Logger.prototype.verbose = function (message) {\r\n        this.logMessage(LogLevel.Verbose, message, false);\r\n    };\r\n    /*\r\n     * @hidden\r\n     */\r\n    Logger.prototype.verbosePii = function (message) {\r\n        this.logMessage(LogLevel.Verbose, message, true);\r\n    };\r\n    return Logger;\r\n}());\r\nexports.Logger = Logger;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils_1 = __webpack_require__(0);\r\nvar ErrorMessage_1 = __webpack_require__(4);\r\nvar XHRClient_1 = __webpack_require__(8);\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/*\r\n * @hidden\r\n */\r\nvar AuthorityType;\r\n(function (AuthorityType) {\r\n    AuthorityType[AuthorityType[\"Aad\"] = 0] = \"Aad\";\r\n    AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\r\n    AuthorityType[AuthorityType[\"B2C\"] = 2] = \"B2C\";\r\n})(AuthorityType = exports.AuthorityType || (exports.AuthorityType = {}));\r\n/*\r\n * @hidden\r\n */\r\nvar Authority = /** @class */ (function () {\r\n    function Authority(authority, validateAuthority) {\r\n        this.IsValidationEnabled = validateAuthority;\r\n        this.CanonicalAuthority = authority;\r\n        this.validateAsUri();\r\n    }\r\n    Object.defineProperty(Authority.prototype, \"Tenant\", {\r\n        get: function () {\r\n            return this.CanonicalAuthorityUrlComponents.PathSegments[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"AuthorizationEndpoint\", {\r\n        get: function () {\r\n            this.validateResolved();\r\n            return this.tenantDiscoveryResponse.AuthorizationEndpoint.replace(\"{tenant}\", this.Tenant);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"EndSessionEndpoint\", {\r\n        get: function () {\r\n            this.validateResolved();\r\n            return this.tenantDiscoveryResponse.EndSessionEndpoint.replace(\"{tenant}\", this.Tenant);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"SelfSignedJwtAudience\", {\r\n        get: function () {\r\n            this.validateResolved();\r\n            return this.tenantDiscoveryResponse.Issuer.replace(\"{tenant}\", this.Tenant);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Authority.prototype.validateResolved = function () {\r\n        if (!this.tenantDiscoveryResponse) {\r\n            throw \"Please call ResolveEndpointsAsync first\";\r\n        }\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"CanonicalAuthority\", {\r\n        /*\r\n         * A URL that is the authority set by the developer\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthority;\r\n        },\r\n        set: function (url) {\r\n            this.canonicalAuthority = Utils_1.Utils.CanonicalizeUri(url);\r\n            this.canonicalAuthorityUrlComponents = null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"CanonicalAuthorityUrlComponents\", {\r\n        get: function () {\r\n            if (!this.canonicalAuthorityUrlComponents) {\r\n                this.canonicalAuthorityUrlComponents = Utils_1.Utils.GetUrlComponents(this.CanonicalAuthority);\r\n            }\r\n            return this.canonicalAuthorityUrlComponents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"DefaultOpenIdConfigurationEndpoint\", {\r\n        /*\r\n         * // http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\r\n         */\r\n        get: function () {\r\n            return this.CanonicalAuthority + \"v2.0/.well-known/openid-configuration\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /*\r\n     * Given a string, validate that it is of the form https://domain/path\r\n     */\r\n    Authority.prototype.validateAsUri = function () {\r\n        var components;\r\n        try {\r\n            components = this.CanonicalAuthorityUrlComponents;\r\n        }\r\n        catch (e) {\r\n            throw ErrorMessage_1.ErrorMessage.invalidAuthorityType;\r\n        }\r\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw ErrorMessage_1.ErrorMessage.authorityUriInsecure;\r\n        }\r\n        if (!components.PathSegments || components.PathSegments.length < 1) {\r\n            throw ErrorMessage_1.ErrorMessage.authorityUriInvalidPath;\r\n        }\r\n    };\r\n    /*\r\n     * Calls the OIDC endpoint and returns the response\r\n     */\r\n    Authority.prototype.DiscoverEndpoints = function (openIdConfigurationEndpoint) {\r\n        var client = new XHRClient_1.XhrClient();\r\n        return client.sendRequestAsync(openIdConfigurationEndpoint, \"GET\", /*enableCaching: */ true)\r\n            .then(function (response) {\r\n            return {\r\n                AuthorizationEndpoint: response.authorization_endpoint,\r\n                EndSessionEndpoint: response.end_session_endpoint,\r\n                Issuer: response.issuer\r\n            };\r\n        });\r\n    };\r\n    /*\r\n     * Returns a promise.\r\n     * Checks to see if the authority is in the cache\r\n     * Discover endpoints via openid-configuration\r\n     * If successful, caches the endpoint for later use in OIDC\r\n     */\r\n    Authority.prototype.ResolveEndpointsAsync = function () {\r\n        var _this = this;\r\n        var openIdConfigurationEndpoint = \"\";\r\n        return this.GetOpenIdConfigurationEndpointAsync().then(function (openIdConfigurationEndpointResponse) {\r\n            openIdConfigurationEndpoint = openIdConfigurationEndpointResponse;\r\n            return _this.DiscoverEndpoints(openIdConfigurationEndpoint);\r\n        }).then(function (tenantDiscoveryResponse) {\r\n            _this.tenantDiscoveryResponse = tenantDiscoveryResponse;\r\n            return _this;\r\n        });\r\n    };\r\n    return Authority;\r\n}());\r\nexports.Authority = Authority;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/*\r\n  * Copyright (c) Microsoft Corporation\r\n  *  All Rights Reserved\r\n  *  MIT License\r\n  *\r\n  * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n  * software and associated documentation files (the \"Software\"), to deal in the Software\r\n  * without restriction, including without limitation the rights to use, copy, modify,\r\n  * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n  * permit persons to whom the Software is furnished to do so, subject to the following\r\n  * conditions:\r\n  *\r\n  * The above copyright notice and this permission notice shall be\r\n  * included in all copies or substantial portions of the Software.\r\n  *\r\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n  * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n  * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n  */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * @hidden\r\n */\r\nvar ErrorMessage = /** @class */ (function () {\r\n    function ErrorMessage() {\r\n    }\r\n    Object.defineProperty(ErrorMessage, \"authorityUriInvalidPath\", {\r\n        get: function () { return \"AuthorityUriInvalidPath\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorMessage, \"authorityUriInsecure\", {\r\n        get: function () { return \"AuthorityUriInsecure\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorMessage, \"invalidAuthorityType\", {\r\n        get: function () { return \"InvalidAuthorityType\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorMessage, \"unsupportedAuthorityValidation\", {\r\n        get: function () { return \"UnsupportedAuthorityValidation\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorMessage, \"b2cAuthorityUriInvalidPath\", {\r\n        get: function () { return \"B2cAuthorityUriInvalidPath\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ErrorMessage;\r\n}());\r\nexports.ErrorMessage = ErrorMessage;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/*\r\n  * Copyright (c) Microsoft Corporation\r\n  *  All Rights Reserved\r\n  *  MIT License\r\n  *\r\n  * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n  * software and associated documentation files (the \"Software\"), to deal in the Software\r\n  * without restriction, including without limitation the rights to use, copy, modify,\r\n  * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n  * permit persons to whom the Software is furnished to do so, subject to the following\r\n  * conditions:\r\n  *\r\n  * The above copyright notice and this permission notice shall be\r\n  * included in all copies or substantial portions of the Software.\r\n  *\r\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n  * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n  * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n  */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * @hidden\r\n */\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Object.defineProperty(Constants, \"errorDescription\", {\r\n        get: function () { return \"error_description\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"error\", {\r\n        get: function () { return \"error\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"scope\", {\r\n        get: function () { return \"scope\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"acquireTokenUser\", {\r\n        get: function () { return \"msal_acquireTokenUser\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"clientInfo\", {\r\n        get: function () { return \"client_info\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"clientId\", {\r\n        get: function () { return \"clientId\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"authority\", {\r\n        get: function () { return \"authority\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"idToken\", {\r\n        get: function () { return \"id_token\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"accessToken\", {\r\n        get: function () { return \"access_token\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"expiresIn\", {\r\n        get: function () { return \"expires_in\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"sessionState\", {\r\n        get: function () { return \"session_state\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"msalClientInfo\", {\r\n        get: function () { return \"msal.client.info\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"msalError\", {\r\n        get: function () { return \"msal.error\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"msalErrorDescription\", {\r\n        get: function () { return \"msal.error.description\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"msalSessionState\", {\r\n        get: function () { return \"msal.session.state\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"tokenKeys\", {\r\n        get: function () { return \"msal.token.keys\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"accessTokenKey\", {\r\n        get: function () { return \"msal.access.token.key\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"expirationKey\", {\r\n        get: function () { return \"msal.expiration.key\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"stateLogin\", {\r\n        get: function () { return \"msal.state.login\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"stateAcquireToken\", {\r\n        get: function () { return \"msal.state.acquireToken\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"stateRenew\", {\r\n        get: function () { return \"msal.state.renew\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"nonceIdToken\", {\r\n        get: function () { return \"msal.nonce.idtoken\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"userName\", {\r\n        get: function () { return \"msal.username\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"idTokenKey\", {\r\n        get: function () { return \"msal.idtoken\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"loginRequest\", {\r\n        get: function () { return \"msal.login.request\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"loginError\", {\r\n        get: function () { return \"msal.login.error\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"renewStatus\", {\r\n        get: function () { return \"msal.token.renew.status\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"msal\", {\r\n        get: function () { return \"msal\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"resourceDelimeter\", {\r\n        get: function () { return \"|\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"tokenRenewStatusCancelled\", {\r\n        get: function () { return \"Canceled\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"tokenRenewStatusCompleted\", {\r\n        get: function () { return \"Completed\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"tokenRenewStatusInProgress\", {\r\n        get: function () { return \"In Progress\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"popUpWidth\", {\r\n        get: function () { return this._popUpWidth; },\r\n        set: function (width) {\r\n            this._popUpWidth = width;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"popUpHeight\", {\r\n        get: function () { return this._popUpHeight; },\r\n        set: function (height) {\r\n            this._popUpHeight = height;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"login\", {\r\n        get: function () { return \"LOGIN\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"renewToken\", {\r\n        get: function () { return \"renewToken\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"unknown\", {\r\n        get: function () { return \"UNKNOWN\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"urlHash\", {\r\n        get: function () { return \"msal.urlHash\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Constants._popUpWidth = 483;\r\n    Constants._popUpHeight = 600;\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n/*\r\n * @hidden\r\n */\r\nvar ErrorCodes = /** @class */ (function () {\r\n    function ErrorCodes() {\r\n    }\r\n    Object.defineProperty(ErrorCodes, \"loginProgressError\", {\r\n        get: function () { return \"login_progress_error\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorCodes, \"acquireTokenProgressError\", {\r\n        get: function () { return \"acquiretoken_progress_error\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorCodes, \"inputScopesError\", {\r\n        get: function () { return \"input_scopes_error\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorCodes, \"endpointResolutionError\", {\r\n        get: function () { return \"endpoints_resolution_error\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorCodes, \"popUpWindowError\", {\r\n        get: function () { return \"popup_window_error\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorCodes, \"userLoginError\", {\r\n        get: function () { return \"user_login_error\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorCodes, \"userCancelledError\", {\r\n        get: function () { return \"user_cancelled\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ErrorCodes;\r\n}());\r\nexports.ErrorCodes = ErrorCodes;\r\n/*\r\n * @hidden\r\n */\r\nvar ErrorDescription = /** @class */ (function () {\r\n    function ErrorDescription() {\r\n    }\r\n    Object.defineProperty(ErrorDescription, \"loginProgressError\", {\r\n        get: function () { return \"Login is in progress\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorDescription, \"acquireTokenProgressError\", {\r\n        get: function () { return \"Acquire token is in progress\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorDescription, \"inputScopesError\", {\r\n        get: function () { return \"Invalid value of input scopes provided\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorDescription, \"endpointResolutionError\", {\r\n        get: function () { return \"Endpoints cannot be resolved\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorDescription, \"popUpWindowError\", {\r\n        get: function () { return \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorDescription, \"userLoginError\", {\r\n        get: function () { return \"User login is required\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorDescription, \"userCancelledError\", {\r\n        get: function () { return \"User closed the popup window window and cancelled the flow\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ErrorDescription;\r\n}());\r\nexports.ErrorDescription = ErrorDescription;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils_1 = __webpack_require__(0);\r\nvar User = /** @class */ (function () {\r\n    /*\r\n     * @hidden\r\n     */\r\n    function User(displayableId, name, identityProvider, userIdentifier, idToken) {\r\n        this.displayableId = displayableId;\r\n        this.name = name;\r\n        this.identityProvider = identityProvider;\r\n        this.userIdentifier = userIdentifier;\r\n        this.idToken = idToken;\r\n    }\r\n    /*\r\n     * @hidden\r\n     */\r\n    User.createUser = function (idToken, clientInfo, authority) {\r\n        var uid;\r\n        var utid;\r\n        if (!clientInfo) {\r\n            uid = \"\";\r\n            utid = \"\";\r\n        }\r\n        else {\r\n            uid = clientInfo.uid;\r\n            utid = clientInfo.utid;\r\n        }\r\n        var userIdentifier = Utils_1.Utils.base64EncodeStringUrlSafe(uid) + \".\" + Utils_1.Utils.base64EncodeStringUrlSafe(utid);\r\n        return new User(idToken.preferredName, idToken.name, idToken.issuer, userIdentifier, idToken.decodedIdToken);\r\n    };\r\n    return User;\r\n}());\r\nexports.User = User;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(1);\r\nvar Authority_1 = __webpack_require__(3);\r\nvar XHRClient_1 = __webpack_require__(8);\r\n/**\r\n * @hidden\r\n */\r\nvar AadAuthority = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AadAuthority, _super);\r\n    function AadAuthority(authority, validateAuthority) {\r\n        return _super.call(this, authority, validateAuthority) || this;\r\n    }\r\n    Object.defineProperty(AadAuthority.prototype, \"AadInstanceDiscoveryEndpointUrl\", {\r\n        get: function () {\r\n            return AadAuthority.AadInstanceDiscoveryEndpoint + \"?api-version=1.0&authorization_endpoint=\" + this.CanonicalAuthority + \"oauth2/v2.0/authorize\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AadAuthority.prototype, \"AuthorityType\", {\r\n        get: function () {\r\n            return Authority_1.AuthorityType.Aad;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a promise which resolves to the OIDC endpoint\r\n     * Only responds with the endpoint\r\n     */\r\n    AadAuthority.prototype.GetOpenIdConfigurationEndpointAsync = function () {\r\n        var _this = this;\r\n        var resultPromise = new Promise(function (resolve, reject) {\r\n            return resolve(_this.DefaultOpenIdConfigurationEndpoint);\r\n        });\r\n        if (!this.IsValidationEnabled) {\r\n            return resultPromise;\r\n        }\r\n        var host = this.CanonicalAuthorityUrlComponents.HostNameAndPort;\r\n        if (this.IsInTrustedHostList(host)) {\r\n            return resultPromise;\r\n        }\r\n        var client = new XHRClient_1.XhrClient();\r\n        return client.sendRequestAsync(this.AadInstanceDiscoveryEndpointUrl, \"GET\", true)\r\n            .then(function (response) {\r\n            return response.tenant_discovery_endpoint;\r\n        });\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param {string} The host to look up\r\n     */\r\n    AadAuthority.prototype.IsInTrustedHostList = function (host) {\r\n        return AadAuthority.TrustedHostList[host.toLowerCase()];\r\n    };\r\n    AadAuthority.AadInstanceDiscoveryEndpoint = \"https://login.microsoftonline.com/common/discovery/instance\";\r\n    AadAuthority.TrustedHostList = {\r\n        \"login.windows.net\": \"login.windows.net\",\r\n        \"login.chinacloudapi.cn\": \"login.chinacloudapi.cn\",\r\n        \"login.cloudgovapi.us\": \"login.cloudgovapi.us\",\r\n        \"login.microsoftonline.com\": \"login.microsoftonline.com\",\r\n        \"login.microsoftonline.de\": \"login.microsoftonline.de\",\r\n        \"login.microsoftonline.us\": \"login.microsoftonline.us\"\r\n    };\r\n    return AadAuthority;\r\n}(Authority_1.Authority));\r\nexports.AadAuthority = AadAuthority;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * XHR client for JSON endpoints\r\n * https://www.npmjs.com/package/async-promise\r\n * @hidden\r\n */\r\nvar XhrClient = /** @class */ (function () {\r\n    function XhrClient() {\r\n    }\r\n    XhrClient.prototype.sendRequestAsync = function (url, method, enableCaching) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, /*async: */ true);\r\n            if (enableCaching) {\r\n                // TODO: (shivb) ensure that this can be cached\r\n                // xhr.setRequestHeader(\"Cache-Control\", \"Public\");\r\n            }\r\n            xhr.onload = function (ev) {\r\n                if (xhr.status < 200 || xhr.status >= 300) {\r\n                    reject(_this.handleError(xhr.responseText));\r\n                }\r\n                try {\r\n                    var jsonResponse = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (e) {\r\n                    reject(_this.handleError(xhr.responseText));\r\n                }\r\n                resolve(jsonResponse);\r\n            };\r\n            xhr.onerror = function (ev) {\r\n                reject(xhr.status);\r\n            };\r\n            if (method === \"GET\") {\r\n                xhr.send();\r\n            }\r\n            else {\r\n                throw \"not implemented\";\r\n            }\r\n        });\r\n    };\r\n    XhrClient.prototype.handleError = function (responseText) {\r\n        var jsonResponse;\r\n        try {\r\n            jsonResponse = JSON.parse(responseText);\r\n            if (jsonResponse.error) {\r\n                return jsonResponse.error;\r\n            }\r\n            else {\r\n                throw responseText;\r\n            }\r\n        }\r\n        catch (e) {\r\n            return responseText;\r\n        }\r\n    };\r\n    return XhrClient;\r\n}());\r\nexports.XhrClient = XhrClient;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(10);\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar UserAgentApplication_1 = __webpack_require__(11);\r\nexports.UserAgentApplication = UserAgentApplication_1.UserAgentApplication;\r\nvar Logger_1 = __webpack_require__(2);\r\nexports.Logger = Logger_1.Logger;\r\nvar Logger_2 = __webpack_require__(2);\r\nexports.LogLevel = Logger_2.LogLevel;\r\nvar User_1 = __webpack_require__(6);\r\nexports.User = User_1.User;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(1);\r\nvar AccessTokenKey_1 = __webpack_require__(12);\r\nvar AccessTokenValue_1 = __webpack_require__(13);\r\nvar AuthenticationRequestParameters_1 = __webpack_require__(14);\r\nvar ClientInfo_1 = __webpack_require__(15);\r\nvar Constants_1 = __webpack_require__(5);\r\nvar IdToken_1 = __webpack_require__(16);\r\nvar Logger_1 = __webpack_require__(2);\r\nvar Storage_1 = __webpack_require__(17);\r\nvar RequestInfo_1 = __webpack_require__(19);\r\nvar User_1 = __webpack_require__(6);\r\nvar Utils_1 = __webpack_require__(0);\r\nvar AuthorityFactory_1 = __webpack_require__(20);\r\n/*\r\n * @hidden\r\n */\r\nvar ResponseTypes = {\r\n    id_token: \"id_token\",\r\n    token: \"token\",\r\n    id_token_token: \"id_token token\"\r\n};\r\nvar resolveTokenOnlyIfOutOfIframe = function (target, propertyKey, descriptor) {\r\n    var tokenAcquisitionMethod = descriptor.value;\r\n    descriptor.value = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return this.isInIframe()\r\n            ? new Promise(function () { })\r\n            : tokenAcquisitionMethod.apply(this, args);\r\n    };\r\n    return descriptor;\r\n};\r\nvar UserAgentApplication = /** @class */ (function () {\r\n    /*\r\n     * Initialize a UserAgentApplication with a given clientId and authority.\r\n     * @constructor\r\n     * @param {string} clientId - The clientID of your application, you should get this from the application registration portal.\r\n     * @param {string} authority - A URL indicating a directory that MSAL can use to obtain tokens.\r\n     * - In Azure AD, it is of the form https://&lt;instance>/&lt;tenant&gt;,\\ where &lt;instance&gt; is the directory host (e.g. https://login.microsoftonline.com) and &lt;tenant&gt; is a identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory)\r\n     * - In Azure B2C, it is of the form https://&lt;instance&gt;/tfp/&lt;tenantId&gt;/&lt;policyName&gt;/\r\n     * - Default value is: \"https://login.microsoftonline.com/common\"\r\n     * @param _tokenReceivedCallback -  The function that will get the call back once this API is completed (either successfully or with a failure).\r\n     * @param {boolean} validateAuthority -  boolean to turn authority validation on/off.\r\n     */\r\n    function UserAgentApplication(clientId, authority, tokenReceivedCallback, options) {\r\n        if (options === void 0) { options = {}; }\r\n        /*\r\n         * @hidden\r\n         */\r\n        this._cacheLocations = {\r\n            localStorage: \"localStorage\",\r\n            sessionStorage: \"sessionStorage\"\r\n        };\r\n        /*\r\n         * @hidden\r\n         */\r\n        this._clockSkew = 300;\r\n        /*\r\n         * @hidden\r\n         */\r\n        this._tokenReceivedCallback = null;\r\n        var _a = options.validateAuthority, validateAuthority = _a === void 0 ? true : _a, _b = options.cacheLocation, cacheLocation = _b === void 0 ? \"sessionStorage\" : _b, _c = options.redirectUri, redirectUri = _c === void 0 ? window.location.href.split(\"?\")[0].split(\"#\")[0] : _c, _d = options.postLogoutRedirectUri, postLogoutRedirectUri = _d === void 0 ? window.location.href.split(\"?\")[0].split(\"#\")[0] : _d, _e = options.logger, logger = _e === void 0 ? new Logger_1.Logger(null) : _e, _f = options.loadFrameTimeout, loadFrameTimeout = _f === void 0 ? 6000 : _f, _g = options.navigateToLoginRequestUrl, navigateToLoginRequestUrl = _g === void 0 ? true : _g;\r\n        this.loadFrameTimeout = loadFrameTimeout;\r\n        this.clientId = clientId;\r\n        this.validateAuthority = validateAuthority;\r\n        this.authority = authority || \"https://login.microsoftonline.com/common\";\r\n        this._tokenReceivedCallback = tokenReceivedCallback;\r\n        this._redirectUri = redirectUri;\r\n        this._postLogoutredirectUri = postLogoutRedirectUri;\r\n        this._loginInProgress = false;\r\n        this._acquireTokenInProgress = false;\r\n        this._renewStates = [];\r\n        this._activeRenewals = {};\r\n        this._cacheLocation = cacheLocation;\r\n        this._navigateToLoginRequestUrl = navigateToLoginRequestUrl;\r\n        if (!this._cacheLocations[cacheLocation]) {\r\n            throw new Error(\"Cache Location is not valid. Provided value:\" + this._cacheLocation + \".Possible values are: \" + this._cacheLocations.localStorage + \", \" + this._cacheLocations.sessionStorage);\r\n        }\r\n        this._cacheStorage = new Storage_1.Storage(this._cacheLocation); //cache keys msal\r\n        this._logger = logger;\r\n        this._openedWindows = [];\r\n        window.msal = this;\r\n        window.callBackMappedToRenewStates = {};\r\n        window.callBacksMappedToRenewStates = {};\r\n        var urlHash = window.location.hash;\r\n        var isCallback = this.isCallback(urlHash);\r\n        if (isCallback) {\r\n            this.handleAuthenticationResponse.call(this, urlHash);\r\n        }\r\n        else {\r\n            var pendingCallback = this._cacheStorage.getItem(Constants_1.Constants.urlHash);\r\n            if (pendingCallback) {\r\n                this.processCallBack(pendingCallback);\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(UserAgentApplication.prototype, \"cacheLocation\", {\r\n        /*\r\n         * Used to get the cache location\r\n         */\r\n        get: function () {\r\n            return this._cacheLocation;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserAgentApplication.prototype, \"authority\", {\r\n        /*\r\n         * Used to get the authority.\r\n         */\r\n        get: function () {\r\n            return this.authorityInstance.CanonicalAuthority;\r\n        },\r\n        /*\r\n         * Used to set the authority.\r\n         * @param {string} authority - A URL indicating a directory that MSAL can use to obtain tokens.\r\n         * - In Azure AD, it is of the form https://&lt;tenant&gt;/&lt;tenant&gt;, where &lt;tenant&gt; is the directory host (e.g. https://login.microsoftonline.com) and &lt;tenant&gt; is a identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory)\r\n         * - In Azure B2C, it is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/<policyName>/\r\n         * - Default value is: \"https://login.microsoftonline.com/common\"\r\n         */\r\n        set: function (val) {\r\n            this.authorityInstance = AuthorityFactory_1.AuthorityFactory.CreateInstance(val, this.validateAuthority);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /*\r\n     * Used to call the constructor callback with the token/error\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.processCallBack = function (hash) {\r\n        this._logger.info('Processing the callback from redirect response');\r\n        var requestInfo = this.getRequestInfo(hash);\r\n        this.saveTokenFromHash(requestInfo);\r\n        var token = requestInfo.parameters[Constants_1.Constants.accessToken] || requestInfo.parameters[Constants_1.Constants.idToken];\r\n        var errorDesc = requestInfo.parameters[Constants_1.Constants.errorDescription];\r\n        var error = requestInfo.parameters[Constants_1.Constants.error];\r\n        var tokenType;\r\n        if (requestInfo.parameters[Constants_1.Constants.accessToken]) {\r\n            tokenType = Constants_1.Constants.accessToken;\r\n        }\r\n        else {\r\n            tokenType = Constants_1.Constants.idToken;\r\n        }\r\n        this._cacheStorage.removeItem(Constants_1.Constants.urlHash);\r\n        try {\r\n            if (this._tokenReceivedCallback) {\r\n                this._tokenReceivedCallback.call(this, errorDesc, token, error, tokenType);\r\n            }\r\n        }\r\n        catch (err) {\r\n            this._logger.error(\"Error occurred in token received callback function: \" + err);\r\n        }\r\n    };\r\n    /*\r\n     * Initiate the login process by redirecting the user to the STS authorization endpoint.\r\n     * @param {Array.<string>} scopes - Permissions you want included in the access token. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {string} extraQueryParameters - Key-value pairs to pass to the authentication server during the interactive authentication flow.\r\n     */\r\n    UserAgentApplication.prototype.loginRedirect = function (scopes, extraQueryParameters) {\r\n        var _this = this;\r\n        /*\r\n        1. Create navigate url\r\n        2. saves value in cache\r\n        3. redirect user to AAD\r\n         */\r\n        if (this._loginInProgress) {\r\n            if (this._tokenReceivedCallback) {\r\n                this._tokenReceivedCallback(\"Login is in progress\", null, null, Constants_1.Constants.idToken);\r\n                return;\r\n            }\r\n        }\r\n        if (scopes) {\r\n            var isValidScope = this.validateInputScope(scopes);\r\n            if (isValidScope && !Utils_1.Utils.isEmpty(isValidScope)) {\r\n                if (this._tokenReceivedCallback) {\r\n                    this._tokenReceivedCallback(isValidScope, null, null, Constants_1.Constants.idToken);\r\n                    return;\r\n                }\r\n            }\r\n            scopes = this.filterScopes(scopes);\r\n        }\r\n        this.authorityInstance.ResolveEndpointsAsync()\r\n            .then(function () {\r\n            var authenticationRequest = new AuthenticationRequestParameters_1.AuthenticationRequestParameters(_this.authorityInstance, _this.clientId, scopes, ResponseTypes.id_token, _this._redirectUri);\r\n            if (extraQueryParameters) {\r\n                authenticationRequest.extraQueryParameters = extraQueryParameters;\r\n            }\r\n            _this._cacheStorage.setItem(Constants_1.Constants.loginRequest, window.location.href);\r\n            _this._cacheStorage.setItem(Constants_1.Constants.loginError, \"\");\r\n            _this._cacheStorage.setItem(Constants_1.Constants.stateLogin, authenticationRequest.state);\r\n            _this._cacheStorage.setItem(Constants_1.Constants.nonceIdToken, authenticationRequest.nonce);\r\n            _this._cacheStorage.setItem(Constants_1.Constants.msalError, \"\");\r\n            _this._cacheStorage.setItem(Constants_1.Constants.msalErrorDescription, \"\");\r\n            var authorityKey = Constants_1.Constants.authority + Constants_1.Constants.resourceDelimeter + authenticationRequest.state;\r\n            if (Utils_1.Utils.isEmpty(_this._cacheStorage.getItem(authorityKey))) {\r\n                _this._cacheStorage.setItem(authorityKey, _this.authority);\r\n            }\r\n            var urlNavigate = authenticationRequest.createNavigateUrl(scopes) + \"&prompt=select_account\" + \"&response_mode=fragment\";\r\n            _this._loginInProgress = true;\r\n            _this._requestType = Constants_1.Constants.login;\r\n            _this.promptUser(urlNavigate);\r\n        });\r\n    };\r\n    /*\r\n     * Initiate the login process by opening a popup window.\r\n     * @param {Array.<string>} scopes - Permissions you want included in the access token. Not all scopes are  guaranteed to be included in the access token returned.\r\n     * @param {string} extraQueryParameters - Key-value pairs to pass to the STS during the interactive authentication flow.\r\n     * @returns {Promise.<string>} - A Promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the token or error.\r\n     */\r\n    UserAgentApplication.prototype.loginPopup = function (scopes, extraQueryParameters) {\r\n        var _this = this;\r\n        /*\r\n        1. Create navigate url\r\n        2. saves value in cache\r\n        3. redirect user to AAD\r\n         */\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this._loginInProgress) {\r\n                reject(Constants_1.ErrorCodes.loginProgressError + \":\" + Constants_1.ErrorDescription.loginProgressError);\r\n                return;\r\n            }\r\n            if (scopes) {\r\n                var isValidScope = _this.validateInputScope(scopes);\r\n                if (isValidScope && !Utils_1.Utils.isEmpty(isValidScope)) {\r\n                    reject(Constants_1.ErrorCodes.inputScopesError + \":\" + Constants_1.ErrorDescription.inputScopesError);\r\n                    return;\r\n                }\r\n                scopes = _this.filterScopes(scopes);\r\n            }\r\n            else {\r\n                scopes = [_this.clientId];\r\n            }\r\n            var scope = scopes.join(\" \").toLowerCase();\r\n            var popUpWindow = _this.openWindow(\"about:blank\", \"_blank\", 1, _this, resolve, reject);\r\n            if (!popUpWindow) {\r\n                return;\r\n            }\r\n            _this.authorityInstance.ResolveEndpointsAsync().then(function () {\r\n                var authenticationRequest = new AuthenticationRequestParameters_1.AuthenticationRequestParameters(_this.authorityInstance, _this.clientId, scopes, ResponseTypes.id_token, _this._redirectUri);\r\n                if (extraQueryParameters) {\r\n                    authenticationRequest.extraQueryParameters = extraQueryParameters;\r\n                }\r\n                _this._cacheStorage.setItem(Constants_1.Constants.loginRequest, window.location.href);\r\n                _this._cacheStorage.setItem(Constants_1.Constants.loginError, \"\");\r\n                _this._cacheStorage.setItem(Constants_1.Constants.nonceIdToken, authenticationRequest.nonce);\r\n                _this._cacheStorage.setItem(Constants_1.Constants.msalError, \"\");\r\n                _this._cacheStorage.setItem(Constants_1.Constants.msalErrorDescription, \"\");\r\n                var authorityKey = Constants_1.Constants.authority + Constants_1.Constants.resourceDelimeter + authenticationRequest.state;\r\n                if (Utils_1.Utils.isEmpty(_this._cacheStorage.getItem(authorityKey))) {\r\n                    _this._cacheStorage.setItem(authorityKey, _this.authority);\r\n                }\r\n                var urlNavigate = authenticationRequest.createNavigateUrl(scopes) + \"&prompt=select_account\" + \"&response_mode=fragment\";\r\n                _this._renewStates.push(authenticationRequest.state);\r\n                _this.registerCallback(authenticationRequest.state, scope, resolve, reject);\r\n                _this._requestType = Constants_1.Constants.login;\r\n                _this._loginInProgress = true;\r\n                if (popUpWindow) {\r\n                    popUpWindow.location.href = urlNavigate;\r\n                }\r\n            }, function () {\r\n                _this._logger.info(Constants_1.ErrorCodes.endpointResolutionError + \":\" + Constants_1.ErrorDescription.endpointResolutionError);\r\n                _this._cacheStorage.setItem(Constants_1.Constants.msalError, Constants_1.ErrorCodes.endpointResolutionError);\r\n                _this._cacheStorage.setItem(Constants_1.Constants.msalErrorDescription, Constants_1.ErrorDescription.endpointResolutionError);\r\n                if (reject) {\r\n                    reject(Constants_1.ErrorCodes.endpointResolutionError + \":\" + Constants_1.ErrorDescription.endpointResolutionError);\r\n                }\r\n                if (popUpWindow) {\r\n                    popUpWindow.close();\r\n                }\r\n            }).catch(function (err) {\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /*\r\n      * Used to redirect the browser to the STS authorization endpoint\r\n      * @param {string} urlNavigate - URL of the authorization endpoint\r\n      * @hidden\r\n      */\r\n    UserAgentApplication.prototype.promptUser = function (urlNavigate) {\r\n        if (urlNavigate && !Utils_1.Utils.isEmpty(urlNavigate)) {\r\n            this._logger.info(\"Navigate to:\" + urlNavigate);\r\n            window.location.replace(urlNavigate);\r\n        }\r\n        else {\r\n            this._logger.info(\"Navigate url is empty\");\r\n        }\r\n    };\r\n    /*\r\n     * Used to send the user to the redirect_uri after authentication is complete. The user\"s bearer token is attached to the URI fragment as an id_token/access_token field.\r\n     * This function also closes the popup window after redirection.\r\n     * @hidden\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.openWindow = function (urlNavigate, title, interval, instance, resolve, reject) {\r\n        var _this = this;\r\n        var popupWindow = this.openPopup(urlNavigate, title, Constants_1.Constants.popUpWidth, Constants_1.Constants.popUpHeight);\r\n        if (popupWindow == null) {\r\n            instance._loginInProgress = false;\r\n            instance._acquireTokenInProgress = false;\r\n            this._logger.info(Constants_1.ErrorCodes.popUpWindowError + \":\" + Constants_1.ErrorDescription.popUpWindowError);\r\n            this._cacheStorage.setItem(Constants_1.Constants.msalError, Constants_1.ErrorCodes.popUpWindowError);\r\n            this._cacheStorage.setItem(Constants_1.Constants.msalErrorDescription, Constants_1.ErrorDescription.popUpWindowError);\r\n            if (reject) {\r\n                reject(Constants_1.ErrorCodes.popUpWindowError + \":\" + Constants_1.ErrorDescription.popUpWindowError);\r\n            }\r\n            return null;\r\n        }\r\n        this._openedWindows.push(popupWindow);\r\n        var pollTimer = window.setInterval(function () {\r\n            if (popupWindow && popupWindow.closed && instance._loginInProgress) {\r\n                instance._loginInProgress = false;\r\n                instance._acquireTokenInProgress = false;\r\n                if (reject) {\r\n                    reject(Constants_1.ErrorCodes.userCancelledError + \":\" + Constants_1.ErrorDescription.userCancelledError);\r\n                }\r\n                window.clearInterval(pollTimer);\r\n            }\r\n            try {\r\n                var popUpWindowLocation = popupWindow.location;\r\n                if (popUpWindowLocation.href.indexOf(_this._redirectUri) !== -1) {\r\n                    window.clearInterval(pollTimer);\r\n                    instance._loginInProgress = false;\r\n                    instance._acquireTokenInProgress = false;\r\n                    _this._logger.info(\"Closing popup window\");\r\n                }\r\n            }\r\n            catch (e) {\r\n                //Cross Domain url check error. Will be thrown until AAD redirects the user back to the app\"s root page with the token. No need to log or throw this error as it will create unnecessary traffic.\r\n            }\r\n        }, interval);\r\n        return popupWindow;\r\n    };\r\n    /*\r\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Defaults behaviour is to redirect the user to `window.location.href`.\r\n     */\r\n    UserAgentApplication.prototype.logout = function () {\r\n        this.clearCache();\r\n        this._user = null;\r\n        var logout = \"\";\r\n        if (this._postLogoutredirectUri) {\r\n            logout = \"post_logout_redirect_uri=\" + encodeURIComponent(this._postLogoutredirectUri);\r\n        }\r\n        var urlNavigate = this.authority + \"/oauth2/v2.0/logout?\" + logout;\r\n        this.promptUser(urlNavigate);\r\n    };\r\n    /*\r\n     * Used to configure the popup window for login.\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.clearCache = function () {\r\n        this._renewStates = [];\r\n        var accessTokenItems = this._cacheStorage.getAllAccessTokens(Constants_1.Constants.clientId, Constants_1.Constants.authority);\r\n        for (var i = 0; i < accessTokenItems.length; i++) {\r\n            this._cacheStorage.removeItem(JSON.stringify(accessTokenItems[i].key));\r\n        }\r\n        this._cacheStorage.removeAcquireTokenEntries(Constants_1.Constants.acquireTokenUser, Constants_1.Constants.renewStatus);\r\n        this._cacheStorage.removeAcquireTokenEntries(Constants_1.Constants.authority + Constants_1.Constants.resourceDelimeter, Constants_1.Constants.renewStatus);\r\n        this._cacheStorage.resetCacheItems();\r\n    };\r\n    /*\r\n     * Configures popup window for login.\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\r\n        try {\r\n            /*\r\n             * adding winLeft and winTop to account for dual monitor\r\n             * using screenLeft and screenTop for IE8 and earlier\r\n             */\r\n            var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            var winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /*\r\n             * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n             * using document.documentElement.clientWidth for IE8 and earlier\r\n             */\r\n            var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            var left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r\n            var top_1 = ((height / 2) - (popUpHeight / 2)) + winTop;\r\n            var popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top_1 + \", left=\" + left);\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            return popupWindow;\r\n        }\r\n        catch (e) {\r\n            this._logger.error(\"error opening popup \" + e.message);\r\n            this._loginInProgress = false;\r\n            this._acquireTokenInProgress = false;\r\n            return null;\r\n        }\r\n    };\r\n    /*\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} scopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.validateInputScope = function (scopes) {\r\n        if (!scopes || scopes.length < 1) {\r\n            return \"Scopes cannot be passed as an empty array\";\r\n        }\r\n        if (!Array.isArray(scopes)) {\r\n            throw new Error(\"API does not accept non-array scopes\");\r\n        }\r\n        if (scopes.indexOf(this.clientId) > -1) {\r\n            if (scopes.length > 1) {\r\n                return \"ClientId can only be provided as a single scope\";\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /*\r\n      * Used to remove openid and profile from the list of scopes passed by the developer.These scopes are added by default\r\n      * @hidden\r\n      */\r\n    UserAgentApplication.prototype.filterScopes = function (scopes) {\r\n        scopes = scopes.filter(function (element) {\r\n            return element !== \"openid\";\r\n        });\r\n        scopes = scopes.filter(function (element) {\r\n            return element !== \"profile\";\r\n        });\r\n        return scopes;\r\n    };\r\n    /*\r\n     * Used to add the developer requested callback to the array of callbacks for the specified scopes. The updated array is stored on the window object\r\n     * @param {string} scope - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {string} expectedState - Unique state identifier (guid).\r\n     * @param {Function} resolve - The resolve function of the promise object.\r\n     * @param {Function} reject - The reject function of the promise object.\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.registerCallback = function (expectedState, scope, resolve, reject) {\r\n        var _this = this;\r\n        this._activeRenewals[scope] = expectedState;\r\n        if (!window.callBacksMappedToRenewStates[expectedState]) {\r\n            window.callBacksMappedToRenewStates[expectedState] = [];\r\n        }\r\n        window.callBacksMappedToRenewStates[expectedState].push({ resolve: resolve, reject: reject });\r\n        if (!window.callBackMappedToRenewStates[expectedState]) {\r\n            window.callBackMappedToRenewStates[expectedState] =\r\n                function (errorDesc, token, error, tokenType) {\r\n                    _this._activeRenewals[scope] = null;\r\n                    for (var i = 0; i < window.callBacksMappedToRenewStates[expectedState].length; ++i) {\r\n                        try {\r\n                            if (errorDesc || error) {\r\n                                window.callBacksMappedToRenewStates[expectedState][i].reject(errorDesc + \": \" + error);\r\n                            }\r\n                            else if (token) {\r\n                                window.callBacksMappedToRenewStates[expectedState][i].resolve(token);\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            _this._logger.warning(e);\r\n                        }\r\n                    }\r\n                    window.callBacksMappedToRenewStates[expectedState] = null;\r\n                    window.callBackMappedToRenewStates[expectedState] = null;\r\n                };\r\n        }\r\n    };\r\n    /*\r\n     * Used to get token for the specified set of scopes from the cache\r\n     * @param {AuthenticationRequestParameters} authenticationRequest - Request sent to the STS to obtain an id_token/access_token\r\n     * @param {User} user - User for which the scopes were requested\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.getCachedToken = function (authenticationRequest, user) {\r\n        var accessTokenCacheItem = null;\r\n        var scopes = authenticationRequest.scopes;\r\n        var tokenCacheItems = this._cacheStorage.getAllAccessTokens(this.clientId, user.userIdentifier); //filter by clientId and user\r\n        if (tokenCacheItems.length === 0) {\r\n            return null;\r\n        }\r\n        var filteredItems = [];\r\n        //if no authority passed\r\n        if (!authenticationRequest.authority) {\r\n            //filter by scope\r\n            for (var i = 0; i < tokenCacheItems.length; i++) {\r\n                var cacheItem = tokenCacheItems[i];\r\n                var cachedScopes = cacheItem.key.scopes.split(\" \");\r\n                if (Utils_1.Utils.containsScope(cachedScopes, scopes)) {\r\n                    filteredItems.push(cacheItem);\r\n                }\r\n            }\r\n            //if only one cached token found\r\n            if (filteredItems.length === 1) {\r\n                accessTokenCacheItem = filteredItems[0];\r\n                authenticationRequest.authorityInstance = AuthorityFactory_1.AuthorityFactory.CreateInstance(accessTokenCacheItem.key.authority, this.validateAuthority);\r\n            }\r\n            else if (filteredItems.length > 1) {\r\n                return {\r\n                    errorDesc: \"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements like authority\",\r\n                    token: null,\r\n                    error: \"multiple_matching_tokens_detected\"\r\n                };\r\n            }\r\n            else {\r\n                //no match found. check if there was a single authority used\r\n                var authorityList = this.getUniqueAuthority(tokenCacheItems, \"authority\");\r\n                if (authorityList.length > 1) {\r\n                    return {\r\n                        errorDesc: \"Multiple authorities found in the cache. Pass authority in the API overload.\",\r\n                        token: null,\r\n                        error: \"multiple_matching_tokens_detected\"\r\n                    };\r\n                }\r\n                authenticationRequest.authorityInstance = AuthorityFactory_1.AuthorityFactory.CreateInstance(authorityList[0], this.validateAuthority);\r\n            }\r\n        }\r\n        else {\r\n            //authority was passed in the API, filter by authority and scope\r\n            for (var i = 0; i < tokenCacheItems.length; i++) {\r\n                var cacheItem = tokenCacheItems[i];\r\n                var cachedScopes = cacheItem.key.scopes.split(\" \");\r\n                if (Utils_1.Utils.containsScope(cachedScopes, scopes) && cacheItem.key.authority === authenticationRequest.authority) {\r\n                    filteredItems.push(cacheItem);\r\n                }\r\n            }\r\n            //no match\r\n            if (filteredItems.length === 0) {\r\n                return null;\r\n            }\r\n            else if (filteredItems.length === 1) {\r\n                accessTokenCacheItem = filteredItems[0];\r\n            }\r\n            else {\r\n                //more than one match found.\r\n                return {\r\n                    errorDesc: \"The cache contains multiple tokens satisfying the requirements.Call AcquireToken again providing more requirements like authority\",\r\n                    token: null,\r\n                    error: \"multiple_matching_tokens_detected\"\r\n                };\r\n            }\r\n        }\r\n        if (accessTokenCacheItem != null) {\r\n            var expired = Number(accessTokenCacheItem.value.expiresIn);\r\n            // If expiration is within offset, it will force renew\r\n            var offset = this._clockSkew || 300;\r\n            if (expired && (expired > Utils_1.Utils.now() + offset)) {\r\n                return {\r\n                    errorDesc: null,\r\n                    token: accessTokenCacheItem.value.accessToken,\r\n                    error: null\r\n                };\r\n            }\r\n            else {\r\n                this._cacheStorage.removeItem(JSON.stringify(filteredItems[0].key));\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /*\r\n     * Used to filter all cached items and return a list of unique users based on userIdentifier.\r\n     * @param {Array<User>} Users - users saved in the cache.\r\n     */\r\n    UserAgentApplication.prototype.getAllUsers = function () {\r\n        var users = [];\r\n        var accessTokenCacheItems = this._cacheStorage.getAllAccessTokens(Constants_1.Constants.clientId, Constants_1.Constants.authority);\r\n        for (var i = 0; i < accessTokenCacheItems.length; i++) {\r\n            var idToken = new IdToken_1.IdToken(accessTokenCacheItems[i].value.idToken);\r\n            var clientInfo = new ClientInfo_1.ClientInfo(accessTokenCacheItems[i].value.clientInfo);\r\n            var user = User_1.User.createUser(idToken, clientInfo, this.authority);\r\n            users.push(user);\r\n        }\r\n        return this.getUniqueUsers(users);\r\n    };\r\n    /*\r\n     * Used to filter users based on userIdentifier\r\n     * @param {Array<User>}  Users - users saved in the cache\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.getUniqueUsers = function (users) {\r\n        if (!users || users.length <= 1) {\r\n            return users;\r\n        }\r\n        var flags = [];\r\n        var uniqueUsers = [];\r\n        for (var index = 0; index < users.length; ++index) {\r\n            if (users[index].userIdentifier && flags.indexOf(users[index].userIdentifier) === -1) {\r\n                flags.push(users[index].userIdentifier);\r\n                uniqueUsers.push(users[index]);\r\n            }\r\n        }\r\n        return uniqueUsers;\r\n    };\r\n    /*\r\n    * Used to get a unique list of authoritues from the cache\r\n    * @param {Array<AccessTokenCacheItem>}  accessTokenCacheItems - accessTokenCacheItems saved in the cache\r\n    * @ignore\r\n    * @hidden\r\n    */\r\n    UserAgentApplication.prototype.getUniqueAuthority = function (accessTokenCacheItems, property) {\r\n        var authorityList = [];\r\n        var flags = [];\r\n        accessTokenCacheItems.forEach(function (element) {\r\n            if (element.key.hasOwnProperty(property) && (flags.indexOf(element.key[property]) === -1)) {\r\n                flags.push(element.key[property]);\r\n                authorityList.push(element.key[property]);\r\n            }\r\n        });\r\n        return authorityList;\r\n    };\r\n    /*\r\n     * Adds login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time\r\n     * domain_hint can be one of users/organisations which when added skips the email based discovery process of the user\r\n     * domain_req utid received as part of the clientInfo\r\n     * login_req uid received as part of clientInfo\r\n     * @param {string} urlNavigate - Authentication request url\r\n     * @param {User} user - User for which the token is requested\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.addHintParameters = function (urlNavigate, user) {\r\n        var userObject = user ? user : this.getUser();\r\n        var decodedClientInfo = userObject.userIdentifier.split(\".\");\r\n        var uid = Utils_1.Utils.base64DecodeStringUrlSafe(decodedClientInfo[0]);\r\n        var utid = Utils_1.Utils.base64DecodeStringUrlSafe(decodedClientInfo[1]);\r\n        if (!this.urlContainsQueryStringParameter(\"login_hint\", urlNavigate) && userObject.displayableId && !Utils_1.Utils.isEmpty(userObject.displayableId)) {\r\n            urlNavigate += \"&login_hint=\" + encodeURIComponent(user.displayableId);\r\n        }\r\n        if (!Utils_1.Utils.isEmpty(uid) && !Utils_1.Utils.isEmpty(utid)) {\r\n            if (!this.urlContainsQueryStringParameter(\"domain_req\", urlNavigate) && !Utils_1.Utils.isEmpty(utid)) {\r\n                urlNavigate += \"&domain_req=\" + encodeURIComponent(utid);\r\n            }\r\n            if (!this.urlContainsQueryStringParameter(\"login_req\", urlNavigate) && !Utils_1.Utils.isEmpty(uid)) {\r\n                urlNavigate += \"&login_req=\" + encodeURIComponent(uid);\r\n            }\r\n            if (!this.urlContainsQueryStringParameter(\"domain_hint\", urlNavigate) && !Utils_1.Utils.isEmpty(utid)) {\r\n                if (utid === \"9188040d-6c67-4c5b-b112-36a304b66dad\") {\r\n                    urlNavigate += \"&domain_hint=\" + encodeURIComponent(\"consumers\");\r\n                }\r\n                else {\r\n                    urlNavigate += \"&domain_hint=\" + encodeURIComponent(\"organizations\");\r\n                }\r\n            }\r\n        }\r\n        return urlNavigate;\r\n    };\r\n    /*\r\n     * Checks if the authorization endpoint URL contains query string parameters\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.urlContainsQueryStringParameter = function (name, url) {\r\n        // regex to detect pattern of a ? or & followed by the name parameter and an equals character\r\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=\");\r\n        return regex.test(url);\r\n    };\r\n    UserAgentApplication.prototype.acquireTokenRedirect = function (scopes, authority, user, extraQueryParameters) {\r\n        var _this = this;\r\n        var isValidScope = this.validateInputScope(scopes);\r\n        if (isValidScope && !Utils_1.Utils.isEmpty(isValidScope)) {\r\n            if (this._tokenReceivedCallback) {\r\n                this._tokenReceivedCallback(isValidScope, null, null, Constants_1.Constants.accessToken);\r\n                return;\r\n            }\r\n        }\r\n        if (scopes) {\r\n            scopes = this.filterScopes(scopes);\r\n        }\r\n        var userObject = user ? user : this.getUser();\r\n        if (this._acquireTokenInProgress) {\r\n            return;\r\n        }\r\n        var scope = scopes.join(\" \").toLowerCase();\r\n        if (!userObject) {\r\n            if (this._tokenReceivedCallback) {\r\n                this._tokenReceivedCallback(Constants_1.ErrorDescription.userLoginError, null, Constants_1.ErrorCodes.userLoginError, Constants_1.Constants.accessToken);\r\n                return;\r\n            }\r\n        }\r\n        this._acquireTokenInProgress = true;\r\n        var authenticationRequest;\r\n        var acquireTokenAuthority = authority ? AuthorityFactory_1.AuthorityFactory.CreateInstance(authority, this.validateAuthority) : this.authorityInstance;\r\n        acquireTokenAuthority.ResolveEndpointsAsync().then(function () {\r\n            if (Utils_1.Utils.compareObjects(userObject, _this.getUser())) {\r\n                authenticationRequest = new AuthenticationRequestParameters_1.AuthenticationRequestParameters(acquireTokenAuthority, _this.clientId, scopes, ResponseTypes.token, _this._redirectUri);\r\n            }\r\n            else {\r\n                authenticationRequest = new AuthenticationRequestParameters_1.AuthenticationRequestParameters(acquireTokenAuthority, _this.clientId, scopes, ResponseTypes.id_token_token, _this._redirectUri);\r\n            }\r\n            _this._cacheStorage.setItem(Constants_1.Constants.nonceIdToken, authenticationRequest.nonce);\r\n            var acquireTokenUserKey = Constants_1.Constants.acquireTokenUser + Constants_1.Constants.resourceDelimeter + userObject.userIdentifier + Constants_1.Constants.resourceDelimeter + authenticationRequest.state;\r\n            if (Utils_1.Utils.isEmpty(_this._cacheStorage.getItem(acquireTokenUserKey))) {\r\n                _this._cacheStorage.setItem(acquireTokenUserKey, JSON.stringify(userObject));\r\n            }\r\n            var authorityKey = Constants_1.Constants.authority + Constants_1.Constants.resourceDelimeter + authenticationRequest.state;\r\n            if (Utils_1.Utils.isEmpty(_this._cacheStorage.getItem(authorityKey))) {\r\n                _this._cacheStorage.setItem(authorityKey, acquireTokenAuthority.CanonicalAuthority);\r\n            }\r\n            if (extraQueryParameters) {\r\n                authenticationRequest.extraQueryParameters = extraQueryParameters;\r\n            }\r\n            var urlNavigate = authenticationRequest.createNavigateUrl(scopes) + \"&prompt=select_account\" + \"&response_mode=fragment\";\r\n            urlNavigate = _this.addHintParameters(urlNavigate, userObject);\r\n            if (urlNavigate) {\r\n                _this._cacheStorage.setItem(Constants_1.Constants.stateAcquireToken, authenticationRequest.state);\r\n                _this._requestType = Constants_1.Constants.renewToken;\r\n                window.location.replace(urlNavigate);\r\n            }\r\n        });\r\n    };\r\n    UserAgentApplication.prototype.acquireTokenPopup = function (scopes, authority, user, extraQueryParameters) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var isValidScope = _this.validateInputScope(scopes);\r\n            if (isValidScope && !Utils_1.Utils.isEmpty(isValidScope)) {\r\n                reject(Constants_1.ErrorCodes.inputScopesError + \":\" + isValidScope);\r\n            }\r\n            if (scopes) {\r\n                scopes = _this.filterScopes(scopes);\r\n            }\r\n            var userObject = user ? user : _this.getUser();\r\n            if (_this._acquireTokenInProgress) {\r\n                reject(Constants_1.ErrorCodes.acquireTokenProgressError + \":\" + Constants_1.ErrorDescription.acquireTokenProgressError);\r\n                return;\r\n            }\r\n            var scope = scopes.join(\" \").toLowerCase();\r\n            if (!userObject) {\r\n                reject(Constants_1.ErrorCodes.userLoginError + \":\" + Constants_1.ErrorDescription.userLoginError);\r\n                return;\r\n            }\r\n            _this._acquireTokenInProgress = true;\r\n            var authenticationRequest;\r\n            var acquireTokenAuthority = authority ? AuthorityFactory_1.AuthorityFactory.CreateInstance(authority, _this.validateAuthority) : _this.authorityInstance;\r\n            var popUpWindow = _this.openWindow(\"about:blank\", \"_blank\", 1, _this, resolve, reject);\r\n            if (!popUpWindow) {\r\n                return;\r\n            }\r\n            acquireTokenAuthority.ResolveEndpointsAsync().then(function () {\r\n                if (Utils_1.Utils.compareObjects(userObject, _this.getUser())) {\r\n                    if (scopes.indexOf(_this.clientId) > -1) {\r\n                        authenticationRequest = new AuthenticationRequestParameters_1.AuthenticationRequestParameters(acquireTokenAuthority, _this.clientId, scopes, ResponseTypes.id_token, _this._redirectUri);\r\n                    }\r\n                    else {\r\n                        authenticationRequest = new AuthenticationRequestParameters_1.AuthenticationRequestParameters(acquireTokenAuthority, _this.clientId, scopes, ResponseTypes.token, _this._redirectUri);\r\n                    }\r\n                }\r\n                else {\r\n                    authenticationRequest = new AuthenticationRequestParameters_1.AuthenticationRequestParameters(acquireTokenAuthority, _this.clientId, scopes, ResponseTypes.id_token_token, _this._redirectUri);\r\n                }\r\n                _this._cacheStorage.setItem(Constants_1.Constants.nonceIdToken, authenticationRequest.nonce);\r\n                authenticationRequest.state = authenticationRequest.state;\r\n                var acquireTokenUserKey = Constants_1.Constants.acquireTokenUser + Constants_1.Constants.resourceDelimeter + userObject.userIdentifier + Constants_1.Constants.resourceDelimeter + authenticationRequest.state;\r\n                if (Utils_1.Utils.isEmpty(_this._cacheStorage.getItem(acquireTokenUserKey))) {\r\n                    _this._cacheStorage.setItem(acquireTokenUserKey, JSON.stringify(userObject));\r\n                }\r\n                var authorityKey = Constants_1.Constants.authority + Constants_1.Constants.resourceDelimeter + authenticationRequest.state;\r\n                if (Utils_1.Utils.isEmpty(_this._cacheStorage.getItem(authorityKey))) {\r\n                    _this._cacheStorage.setItem(authorityKey, acquireTokenAuthority.CanonicalAuthority);\r\n                }\r\n                if (extraQueryParameters) {\r\n                    authenticationRequest.extraQueryParameters = extraQueryParameters;\r\n                }\r\n                var urlNavigate = authenticationRequest.createNavigateUrl(scopes) + \"&prompt=select_account\" + \"&response_mode=fragment\";\r\n                urlNavigate = _this.addHintParameters(urlNavigate, userObject);\r\n                _this._renewStates.push(authenticationRequest.state);\r\n                _this.registerCallback(authenticationRequest.state, scope, resolve, reject);\r\n                _this._requestType = Constants_1.Constants.renewToken;\r\n                if (popUpWindow) {\r\n                    popUpWindow.location.href = urlNavigate;\r\n                }\r\n            }, function () {\r\n                _this._logger.info(Constants_1.ErrorCodes.endpointResolutionError + \":\" + Constants_1.ErrorDescription.endpointResolutionError);\r\n                _this._cacheStorage.setItem(Constants_1.Constants.msalError, Constants_1.ErrorCodes.endpointResolutionError);\r\n                _this._cacheStorage.setItem(Constants_1.Constants.msalErrorDescription, Constants_1.ErrorDescription.endpointResolutionError);\r\n                if (reject) {\r\n                    reject(Constants_1.ErrorCodes.endpointResolutionError + \":\" + Constants_1.ErrorDescription.endpointResolutionError);\r\n                }\r\n                if (popUpWindow) {\r\n                    popUpWindow.close();\r\n                }\r\n            }).catch(function (err) {\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /*\r\n     * Used to get the token from cache.\r\n     * MSAL will return the cached token if it is not expired.\r\n     * Or it will send a request to the STS to obtain an access_token using a hidden iframe. To renew idToken, clientId should be passed as the only scope in the scopes array.\r\n     * @param {Array<string>} scopes - Permissions you want included in the access token. Not all scopes are  guaranteed to be included in the access token. Scopes like \"openid\" and \"profile\" are sent with every request.\r\n     * @param {string} authority - A URL indicating a directory that MSAL can use to obtain tokens.\r\n     * - In Azure AD, it is of the form https://&lt;tenant&gt;/&lt;tenant&gt;, where &lt;tenant&gt; is the directory host (e.g. https://login.microsoftonline.com) and &lt;tenant&gt; is a identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory)\r\n     * - In Azure B2C, it is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/<policyName>/\r\n     * - Default value is: \"https://login.microsoftonline.com/common\"\r\n     * @param {User} user - The user for which the scopes are requested.The default user is the logged in user.\r\n     * @param {string} extraQueryParameters - Key-value pairs to pass to the STS during the  authentication flow.\r\n     * @returns {Promise.<string>} - A Promise that is fulfilled when this function has completed, or rejected if an error was raised. Resolved with token or rejected with error.\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenSilent = function (scopes, authority, user, extraQueryParameters) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var isValidScope = _this.validateInputScope(scopes);\r\n            if (isValidScope && !Utils_1.Utils.isEmpty(isValidScope)) {\r\n                reject(Constants_1.ErrorCodes.inputScopesError + \":\" + isValidScope);\r\n            }\r\n            else {\r\n                if (scopes) {\r\n                    scopes = _this.filterScopes(scopes);\r\n                }\r\n                var scope_1 = scopes.join(\" \").toLowerCase();\r\n                var userObject_1 = user ? user : _this.getUser();\r\n                if (!userObject_1) {\r\n                    reject(Constants_1.ErrorCodes.userLoginError + \":\" + Constants_1.ErrorDescription.userLoginError);\r\n                    return;\r\n                }\r\n                var authenticationRequest_1;\r\n                var newAuthority = authority ? AuthorityFactory_1.AuthorityFactory.CreateInstance(authority, _this.validateAuthority) : _this.authorityInstance;\r\n                if (Utils_1.Utils.compareObjects(userObject_1, _this.getUser())) {\r\n                    if (scopes.indexOf(_this.clientId) > -1) {\r\n                        authenticationRequest_1 = new AuthenticationRequestParameters_1.AuthenticationRequestParameters(newAuthority, _this.clientId, scopes, ResponseTypes.id_token, _this._redirectUri);\r\n                    }\r\n                    else {\r\n                        authenticationRequest_1 = new AuthenticationRequestParameters_1.AuthenticationRequestParameters(newAuthority, _this.clientId, scopes, ResponseTypes.token, _this._redirectUri);\r\n                    }\r\n                }\r\n                else {\r\n                    authenticationRequest_1 = new AuthenticationRequestParameters_1.AuthenticationRequestParameters(newAuthority, _this.clientId, scopes, ResponseTypes.id_token_token, _this._redirectUri);\r\n                }\r\n                var cacheResult = _this.getCachedToken(authenticationRequest_1, userObject_1);\r\n                if (cacheResult) {\r\n                    if (cacheResult.token) {\r\n                        _this._logger.info(\"Token is already in cache for scope:\" + scope_1);\r\n                        resolve(cacheResult.token);\r\n                        return;\r\n                    }\r\n                    else if (cacheResult.errorDesc || cacheResult.error) {\r\n                        _this._logger.info(cacheResult.errorDesc + \":\" + cacheResult.error);\r\n                        reject(cacheResult.errorDesc + \": \" + cacheResult.error);\r\n                        return;\r\n                    }\r\n                }\r\n                _this._requestType = Constants_1.Constants.renewToken;\r\n                // cache miss\r\n                return _this.authorityInstance.ResolveEndpointsAsync()\r\n                    .then(function () {\r\n                    // refresh attept with iframe\r\n                    //Already renewing for this scope, callback when we get the token.\r\n                    if (_this._activeRenewals[scope_1]) {\r\n                        _this._logger.verbose(\"Renew token for scope: \" + scope_1 + \" is in progress. Registering callback\");\r\n                        //Active renewals contains the state for each renewal.\r\n                        _this.registerCallback(_this._activeRenewals[scope_1], scope_1, resolve, reject);\r\n                    }\r\n                    else {\r\n                        if (scopes && scopes.indexOf(_this.clientId) > -1 && scopes.length === 1) {\r\n                            // App uses idToken to send to api endpoints\r\n                            // Default scope is tracked as clientId to store this token\r\n                            _this._logger.verbose(\"renewing idToken\");\r\n                            _this.renewIdToken(scopes, resolve, reject, userObject_1, authenticationRequest_1, extraQueryParameters);\r\n                        }\r\n                        else {\r\n                            _this._logger.verbose(\"renewing accesstoken\");\r\n                            _this.renewToken(scopes, resolve, reject, userObject_1, authenticationRequest_1, extraQueryParameters);\r\n                        }\r\n                    }\r\n                }).catch(function (err) {\r\n                    reject(err);\r\n                });\r\n            }\r\n        });\r\n    };\r\n    /*\r\n     * Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left.\r\n     * registered when network errors occur and subsequent token requests for same resource are registered to the pending request.\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.loadIframeTimeout = function (urlNavigate, frameName, scope) {\r\n        var _this = this;\r\n        //set iframe session to pending\r\n        this._logger.verbose(\"Set loading state to pending for: \" + scope);\r\n        this._cacheStorage.setItem(Constants_1.Constants.renewStatus + scope, Constants_1.Constants.tokenRenewStatusInProgress);\r\n        this.loadFrame(urlNavigate, frameName);\r\n        setTimeout(function () {\r\n            if (_this._cacheStorage.getItem(Constants_1.Constants.renewStatus + scope) === Constants_1.Constants.tokenRenewStatusInProgress) {\r\n                // fail the iframe session if it\"s in pending state\r\n                _this._logger.verbose(\"Loading frame has timed out after: \" + (_this.loadFrameTimeout / 1000) + \" seconds for scope \" + scope);\r\n                var expectedState = _this._activeRenewals[scope];\r\n                if (expectedState && window.callBackMappedToRenewStates[expectedState]) {\r\n                    window.callBackMappedToRenewStates[expectedState](\"Token renewal operation failed due to timeout\", null, \"Token Renewal Failed\", Constants_1.Constants.accessToken);\r\n                }\r\n                _this._cacheStorage.setItem(Constants_1.Constants.renewStatus + scope, Constants_1.Constants.tokenRenewStatusCancelled);\r\n            }\r\n        }, this.loadFrameTimeout);\r\n    };\r\n    /*\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.loadFrame = function (urlNavigate, frameName) {\r\n        var _this = this;\r\n        // This trick overcomes iframe navigation in IE\r\n        // IE does not load the page consistently in iframe\r\n        this._logger.info(\"LoadFrame: \" + frameName);\r\n        var frameCheck = frameName;\r\n        setTimeout(function () {\r\n            var frameHandle = _this.addAdalFrame(frameCheck);\r\n            if (frameHandle.src === \"\" || frameHandle.src === \"about:blank\") {\r\n                frameHandle.src = urlNavigate;\r\n            }\r\n        }, 500);\r\n    };\r\n    /*\r\n     * Adds the hidden iframe for silent token renewal.\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.addAdalFrame = function (iframeId) {\r\n        if (typeof iframeId === \"undefined\") {\r\n            return null;\r\n        }\r\n        this._logger.info(\"Add msal frame to document:\" + iframeId);\r\n        var adalFrame = document.getElementById(iframeId);\r\n        if (!adalFrame) {\r\n            if (document.createElement &&\r\n                document.documentElement &&\r\n                (window.navigator.userAgent.indexOf(\"MSIE 5.0\") === -1)) {\r\n                var ifr = document.createElement(\"iframe\");\r\n                ifr.setAttribute(\"id\", iframeId);\r\n                ifr.style.visibility = \"hidden\";\r\n                ifr.style.position = \"absolute\";\r\n                ifr.style.width = ifr.style.height = \"0\";\r\n                ifr.style.border = \"0\";\r\n                adalFrame = document.getElementsByTagName(\"body\")[0].appendChild(ifr);\r\n            }\r\n            else if (document.body && document.body.insertAdjacentHTML) {\r\n                document.body.insertAdjacentHTML('beforeend', '<iframe name=\"' + iframeId + '\" id=\"' + iframeId + '\" style=\"display:none\"></iframe>');\r\n            }\r\n            if (window.frames && window.frames[iframeId]) {\r\n                adalFrame = window.frames[iframeId];\r\n            }\r\n        }\r\n        return adalFrame;\r\n    };\r\n    /*\r\n     * Acquires access token using a hidden iframe.\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.renewToken = function (scopes, resolve, reject, user, authenticationRequest, extraQueryParameters) {\r\n        var scope = scopes.join(\" \").toLowerCase();\r\n        this._logger.verbose(\"renewToken is called for scope:\" + scope);\r\n        var frameHandle = this.addAdalFrame(\"msalRenewFrame\" + scope);\r\n        if (extraQueryParameters) {\r\n            authenticationRequest.extraQueryParameters = extraQueryParameters;\r\n        }\r\n        var acquireTokenUserKey = Constants_1.Constants.acquireTokenUser + Constants_1.Constants.resourceDelimeter + user.userIdentifier + Constants_1.Constants.resourceDelimeter + authenticationRequest.state;\r\n        if (Utils_1.Utils.isEmpty(this._cacheStorage.getItem(acquireTokenUserKey))) {\r\n            this._cacheStorage.setItem(acquireTokenUserKey, JSON.stringify(user));\r\n        }\r\n        var authorityKey = Constants_1.Constants.authority + Constants_1.Constants.resourceDelimeter + authenticationRequest.state;\r\n        if (Utils_1.Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\r\n            this._cacheStorage.setItem(authorityKey, authenticationRequest.authority);\r\n        }\r\n        // renew happens in iframe, so it keeps javascript context\r\n        this._cacheStorage.setItem(Constants_1.Constants.nonceIdToken, authenticationRequest.nonce);\r\n        this._logger.verbose(\"Renew token Expected state: \" + authenticationRequest.state);\r\n        var urlNavigate = authenticationRequest.createNavigateUrl(scopes) + \"&prompt=none\";\r\n        urlNavigate = this.addHintParameters(urlNavigate, user);\r\n        this._renewStates.push(authenticationRequest.state);\r\n        this.registerCallback(authenticationRequest.state, scope, resolve, reject);\r\n        this._logger.infoPii(\"Navigate to:\" + urlNavigate);\r\n        frameHandle.src = \"about:blank\";\r\n        this.loadIframeTimeout(urlNavigate, \"msalRenewFrame\" + scope, scope);\r\n    };\r\n    /*\r\n     * Renews idtoken for app\"s own backend when clientId is passed as a single scope in the scopes array.\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.renewIdToken = function (scopes, resolve, reject, user, authenticationRequest, extraQueryParameters) {\r\n        var scope = scopes.join(\" \").toLowerCase();\r\n        this._logger.info(\"renewidToken is called\");\r\n        var frameHandle = this.addAdalFrame(\"msalIdTokenFrame\");\r\n        if (extraQueryParameters) {\r\n            authenticationRequest.extraQueryParameters = extraQueryParameters;\r\n        }\r\n        var acquireTokenUserKey = Constants_1.Constants.acquireTokenUser + Constants_1.Constants.resourceDelimeter + user.userIdentifier + Constants_1.Constants.resourceDelimeter + authenticationRequest.state;\r\n        if (Utils_1.Utils.isEmpty(this._cacheStorage.getItem(acquireTokenUserKey))) {\r\n            this._cacheStorage.setItem(acquireTokenUserKey, JSON.stringify(user));\r\n        }\r\n        var authorityKey = Constants_1.Constants.authority + Constants_1.Constants.resourceDelimeter + authenticationRequest.state;\r\n        if (Utils_1.Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\r\n            this._cacheStorage.setItem(authorityKey, authenticationRequest.authority);\r\n        }\r\n        this._cacheStorage.setItem(Constants_1.Constants.nonceIdToken, authenticationRequest.nonce);\r\n        this._logger.verbose(\"Renew Idtoken Expected state: \" + authenticationRequest.state);\r\n        var urlNavigate = authenticationRequest.createNavigateUrl(scopes) + \"&prompt=none\";\r\n        urlNavigate = this.addHintParameters(urlNavigate, user);\r\n        this._renewStates.push(authenticationRequest.state);\r\n        this.registerCallback(authenticationRequest.state, this.clientId, resolve, reject);\r\n        this._logger.infoPii(\"Navigate to:\" + urlNavigate);\r\n        frameHandle.src = \"about:blank\";\r\n        this.loadIframeTimeout(urlNavigate, \"msalIdTokenFrame\", this.clientId);\r\n    };\r\n    /*\r\n      * Returns the signed in user (received from a user object created at the time of login) or null.\r\n      */\r\n    UserAgentApplication.prototype.getUser = function () {\r\n        // idToken is first call\r\n        if (this._user) {\r\n            return this._user;\r\n        }\r\n        // frame is used to get idToken\r\n        var rawIdToken = this._cacheStorage.getItem(Constants_1.Constants.idTokenKey);\r\n        var rawClientInfo = this._cacheStorage.getItem(Constants_1.Constants.msalClientInfo);\r\n        if (!Utils_1.Utils.isEmpty(rawIdToken) && !Utils_1.Utils.isEmpty(rawClientInfo)) {\r\n            var idToken = new IdToken_1.IdToken(rawIdToken);\r\n            var clientInfo = new ClientInfo_1.ClientInfo(rawClientInfo);\r\n            this._user = User_1.User.createUser(idToken, clientInfo, this.authority);\r\n            return this._user;\r\n        }\r\n        return null;\r\n    };\r\n    /*\r\n     * This method must be called for processing the response received from the STS. It extracts the hash, processes the token or error information and saves it in the cache. It then\r\n     * calls the registered callbacks in case of redirect or resolves the promises with the result.\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.handleAuthenticationResponse = function (hash) {\r\n        if (hash == null) {\r\n            hash = window.location.hash;\r\n        }\r\n        var self = null;\r\n        var isPopup = false;\r\n        var isWindowOpenerMsal = false;\r\n        try {\r\n            isWindowOpenerMsal = window.opener && window.opener.msal && window.opener.msal !== window.msal;\r\n        }\r\n        catch (err) {\r\n            // err = SecurityError: Blocked a frame with origin \"[url]\" from accessing a cross-origin frame.\r\n            isWindowOpenerMsal = false;\r\n        }\r\n        if (isWindowOpenerMsal) {\r\n            self = window.opener.msal;\r\n            isPopup = true;\r\n        }\r\n        else if (window.parent && window.parent.msal) {\r\n            self = window.parent.msal;\r\n        }\r\n        var requestInfo = self.getRequestInfo(hash);\r\n        var token = null, tokenReceivedCallback = null, tokenType, saveToken = true;\r\n        self._logger.info(\"Returned from redirect url\");\r\n        if (window.parent !== window && window.parent.callBackMappedToRenewStates[requestInfo.stateResponse]) {\r\n            tokenReceivedCallback = window.parent.callBackMappedToRenewStates[requestInfo.stateResponse];\r\n        }\r\n        else if (window.opener && window.opener.msal && window.opener.callBackMappedToRenewStates[requestInfo.stateResponse]) {\r\n            tokenReceivedCallback = window.opener.callBackMappedToRenewStates[requestInfo.stateResponse];\r\n        }\r\n        else {\r\n            if (self._navigateToLoginRequestUrl) {\r\n                tokenReceivedCallback = null;\r\n                self._cacheStorage.setItem(Constants_1.Constants.urlHash, hash);\r\n                saveToken = false;\r\n                if (window.parent === window && !isPopup) {\r\n                    window.location.href = self._cacheStorage.getItem(Constants_1.Constants.loginRequest);\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                tokenReceivedCallback = self._tokenReceivedCallback;\r\n                window.location.hash = '';\r\n            }\r\n        }\r\n        self.saveTokenFromHash(requestInfo);\r\n        if ((requestInfo.requestType === Constants_1.Constants.renewToken) && window.parent) {\r\n            if (window.parent !== window) {\r\n                self._logger.verbose(\"Window is in iframe, acquiring token silently\");\r\n            }\r\n            else {\r\n                self._logger.verbose(\"acquiring token interactive in progress\");\r\n            }\r\n            token = requestInfo.parameters[Constants_1.Constants.accessToken] || requestInfo.parameters[Constants_1.Constants.idToken];\r\n            tokenType = Constants_1.Constants.accessToken;\r\n        }\r\n        else if (requestInfo.requestType === Constants_1.Constants.login) {\r\n            token = requestInfo.parameters[Constants_1.Constants.idToken];\r\n            tokenType = Constants_1.Constants.idToken;\r\n        }\r\n        var errorDesc = requestInfo.parameters[Constants_1.Constants.errorDescription];\r\n        var error = requestInfo.parameters[Constants_1.Constants.error];\r\n        try {\r\n            if (tokenReceivedCallback) {\r\n                tokenReceivedCallback.call(self, errorDesc, token, error, tokenType);\r\n            }\r\n        }\r\n        catch (err) {\r\n            self._logger.error(\"Error occurred in token received callback function: \" + err);\r\n        }\r\n        for (var i = 0; i < self._openedWindows.length; i++) {\r\n            self._openedWindows[i].close();\r\n        }\r\n    };\r\n    /*\r\n     * This method must be called for processing the response received from AAD. It extracts the hash, processes the token or error, saves it in the cache and calls the registered callbacks with the result.\r\n     * @param {string} authority authority received in the redirect response from AAD.\r\n     * @param {TokenResponse} requestInfo an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n     * @param {User} user user object for which scopes are consented for. The default user is the logged in user.\r\n     * @param {ClientInfo} clientInfo clientInfo received as part of the response comprising of fields uid and utid.\r\n     * @param {IdToken} idToken idToken received as part of the response.\r\n     * @ignore\r\n     * @private\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.saveAccessToken = function (authority, tokenResponse, user, clientInfo, idToken) {\r\n        var scope;\r\n        var clientObj = new ClientInfo_1.ClientInfo(clientInfo);\r\n        if (tokenResponse.parameters.hasOwnProperty(\"scope\")) {\r\n            scope = tokenResponse.parameters[\"scope\"];\r\n            var consentedScopes = scope.split(\" \");\r\n            var accessTokenCacheItems = this._cacheStorage.getAllAccessTokens(this.clientId, authority);\r\n            for (var i = 0; i < accessTokenCacheItems.length; i++) {\r\n                var accessTokenCacheItem = accessTokenCacheItems[i];\r\n                if (accessTokenCacheItem.key.userIdentifier === user.userIdentifier) {\r\n                    var cachedScopes = accessTokenCacheItem.key.scopes.split(\" \");\r\n                    if (Utils_1.Utils.isIntersectingScopes(cachedScopes, consentedScopes)) {\r\n                        this._cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n                    }\r\n                }\r\n            }\r\n            var accessTokenKey = new AccessTokenKey_1.AccessTokenKey(authority, this.clientId, scope, clientObj.uid, clientObj.utid);\r\n            var accessTokenValue = new AccessTokenValue_1.AccessTokenValue(tokenResponse.parameters[Constants_1.Constants.accessToken], idToken.rawIdToken, Utils_1.Utils.expiresIn(tokenResponse.parameters[Constants_1.Constants.expiresIn]).toString(), clientInfo);\r\n            this._cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\r\n        }\r\n        else {\r\n            scope = this.clientId;\r\n            var accessTokenKey = new AccessTokenKey_1.AccessTokenKey(authority, this.clientId, scope, clientObj.uid, clientObj.utid);\r\n            var accessTokenValue = new AccessTokenValue_1.AccessTokenValue(tokenResponse.parameters[Constants_1.Constants.idToken], tokenResponse.parameters[Constants_1.Constants.idToken], idToken.expiration, clientInfo);\r\n            this._cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\r\n        }\r\n    };\r\n    /*\r\n     * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the user object.\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.saveTokenFromHash = function (tokenResponse) {\r\n        this._logger.info(\"State status:\" + tokenResponse.stateMatch + \"; Request type:\" + tokenResponse.requestType);\r\n        this._cacheStorage.setItem(Constants_1.Constants.msalError, \"\");\r\n        this._cacheStorage.setItem(Constants_1.Constants.msalErrorDescription, \"\");\r\n        var scope = \"\";\r\n        if (tokenResponse.parameters.hasOwnProperty(\"scope\")) {\r\n            scope = tokenResponse.parameters[\"scope\"];\r\n        }\r\n        else {\r\n            scope = this.clientId;\r\n        }\r\n        // Record error\r\n        if (tokenResponse.parameters.hasOwnProperty(Constants_1.Constants.errorDescription) || tokenResponse.parameters.hasOwnProperty(Constants_1.Constants.error)) {\r\n            this._logger.info(\"Error :\" + tokenResponse.parameters[Constants_1.Constants.error] + \"; Error description:\" + tokenResponse.parameters[Constants_1.Constants.errorDescription]);\r\n            this._cacheStorage.setItem(Constants_1.Constants.msalError, tokenResponse.parameters[\"error\"]);\r\n            this._cacheStorage.setItem(Constants_1.Constants.msalErrorDescription, tokenResponse.parameters[Constants_1.Constants.errorDescription]);\r\n            if (tokenResponse.requestType === Constants_1.Constants.login) {\r\n                this._loginInProgress = false;\r\n                this._cacheStorage.setItem(Constants_1.Constants.loginError, tokenResponse.parameters[Constants_1.Constants.errorDescription] + \":\" + tokenResponse.parameters[Constants_1.Constants.error]);\r\n            }\r\n            if (tokenResponse.requestType === Constants_1.Constants.renewToken) {\r\n                this._acquireTokenInProgress = false;\r\n            }\r\n        }\r\n        else {\r\n            // It must verify the state from redirect\r\n            if (tokenResponse.stateMatch) {\r\n                // record tokens to storage if exists\r\n                this._logger.info(\"State is right\");\r\n                if (tokenResponse.parameters.hasOwnProperty(Constants_1.Constants.sessionState)) {\r\n                    this._cacheStorage.setItem(Constants_1.Constants.msalSessionState, tokenResponse.parameters[Constants_1.Constants.sessionState]);\r\n                }\r\n                var idToken;\r\n                var clientInfo = \"\";\r\n                if (tokenResponse.parameters.hasOwnProperty(Constants_1.Constants.accessToken)) {\r\n                    this._logger.info(\"Fragment has access token\");\r\n                    this._acquireTokenInProgress = false;\r\n                    var user = void 0;\r\n                    if (tokenResponse.parameters.hasOwnProperty(Constants_1.Constants.idToken)) {\r\n                        idToken = new IdToken_1.IdToken(tokenResponse.parameters[Constants_1.Constants.idToken]);\r\n                    }\r\n                    else {\r\n                        idToken = new IdToken_1.IdToken(this._cacheStorage.getItem(Constants_1.Constants.idTokenKey));\r\n                    }\r\n                    var authorityKey = Constants_1.Constants.authority + Constants_1.Constants.resourceDelimeter + tokenResponse.stateResponse;\r\n                    var authority = void 0;\r\n                    if (!Utils_1.Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\r\n                        authority = this._cacheStorage.getItem(authorityKey);\r\n                        authority = Utils_1.Utils.replaceFirstPath(authority, idToken.tenantId);\r\n                    }\r\n                    if (tokenResponse.parameters.hasOwnProperty(Constants_1.Constants.clientInfo)) {\r\n                        clientInfo = tokenResponse.parameters[Constants_1.Constants.clientInfo];\r\n                        user = User_1.User.createUser(idToken, new ClientInfo_1.ClientInfo(clientInfo), authority);\r\n                    }\r\n                    else {\r\n                        this._logger.warning(\"ClientInfo not received in the response from AAD\");\r\n                        user = User_1.User.createUser(idToken, new ClientInfo_1.ClientInfo(clientInfo), authority);\r\n                    }\r\n                    var acquireTokenUserKey = Constants_1.Constants.acquireTokenUser + Constants_1.Constants.resourceDelimeter + user.userIdentifier + Constants_1.Constants.resourceDelimeter + tokenResponse.stateResponse;\r\n                    var acquireTokenUser = void 0;\r\n                    if (!Utils_1.Utils.isEmpty(this._cacheStorage.getItem(acquireTokenUserKey))) {\r\n                        acquireTokenUser = JSON.parse(this._cacheStorage.getItem(acquireTokenUserKey));\r\n                        if (user && acquireTokenUser && Utils_1.Utils.compareObjects(user, acquireTokenUser)) {\r\n                            this.saveAccessToken(authority, tokenResponse, user, clientInfo, idToken);\r\n                            this._logger.info(\"The user object received in the response is the same as the one passed in the acquireToken request\");\r\n                        }\r\n                        else {\r\n                            this._logger.warning(\"The user object created from the response is not the same as the one passed in the acquireToken request\");\r\n                        }\r\n                    }\r\n                }\r\n                if (tokenResponse.parameters.hasOwnProperty(Constants_1.Constants.idToken)) {\r\n                    if (scope.indexOf(this.clientId) > -1) {\r\n                        this._logger.info(\"Fragment has id token\");\r\n                        this._loginInProgress = false;\r\n                        idToken = new IdToken_1.IdToken(tokenResponse.parameters[Constants_1.Constants.idToken]);\r\n                        if (tokenResponse.parameters.hasOwnProperty(Constants_1.Constants.clientInfo)) {\r\n                            clientInfo = tokenResponse.parameters[Constants_1.Constants.clientInfo];\r\n                        }\r\n                        else {\r\n                            this._logger.warning(\"ClientInfo not received in the response from AAD\");\r\n                        }\r\n                        var authorityKey = Constants_1.Constants.authority + Constants_1.Constants.resourceDelimeter + tokenResponse.stateResponse;\r\n                        var authority = void 0;\r\n                        if (!Utils_1.Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\r\n                            authority = this._cacheStorage.getItem(authorityKey);\r\n                            authority = Utils_1.Utils.replaceFirstPath(authority, idToken.tenantId);\r\n                        }\r\n                        this._user = User_1.User.createUser(idToken, new ClientInfo_1.ClientInfo(clientInfo), authority);\r\n                        if (idToken && idToken.nonce) {\r\n                            if (idToken.nonce !== this._cacheStorage.getItem(Constants_1.Constants.nonceIdToken)) {\r\n                                this._user = null;\r\n                                this._cacheStorage.setItem(Constants_1.Constants.loginError, \"Nonce Mismatch.Expected: \" + this._cacheStorage.getItem(Constants_1.Constants.nonceIdToken) + \",\" + \"Actual: \" + idToken.nonce);\r\n                            }\r\n                            else {\r\n                                this._cacheStorage.setItem(Constants_1.Constants.idTokenKey, tokenResponse.parameters[Constants_1.Constants.idToken]);\r\n                                this._cacheStorage.setItem(Constants_1.Constants.msalClientInfo, clientInfo);\r\n                                // Save idToken as access token for app itself\r\n                                this.saveAccessToken(authority, tokenResponse, this._user, clientInfo, idToken);\r\n                            }\r\n                        }\r\n                        else {\r\n                            this._cacheStorage.setItem(Constants_1.Constants.msalError, \"invalid idToken\");\r\n                            this._cacheStorage.setItem(Constants_1.Constants.msalErrorDescription, \"Invalid idToken. idToken: \" + tokenResponse.parameters[Constants_1.Constants.idToken]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._cacheStorage.setItem(Constants_1.Constants.msalError, \"Invalid_state\");\r\n                this._cacheStorage.setItem(Constants_1.Constants.msalErrorDescription, \"Invalid_state. state: \" + tokenResponse.stateResponse);\r\n            }\r\n        }\r\n        this._cacheStorage.setItem(Constants_1.Constants.renewStatus + scope, Constants_1.Constants.tokenRenewStatusCompleted);\r\n        this._cacheStorage.removeAcquireTokenEntries(Constants_1.Constants.acquireTokenUser, Constants_1.Constants.renewStatus);\r\n        this._cacheStorage.removeAcquireTokenEntries(Constants_1.Constants.authority + Constants_1.Constants.resourceDelimeter, Constants_1.Constants.renewStatus);\r\n    };\r\n    /*\r\n     * Checks if the redirect response is received from the STS. In case of redirect, the url fragment has either id_token, access_token or error.\r\n     * @param {string} hash - Hash passed from redirect page.\r\n     * @returns {Boolean} - true if response contains id_token, access_token or error, false otherwise.\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.isCallback = function (hash) {\r\n        hash = this.getHash(hash);\r\n        var parameters = Utils_1.Utils.deserialize(hash);\r\n        return (parameters.hasOwnProperty(Constants_1.Constants.errorDescription) ||\r\n            parameters.hasOwnProperty(Constants_1.Constants.error) ||\r\n            parameters.hasOwnProperty(Constants_1.Constants.accessToken) ||\r\n            parameters.hasOwnProperty(Constants_1.Constants.idToken));\r\n    };\r\n    /*\r\n     * Returns the anchor part(#) of the URL\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.getHash = function (hash) {\r\n        if (hash.indexOf(\"#/\") > -1) {\r\n            hash = hash.substring(hash.indexOf(\"#/\") + 2);\r\n        }\r\n        else if (hash.indexOf(\"#\") > -1) {\r\n            hash = hash.substring(1);\r\n        }\r\n        return hash;\r\n    };\r\n    /*\r\n      * Creates a requestInfo object from the URL fragment and returns it.\r\n      * @param {string} hash  -  Hash passed from redirect page\r\n      * @returns {TokenResponse} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n      * @ignore\r\n      * @hidden\r\n      */\r\n    UserAgentApplication.prototype.getRequestInfo = function (hash) {\r\n        hash = this.getHash(hash);\r\n        var parameters = Utils_1.Utils.deserialize(hash);\r\n        var tokenResponse = new RequestInfo_1.TokenResponse();\r\n        if (parameters) {\r\n            tokenResponse.parameters = parameters;\r\n            if (parameters.hasOwnProperty(Constants_1.Constants.errorDescription) ||\r\n                parameters.hasOwnProperty(Constants_1.Constants.error) ||\r\n                parameters.hasOwnProperty(Constants_1.Constants.accessToken) ||\r\n                parameters.hasOwnProperty(Constants_1.Constants.idToken)) {\r\n                tokenResponse.valid = true;\r\n                // which call\r\n                var stateResponse = void 0;\r\n                if (parameters.hasOwnProperty(\"state\")) {\r\n                    stateResponse = parameters.state;\r\n                }\r\n                else {\r\n                    return tokenResponse;\r\n                }\r\n                tokenResponse.stateResponse = stateResponse;\r\n                // async calls can fire iframe and login request at the same time if developer does not use the API as expected\r\n                // incoming callback needs to be looked up to find the request type\r\n                if (stateResponse === this._cacheStorage.getItem(Constants_1.Constants.stateLogin)) {\r\n                    tokenResponse.requestType = Constants_1.Constants.login;\r\n                    tokenResponse.stateMatch = true;\r\n                    return tokenResponse;\r\n                }\r\n                else if (stateResponse === this._cacheStorage.getItem(Constants_1.Constants.stateAcquireToken)) {\r\n                    tokenResponse.requestType = Constants_1.Constants.renewToken;\r\n                    tokenResponse.stateMatch = true;\r\n                    return tokenResponse;\r\n                }\r\n                // external api requests may have many renewtoken requests for different resource\r\n                if (!tokenResponse.stateMatch) {\r\n                    if (window.parent && window.parent !== window) {\r\n                        tokenResponse.requestType = Constants_1.Constants.renewToken;\r\n                    }\r\n                    else {\r\n                        tokenResponse.requestType = this._requestType;\r\n                    }\r\n                    var statesInParentContext = this._renewStates;\r\n                    for (var i = 0; i < statesInParentContext.length; i++) {\r\n                        if (statesInParentContext[i] === tokenResponse.stateResponse) {\r\n                            tokenResponse.stateMatch = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return tokenResponse;\r\n    };\r\n    /*\r\n      * Extracts scope value from the state sent with the authentication request.\r\n      * @returns {string} scope.\r\n      * @ignore\r\n      * @hidden\r\n      */\r\n    UserAgentApplication.prototype.getScopeFromState = function (state) {\r\n        if (state) {\r\n            var splitIndex = state.indexOf(\"|\");\r\n            if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n                return state.substring(splitIndex + 1);\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /*\r\n      * Returns whether current window is in ifram for token renewal\r\n      * @ignore\r\n      * @hidden\r\n      */\r\n    UserAgentApplication.prototype.isInIframe = function () {\r\n        return window.parent !== window;\r\n    };\r\n    tslib_1.__decorate([\r\n        resolveTokenOnlyIfOutOfIframe\r\n    ], UserAgentApplication.prototype, \"acquireTokenSilent\", null);\r\n    return UserAgentApplication;\r\n}());\r\nexports.UserAgentApplication = UserAgentApplication;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/*\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the \"Software\"), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils_1 = __webpack_require__(0);\r\n/*\r\n * @hidden\r\n */\r\nvar AccessTokenKey = /** @class */ (function () {\r\n    function AccessTokenKey(authority, clientId, scopes, uid, utid) {\r\n        this.authority = authority;\r\n        this.clientId = clientId;\r\n        this.scopes = scopes;\r\n        this.userIdentifier = Utils_1.Utils.base64EncodeStringUrlSafe(uid) + \".\" + Utils_1.Utils.base64EncodeStringUrlSafe(utid);\r\n    }\r\n    return AccessTokenKey;\r\n}());\r\nexports.AccessTokenKey = AccessTokenKey;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * @hidden\r\n */\r\nvar AccessTokenValue = /** @class */ (function () {\r\n    function AccessTokenValue(accessToken, idToken, expiresIn, clientInfo) {\r\n        this.accessToken = accessToken;\r\n        this.idToken = idToken;\r\n        this.expiresIn = expiresIn;\r\n        this.clientInfo = clientInfo;\r\n    }\r\n    return AccessTokenValue;\r\n}());\r\nexports.AccessTokenValue = AccessTokenValue;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils_1 = __webpack_require__(0);\r\n/*\r\n * @hidden\r\n */\r\nvar AuthenticationRequestParameters = /** @class */ (function () {\r\n    function AuthenticationRequestParameters(authority, clientId, scope, responseType, redirectUri) {\r\n        this.authorityInstance = authority;\r\n        this.clientId = clientId;\r\n        this.scopes = scope;\r\n        this.responseType = responseType;\r\n        this.redirectUri = redirectUri;\r\n        // randomly generated values\r\n        this.correlationId = Utils_1.Utils.createNewGuid();\r\n        this.state = Utils_1.Utils.createNewGuid();\r\n        this.nonce = Utils_1.Utils.createNewGuid();\r\n        // telemetry information\r\n        this.xClientSku = \"MSAL.JS\";\r\n        this.xClientVer = Utils_1.Utils.getLibraryVersion();\r\n    }\r\n    Object.defineProperty(AuthenticationRequestParameters.prototype, \"authority\", {\r\n        get: function () {\r\n            return this.authorityInstance.CanonicalAuthority;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AuthenticationRequestParameters.prototype.createNavigateUrl = function (scopes) {\r\n        if (!scopes) {\r\n            scopes = [this.clientId];\r\n        }\r\n        if (scopes.indexOf(this.clientId) === -1) {\r\n            scopes.push(this.clientId);\r\n        }\r\n        var str = [];\r\n        str.push(\"response_type=\" + this.responseType);\r\n        this.translateclientIdUsedInScope(scopes);\r\n        str.push(\"scope=\" + encodeURIComponent(this.parseScope(scopes)));\r\n        str.push(\"client_id=\" + encodeURIComponent(this.clientId));\r\n        str.push(\"redirect_uri=\" + encodeURIComponent(this.redirectUri));\r\n        str.push(\"state=\" + encodeURIComponent(this.state));\r\n        str.push(\"nonce=\" + encodeURIComponent(this.nonce));\r\n        str.push(\"client_info=1\");\r\n        str.push(\"x-client-SKU=\" + this.xClientSku);\r\n        str.push(\"x-client-Ver=\" + this.xClientVer);\r\n        if (this.extraQueryParameters) {\r\n            str.push(this.extraQueryParameters);\r\n        }\r\n        str.push(\"client-request-id=\" + encodeURIComponent(this.correlationId));\r\n        var authEndpoint = this.authorityInstance.AuthorizationEndpoint;\r\n        // if the endpoint already has queryparams, lets add to it, otherwise add the first one\r\n        if (authEndpoint.indexOf(\"?\") < 0) {\r\n            authEndpoint += \"?\";\r\n        }\r\n        else {\r\n            authEndpoint += \"&\";\r\n        }\r\n        var requestUrl = \"\" + authEndpoint + str.join(\"&\");\r\n        return requestUrl;\r\n    };\r\n    AuthenticationRequestParameters.prototype.translateclientIdUsedInScope = function (scopes) {\r\n        var clientIdIndex = scopes.indexOf(this.clientId);\r\n        if (clientIdIndex >= 0) {\r\n            scopes.splice(clientIdIndex, 1);\r\n            if (scopes.indexOf(\"openid\") === -1) {\r\n                scopes.push(\"openid\");\r\n            }\r\n            if (scopes.indexOf(\"profile\") === -1) {\r\n                scopes.push(\"profile\");\r\n            }\r\n        }\r\n    };\r\n    AuthenticationRequestParameters.prototype.parseScope = function (scopes) {\r\n        var scopeList = \"\";\r\n        if (scopes) {\r\n            for (var i = 0; i < scopes.length; ++i) {\r\n                scopeList += (i !== scopes.length - 1) ? scopes[i] + \" \" : scopes[i];\r\n            }\r\n        }\r\n        return scopeList;\r\n    };\r\n    return AuthenticationRequestParameters;\r\n}());\r\nexports.AuthenticationRequestParameters = AuthenticationRequestParameters;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils_1 = __webpack_require__(0);\r\n/*\r\n * @hidden\r\n */\r\nvar ClientInfo = /** @class */ (function () {\r\n    function ClientInfo(rawClientInfo) {\r\n        if (!rawClientInfo || Utils_1.Utils.isEmpty(rawClientInfo)) {\r\n            this.uid = \"\";\r\n            this.utid = \"\";\r\n            return;\r\n        }\r\n        try {\r\n            var decodedClientInfo = Utils_1.Utils.base64DecodeStringUrlSafe(rawClientInfo);\r\n            var clientInfo = JSON.parse(decodedClientInfo);\r\n            if (clientInfo) {\r\n                if (clientInfo.hasOwnProperty(\"uid\")) {\r\n                    this.uid = clientInfo.uid;\r\n                }\r\n                if (clientInfo.hasOwnProperty(\"utid\")) {\r\n                    this.utid = clientInfo.utid;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n    Object.defineProperty(ClientInfo.prototype, \"uid\", {\r\n        get: function () {\r\n            return this._uid ? this._uid : \"\";\r\n        },\r\n        set: function (uid) {\r\n            this._uid = uid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientInfo.prototype, \"utid\", {\r\n        get: function () {\r\n            return this._utid ? this._utid : \"\";\r\n        },\r\n        set: function (utid) {\r\n            this._utid = utid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ClientInfo;\r\n}());\r\nexports.ClientInfo = ClientInfo;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/*\r\n  * Copyright (c) Microsoft Corporation\r\n  *  All Rights Reserved\r\n  *  MIT License\r\n  *\r\n  * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n  * software and associated documentation files (the \"Software\"), to deal in the Software\r\n  * without restriction, including without limitation the rights to use, copy, modify,\r\n  * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n  * permit persons to whom the Software is furnished to do so, subject to the following\r\n  * conditions:\r\n  *\r\n  * The above copyright notice and this permission notice shall be\r\n  * included in all copies or substantial portions of the Software.\r\n  *\r\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n  * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n  * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n  */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils_1 = __webpack_require__(0);\r\n/*\r\n * @hidden\r\n */\r\nvar IdToken = /** @class */ (function () {\r\n    function IdToken(rawIdToken) {\r\n        if (Utils_1.Utils.isEmpty(rawIdToken)) {\r\n            throw new Error(\"null or empty raw idtoken\");\r\n        }\r\n        try {\r\n            this.rawIdToken = rawIdToken;\r\n            this.decodedIdToken = Utils_1.Utils.extractIdToken(rawIdToken);\r\n            if (this.decodedIdToken) {\r\n                if (this.decodedIdToken.hasOwnProperty(\"iss\")) {\r\n                    this.issuer = this.decodedIdToken[\"iss\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"oid\")) {\r\n                    this.objectId = this.decodedIdToken['oid'];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"sub\")) {\r\n                    this.subject = this.decodedIdToken[\"sub\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"tid\")) {\r\n                    this.tenantId = this.decodedIdToken[\"tid\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"ver\")) {\r\n                    this.version = this.decodedIdToken[\"ver\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"preferred_username\")) {\r\n                    this.preferredName = this.decodedIdToken[\"preferred_username\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"name\")) {\r\n                    this.name = this.decodedIdToken[\"name\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"nonce\")) {\r\n                    this.nonce = this.decodedIdToken[\"nonce\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"exp\")) {\r\n                    this.expiration = this.decodedIdToken[\"exp\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"home_oid\")) {\r\n                    this.homeObjectId = this.decodedIdToken[\"home_oid\"];\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            throw new Error(\"Failed to parse the returned id token\");\r\n        }\r\n    }\r\n    return IdToken;\r\n}());\r\nexports.IdToken = IdToken;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants_1 = __webpack_require__(5);\r\nvar AccessTokenCacheItem_1 = __webpack_require__(18);\r\n/*\r\n * @hidden\r\n */\r\nvar Storage = /** @class */ (function () {\r\n    function Storage(cacheLocation) {\r\n        if (Storage._instance) {\r\n            return Storage._instance;\r\n        }\r\n        this._cacheLocation = cacheLocation;\r\n        this._localStorageSupported = typeof window[this._cacheLocation] !== \"undefined\" && window[this._cacheLocation] != null;\r\n        this._sessionStorageSupported = typeof window[cacheLocation] !== \"undefined\" && window[cacheLocation] != null;\r\n        Storage._instance = this;\r\n        if (!this._localStorageSupported && !this._sessionStorageSupported) {\r\n            throw new Error(\"localStorage and sessionStorage not supported\");\r\n        }\r\n        return Storage._instance;\r\n    }\r\n    // add value to storage\r\n    Storage.prototype.setItem = function (key, value) {\r\n        if (window[this._cacheLocation]) {\r\n            window[this._cacheLocation].setItem(key, value);\r\n        }\r\n        else {\r\n            throw new Error(\"localStorage and sessionStorage are not supported\");\r\n        }\r\n    };\r\n    // get one item by key from storage\r\n    Storage.prototype.getItem = function (key) {\r\n        if (window[this._cacheLocation]) {\r\n            return window[this._cacheLocation].getItem(key);\r\n        }\r\n        else {\r\n            throw new Error(\"localStorage and sessionStorage are not supported\");\r\n        }\r\n    };\r\n    // remove value from storage\r\n    Storage.prototype.removeItem = function (key) {\r\n        if (window[this._cacheLocation]) {\r\n            return window[this._cacheLocation].removeItem(key);\r\n        }\r\n        else {\r\n            throw new Error(\"localStorage and sessionStorage are not supported\");\r\n        }\r\n    };\r\n    // clear storage (remove all items from it)\r\n    Storage.prototype.clear = function () {\r\n        if (window[this._cacheLocation]) {\r\n            return window[this._cacheLocation].clear();\r\n        }\r\n        else {\r\n            throw new Error(\"localStorage and sessionStorage are not supported\");\r\n        }\r\n    };\r\n    Storage.prototype.getAllAccessTokens = function (clientId, userIdentifier) {\r\n        var results = [];\r\n        var accessTokenCacheItem;\r\n        var storage = window[this._cacheLocation];\r\n        if (storage) {\r\n            var key = void 0;\r\n            for (key in storage) {\r\n                if (storage.hasOwnProperty(key)) {\r\n                    if (key.match(clientId) && key.match(userIdentifier)) {\r\n                        var value = this.getItem(key);\r\n                        if (value) {\r\n                            accessTokenCacheItem = new AccessTokenCacheItem_1.AccessTokenCacheItem(JSON.parse(key), JSON.parse(value));\r\n                            results.push(accessTokenCacheItem);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"localStorage and sessionStorage are not supported\");\r\n        }\r\n        return results;\r\n    };\r\n    Storage.prototype.removeAcquireTokenEntries = function (acquireTokenUser, acquireTokenStatus) {\r\n        var storage = window[this._cacheLocation];\r\n        if (storage) {\r\n            var key = void 0;\r\n            for (key in storage) {\r\n                if (storage.hasOwnProperty(key)) {\r\n                    if ((key.indexOf(acquireTokenUser) > -1) || (key.indexOf(acquireTokenStatus) > -1)) {\r\n                        this.removeItem(key);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"localStorage and sessionStorage are not supported\");\r\n        }\r\n    };\r\n    Storage.prototype.resetCacheItems = function () {\r\n        var storage = window[this._cacheLocation];\r\n        if (storage) {\r\n            var key = void 0;\r\n            for (key in storage) {\r\n                if (storage.hasOwnProperty(key) && key.indexOf(Constants_1.Constants.msal) !== -1) {\r\n                    storage[key] = \"\";\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"localStorage and sessionStorage are not supported\");\r\n        }\r\n    };\r\n    return Storage;\r\n}());\r\nexports.Storage = Storage;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * @hidden\r\n */\r\nvar AccessTokenCacheItem = /** @class */ (function () {\r\n    function AccessTokenCacheItem(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    return AccessTokenCacheItem;\r\n}());\r\nexports.AccessTokenCacheItem = AccessTokenCacheItem;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * @hidden\r\n */\r\nvar TokenResponse = /** @class */ (function () {\r\n    function TokenResponse() {\r\n        this.valid = false;\r\n        this.parameters = {};\r\n        this.stateMatch = false;\r\n        this.stateResponse = \"\";\r\n        this.requestType = \"unknown\";\r\n    }\r\n    return TokenResponse;\r\n}());\r\nexports.TokenResponse = TokenResponse;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * @hidden\r\n */\r\nvar Utils_1 = __webpack_require__(0);\r\nvar AadAuthority_1 = __webpack_require__(7);\r\nvar B2cAuthority_1 = __webpack_require__(21);\r\nvar Authority_1 = __webpack_require__(3);\r\nvar ErrorMessage_1 = __webpack_require__(4);\r\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    /*\r\n    * Parse the url and determine the type of authority\r\n    */\r\n    AuthorityFactory.DetectAuthorityFromUrl = function (authorityUrl) {\r\n        authorityUrl = Utils_1.Utils.CanonicalizeUri(authorityUrl);\r\n        var components = Utils_1.Utils.GetUrlComponents(authorityUrl);\r\n        var pathSegments = components.PathSegments;\r\n        switch (pathSegments[0]) {\r\n            case \"tfp\":\r\n                return Authority_1.AuthorityType.B2C;\r\n            case \"adfs\":\r\n                return Authority_1.AuthorityType.Adfs;\r\n            default:\r\n                return Authority_1.AuthorityType.Aad;\r\n        }\r\n    };\r\n    /*\r\n    * Create an authority object of the correct type based on the url\r\n    * Performs basic authority validation - checks to see if the authority is of a valid type (eg aad, b2c)\r\n    */\r\n    AuthorityFactory.CreateInstance = function (authorityUrl, validateAuthority) {\r\n        var type = AuthorityFactory.DetectAuthorityFromUrl(authorityUrl);\r\n        // Depending on above detection, create the right type.\r\n        switch (type) {\r\n            case Authority_1.AuthorityType.B2C:\r\n                return new B2cAuthority_1.B2cAuthority(authorityUrl, validateAuthority);\r\n            case Authority_1.AuthorityType.Aad:\r\n                return new AadAuthority_1.AadAuthority(authorityUrl, validateAuthority);\r\n            default:\r\n                throw ErrorMessage_1.ErrorMessage.invalidAuthorityType;\r\n        }\r\n    };\r\n    return AuthorityFactory;\r\n}());\r\nexports.AuthorityFactory = AuthorityFactory;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(1);\r\nvar AadAuthority_1 = __webpack_require__(7);\r\nvar Authority_1 = __webpack_require__(3);\r\nvar ErrorMessage_1 = __webpack_require__(4);\r\nvar Utils_1 = __webpack_require__(0);\r\n/*\r\n * @hidden\r\n */\r\nvar B2cAuthority = /** @class */ (function (_super) {\r\n    tslib_1.__extends(B2cAuthority, _super);\r\n    function B2cAuthority(authority, validateAuthority) {\r\n        var _this = _super.call(this, authority, validateAuthority) || this;\r\n        var urlComponents = Utils_1.Utils.GetUrlComponents(authority);\r\n        var pathSegments = urlComponents.PathSegments;\r\n        if (pathSegments.length < 3) {\r\n            throw ErrorMessage_1.ErrorMessage.b2cAuthorityUriInvalidPath;\r\n        }\r\n        _this.CanonicalAuthority = \"https://\" + urlComponents.HostNameAndPort + \"/\" + pathSegments[0] + \"/\" + pathSegments[1] + \"/\" + pathSegments[2] + \"/\";\r\n        return _this;\r\n    }\r\n    Object.defineProperty(B2cAuthority.prototype, \"AuthorityType\", {\r\n        get: function () {\r\n            return Authority_1.AuthorityType.B2C;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /*\r\n     * Returns a promise with the TenantDiscoveryEndpoint\r\n     */\r\n    B2cAuthority.prototype.GetOpenIdConfigurationEndpointAsync = function () {\r\n        var _this = this;\r\n        var resultPromise = new Promise(function (resolve, reject) {\r\n            return resolve(_this.DefaultOpenIdConfigurationEndpoint);\r\n        });\r\n        if (!this.IsValidationEnabled) {\r\n            return resultPromise;\r\n        }\r\n        if (this.IsInTrustedHostList(this.CanonicalAuthorityUrlComponents.HostNameAndPort)) {\r\n            return resultPromise;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            return reject(ErrorMessage_1.ErrorMessage.unsupportedAuthorityValidation);\r\n        });\r\n    };\r\n    return B2cAuthority;\r\n}(AadAuthority_1.AadAuthority));\r\nexports.B2cAuthority = B2cAuthority;\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// msal.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 92e80a4bc592c1e4b364","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { IUri } from \"./IUri\";\r\nimport { User } from \"./User\";\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class Utils {\r\n  static compareObjects(u1: User, u2: User): boolean {\r\n   if (!u1 || !u2) {\r\n          return false;\r\n      }\r\n    if (u1.userIdentifier && u2.userIdentifier) {\r\n      if (u1.userIdentifier === u2.userIdentifier) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static expiresIn(expires: string): number {\r\n    // if AAD did not send \"expires_in\" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as \"expires_in\" value instead of 3600\r\n     if (!expires) {\r\n         expires = \"3599\";\r\n      }\r\n    return this.now() + parseInt(expires, 10);\r\n  }\r\n\r\n  static now(): number {\r\n    return Math.round(new Date().getTime() / 1000.0);\r\n  }\r\n\r\n  static isEmpty(str: string): boolean {\r\n    return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n  }\r\n\r\n  static extractIdToken(encodedIdToken: string): any {\r\n    // id token will be decoded to get the username\r\n    const decodedToken = this.decodeJwt(encodedIdToken);\r\n    if (!decodedToken) {\r\n      return null;\r\n    }\r\n    try {\r\n      const base64IdToken = decodedToken.JWSPayload;\r\n      const base64Decoded = this.base64DecodeStringUrlSafe(base64IdToken);\r\n      if (!base64Decoded) {\r\n        //this._requestContext.logger.info(\"The returned id_token could not be base64 url safe decoded.\");\r\n        return null;\r\n      }\r\n      // ECMA script has JSON built-in support\r\n      return JSON.parse(base64Decoded);\r\n    } catch (err) {\r\n      //this._requestContext.logger.error(\"The returned id_token could not be decoded\" + err);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  static base64EncodeStringUrlSafe(input: string): string {\r\n    // html5 should support atob function for decoding\r\n    if (window.btoa) {\r\n      return window.btoa(input);\r\n    }\r\n    else {\r\n      return this.encode(input);\r\n    }\r\n  }\r\n\r\n  static base64DecodeStringUrlSafe(base64IdToken: string): string {\r\n    // html5 should support atob function for decoding\r\n    base64IdToken = base64IdToken.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    if (window.atob) {\r\n      return decodeURIComponent(window.atob(base64IdToken)); // jshint ignore:line\r\n    }\r\n    else {\r\n      return decodeURIComponent(this.decode(base64IdToken));\r\n    }\r\n  }\r\n\r\n  static encode(input: string): string {\r\n    const keyStr: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n    let output = \"\";\r\n    let chr1: number, chr2: number, chr3: number, enc1: number, enc2: number, enc3: number, enc4: number;\r\n    var i = 0;\r\n\r\n    input = this.utf8Encode(input);\r\n\r\n    while (i < input.length) {\r\n      chr1 = input.charCodeAt(i++);\r\n      chr2 = input.charCodeAt(i++);\r\n      chr3 = input.charCodeAt(i++);\r\n\r\n      enc1 = chr1 >> 2;\r\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n      enc4 = chr3 & 63;\r\n\r\n      if (isNaN(chr2)) {\r\n        enc3 = enc4 = 64;\r\n      } else if (isNaN(chr3)) {\r\n        enc4 = 64;\r\n      }\r\n\r\n      output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n    }\r\n\r\n    return output.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\r\n  }\r\n\r\n  static utf8Encode(input: string): string {\r\n    input = input.replace(/\\r\\n/g, \"\\n\");\r\n    var utftext = \"\";\r\n\r\n    for (var n = 0; n < input.length; n++) {\r\n      var c = input.charCodeAt(n);\r\n\r\n      if (c < 128) {\r\n        utftext += String.fromCharCode(c);\r\n      }\r\n      else if ((c > 127) && (c < 2048)) {\r\n        utftext += String.fromCharCode((c >> 6) | 192);\r\n        utftext += String.fromCharCode((c & 63) | 128);\r\n      }\r\n      else {\r\n        utftext += String.fromCharCode((c >> 12) | 224);\r\n        utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n        utftext += String.fromCharCode((c & 63) | 128);\r\n      }\r\n    }\r\n\r\n    return utftext;\r\n  }\r\n\r\n  static decode(base64IdToken: string): string {\r\n    var codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n    base64IdToken = String(base64IdToken).replace(/=+$/, \"\");\r\n    var length = base64IdToken.length;\r\n    if (length % 4 === 1) {\r\n      throw new Error(\"The token to be decoded is not correctly encoded.\");\r\n    }\r\n    let h1: number, h2: number, h3: number, h4: number, bits: number, c1: number, c2: number, c3: number, decoded = \"\";\r\n    for (var i = 0; i < length; i += 4) {\r\n      //Every 4 base64 encoded character will be converted to 3 byte string, which is 24 bits\r\n      // then 6 bits per base64 encoded character\r\n      h1 = codes.indexOf(base64IdToken.charAt(i));\r\n      h2 = codes.indexOf(base64IdToken.charAt(i + 1));\r\n      h3 = codes.indexOf(base64IdToken.charAt(i + 2));\r\n      h4 = codes.indexOf(base64IdToken.charAt(i + 3));\r\n      // For padding, if last two are \"=\"\r\n      if (i + 2 === length - 1) {\r\n        bits = h1 << 18 | h2 << 12 | h3 << 6;\r\n        c1 = bits >> 16 & 255;\r\n        c2 = bits >> 8 & 255;\r\n        decoded += String.fromCharCode(c1, c2);\r\n        break;\r\n      }\r\n      // if last one is \"=\"\r\n      else if (i + 1 === length - 1) {\r\n        bits = h1 << 18 | h2 << 12;\r\n        c1 = bits >> 16 & 255;\r\n        decoded += String.fromCharCode(c1);\r\n        break;\r\n      }\r\n      bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\r\n      // then convert to 3 byte chars\r\n      c1 = bits >> 16 & 255;\r\n      c2 = bits >> 8 & 255;\r\n      c3 = bits & 255;\r\n      decoded += String.fromCharCode(c1, c2, c3);\r\n    }\r\n    return decoded;\r\n  }\r\n\r\n  static decodeJwt(jwtToken: string): any {\r\n    if (this.isEmpty(jwtToken)) {\r\n      return null;\r\n    }\r\n    const idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n    const matches = idTokenPartsRegex.exec(jwtToken);\r\n    if (!matches || matches.length < 4) {\r\n      //this._requestContext.logger.warn(\"The returned id_token is not parseable.\");\r\n      return null;\r\n    }\r\n    const crackedToken = {\r\n      header: matches[1],\r\n      JWSPayload: matches[2],\r\n      JWSSig: matches[3]\r\n    };\r\n    return crackedToken;\r\n  }\r\n\r\n  static deserialize(query: string): any {\r\n    let match: Array<string>; // Regex for replacing addition symbol with a space\r\n    const pl = /\\+/g;\r\n    const search = /([^&=]+)=([^&]*)/g;\r\n    const decode = (s: string) => decodeURIComponent(s.replace(pl, \" \"));\r\n    const obj: {} = {};\r\n    match = search.exec(query);\r\n    while (match) {\r\n      obj[decode(match[1])] = decode(match[2]);\r\n      match = search.exec(query);\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  static isIntersectingScopes(cachedScopes: Array<string>, scopes: Array<string>): boolean {\r\n    cachedScopes = this.convertToLowerCase(cachedScopes);\r\n    for (let i = 0; i < scopes.length; i++) {\r\n        if (cachedScopes.indexOf(scopes[i].toLowerCase()) > -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static containsScope(cachedScopes: Array<string>, scopes: Array<string>): boolean {\r\n    cachedScopes = this.convertToLowerCase(cachedScopes);\r\n    return scopes.every((value: any): boolean => cachedScopes.indexOf(value.toString().toLowerCase()) >= 0);\r\n  }\r\n\r\n  static convertToLowerCase(scopes: Array<string>): Array<string> {\r\n    return scopes.map(scope => scope.toLowerCase());\r\n  }\r\n\r\n  static removeElement(scopes: Array<string>, scope: string): Array<string> {\r\n    return scopes.filter(value => value !== scope);\r\n  }\r\n\r\n  static decimalToHex(num: number): string {\r\n    var hex: string = num.toString(16);\r\n    while (hex.length < 2) {\r\n      hex = \"0\" + hex;\r\n    }\r\n    return hex;\r\n  }\r\n\r\n  static getLibraryVersion(): string {\r\n    return \"0.1.4\";\r\n  }\r\n\r\n  /*\r\n    * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n    * @param href The url\r\n    * @param tenantId The tenant id to replace\r\n    */\r\n  static replaceFirstPath(href: string, tenantId: string): string {\r\n    var match = href.match(/^(https?\\:)\\/\\/(([^:\\/?#] *)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#] *)(\\?[^#] *|)(#. *|)$/);\r\n    if (match) {\r\n      var urlObject = Utils.GetUrlComponents(href);\r\n      var pathArray = urlObject.PathSegments;\r\n      pathArray.shift();\r\n      if (pathArray[0] && pathArray[0] === \"common\" || pathArray[0] === \"organizations\") {\r\n        pathArray[0] = tenantId;\r\n        href = urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + pathArray.join(\"/\");\r\n      }\r\n    }\r\n    return href;\r\n  }\r\n\r\n  static createNewGuid(): string {\r\n    // RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n    // pseudo-random numbers.\r\n    // The algorithm is as follows:\r\n    //     Set the two most significant bits (bits 6 and 7) of the\r\n    //        clock_seq_hi_and_reserved to zero and one, respectively.\r\n    //     Set the four most significant bits (bits 12 through 15) of the\r\n    //        time_hi_and_version field to the 4-bit version number from\r\n    //        Section 4.1.3. Version4\r\n    //     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n    //     values.\r\n    // UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n    // time-low               = 4hexOctet\r\n    // time-mid               = 2hexOctet\r\n    // time-high-and-version  = 2hexOctet\r\n    // clock-seq-and-reserved = hexOctet:\r\n    // clock-seq-low          = hexOctet\r\n    // node                   = 6hexOctet\r\n    // Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n    // y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n    // y values are 8, 9, A, B\r\n\r\n    const cryptoObj: Crypto = window.crypto; // for IE 11\r\n    if (cryptoObj && cryptoObj.getRandomValues) {\r\n      const buffer: Uint8Array = new Uint8Array(16);\r\n      cryptoObj.getRandomValues(buffer);\r\n\r\n      //buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n      buffer[6] |= 0x40; //buffer[6] | 01000000 will set the 6 bit to 1.\r\n      buffer[6] &= 0x4f; //buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n\r\n      //buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n      buffer[8] |= 0x80; //buffer[8] | 10000000 will set the 7 bit to 1.\r\n      buffer[8] &= 0xbf; //buffer[8] & 10111111 will set the 6 bit to 0.\r\n\r\n      return Utils.decimalToHex(buffer[0]) + Utils.decimalToHex(buffer[1])\r\n        + Utils.decimalToHex(buffer[2]) + Utils.decimalToHex(buffer[3])\r\n        + \"-\" + Utils.decimalToHex(buffer[4]) + Utils.decimalToHex(buffer[5])\r\n        + \"-\" + Utils.decimalToHex(buffer[6]) + Utils.decimalToHex(buffer[7])\r\n        + \"-\" + Utils.decimalToHex(buffer[8]) + Utils.decimalToHex(buffer[9])\r\n        + \"-\" + Utils.decimalToHex(buffer[10]) + Utils.decimalToHex(buffer[11])\r\n        + Utils.decimalToHex(buffer[12]) + Utils.decimalToHex(buffer[13])\r\n        + Utils.decimalToHex(buffer[14]) + Utils.decimalToHex(buffer[15]);\r\n    }\r\n    else {\r\n      const guidHolder: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n      const hex: string = \"0123456789abcdef\";\r\n      let r: number = 0;\r\n      let guidResponse: string = \"\";\r\n      for (let i: number = 0; i < 36; i++) {\r\n        if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n          // each x and y needs to be random\r\n          r = Math.random()  * 16 | 0;\r\n        }\r\n        if (guidHolder[i] === \"x\") {\r\n          guidResponse += hex[r];\r\n        } else if (guidHolder[i] === \"y\") {\r\n          // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n          r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n          r |= 0x8; // set pos 3 to 1 as 1???\r\n          guidResponse += hex[r];\r\n        } else {\r\n          guidResponse += guidHolder[i];\r\n        }\r\n      }\r\n      return guidResponse;\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Parses out the components from a url string.\r\n   * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n   */\r\n  static GetUrlComponents(url: string): IUri {\r\n    if (!url) {\r\n      throw \"Url required\";\r\n    }\r\n\r\n    // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n    var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n\r\n    var match = url.match(regEx);\r\n\r\n    if (!match || match.length < 6) {\r\n      throw \"Valid url required\";\r\n    }\r\n\r\n    let urlComponents = <IUri>{\r\n      Protocol: match[1],\r\n      HostNameAndPort: match[4],\r\n      AbsolutePath: match[5]\r\n    };\r\n\r\n    let pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n    pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\r\n    urlComponents.PathSegments = pathSegments;\r\n    return urlComponents;\r\n  }\r\n\r\n  /*\r\n   * Given a url or path, append a trailing slash if one doesnt exist\r\n   */\r\n  static CanonicalizeUri(url: string): string {\r\n    if (url) {\r\n      url = url.toLowerCase();\r\n    }\r\n\r\n    if (url && !Utils.endsWith(url, \"/\")) {\r\n      url += \"/\";\r\n    }\r\n\r\n    return url;\r\n  }\r\n\r\n  /*\r\n    * Checks to see if the url ends with the suffix\r\n    * Required because we are compiling for es5 instead of es6\r\n    * @param url\r\n    * @param str\r\n    */\r\n  static endsWith(url: string, suffix: string): boolean {\r\n    if (!url || !suffix) {\r\n      return false;\r\n    }\r\n\r\n    return url.indexOf(suffix, url.length - suffix.length) !== -1;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Utils.ts","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 1\n// module chunks = 0 1","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { Utils } from \"./Utils\";\r\n\r\nexport interface ILoggerCallback {\r\n  (level: LogLevel, message: string, containsPii: boolean): void;\r\n}\r\n\r\nexport enum LogLevel {\r\n  Error,\r\n  Warning,\r\n  Info,\r\n  Verbose\r\n}\r\n\r\nexport class Logger {// Singleton Class\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private static _instance: Logger;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _correlationId: string;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _level: LogLevel = LogLevel.Info;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _piiLoggingEnabled: boolean;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _localCallback: ILoggerCallback;\r\n\r\n  constructor(localCallback: ILoggerCallback,\r\n      options:\r\n      {\r\n          correlationId?: string,\r\n          level?: LogLevel,\r\n          piiLoggingEnabled?: boolean,\r\n      } = {}) {\r\n      const {\r\n          correlationId = \"\",\r\n          level = LogLevel.Info,\r\n          piiLoggingEnabled = false\r\n      } = options;\r\n\r\n      this._localCallback = localCallback;\r\n      this._correlationId = correlationId;\r\n      this._level = level;\r\n      this._piiLoggingEnabled = piiLoggingEnabled;\r\n  }\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private logMessage(logLevel: LogLevel, logMessage: string, containsPii: boolean): void {\r\n    if ((logLevel > this._level) || (!this._piiLoggingEnabled && containsPii)) {\r\n      return;\r\n    }\r\n    var timestamp = new Date().toUTCString();\r\n    var log: string;\r\n    if (!Utils.isEmpty(this._correlationId)) {\r\n      log = timestamp + \":\" + this._correlationId + \"-\" + Utils.getLibraryVersion() + \"-\" + LogLevel[logLevel] + \" \" + logMessage;\r\n    }\r\n    else {\r\n      log = timestamp + \":\" + Utils.getLibraryVersion() + \"-\" + LogLevel[logLevel] + \" \" + logMessage;\r\n    }\r\n    this.executeCallback(logLevel, log, containsPii);\r\n  }\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  executeCallback(level: LogLevel, message: string, containsPii: boolean) {\r\n    if (this._localCallback) {\r\n      this._localCallback(level, message, containsPii);\r\n    }\r\n  }\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  error(message: string): void {\r\n    this.logMessage(LogLevel.Error, message, false);\r\n  }\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  errorPii(message: string): void {\r\n    this.logMessage(LogLevel.Error, message, true);\r\n  }\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  warning(message: string): void {\r\n    this.logMessage(LogLevel.Warning, message, false);\r\n  }\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  warningPii(message: string): void {\r\n    this.logMessage(LogLevel.Warning, message, true);\r\n  }\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  info(message: string): void {\r\n    this.logMessage(LogLevel.Info, message, false);\r\n  }\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  infoPii(message: string): void {\r\n    this.logMessage(LogLevel.Info, message, true);\r\n  }\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  verbose(message: string): void {\r\n    this.logMessage(LogLevel.Verbose, message, false);\r\n  }\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  verbosePii(message: string): void {\r\n    this.logMessage(LogLevel.Verbose, message, true);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Logger.ts","import { IUri } from \"./IUri\";\r\nimport { Utils } from \"./Utils\";\r\nimport { ITenantDiscoveryResponse } from \"./ITenantDiscoveryResponse\";\r\nimport { ErrorMessage } from \"./ErrorMessage\";\r\nimport { XhrClient } from \"./XHRClient\";\r\n\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport enum AuthorityType {\r\n  Aad,\r\n  Adfs,\r\n  B2C\r\n}\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport abstract class Authority {\r\n  constructor(authority: string, validateAuthority: boolean) {\r\n    this.IsValidationEnabled = validateAuthority;\r\n    this.CanonicalAuthority = authority;\r\n\r\n    this.validateAsUri();\r\n  }\r\n\r\n  public abstract get AuthorityType(): AuthorityType;\r\n\r\n  public IsValidationEnabled: boolean;\r\n\r\n  public get Tenant(): string {\r\n    return this.CanonicalAuthorityUrlComponents.PathSegments[0];\r\n  }\r\n\r\n  private tenantDiscoveryResponse: ITenantDiscoveryResponse;\r\n\r\n  public get AuthorizationEndpoint(): string {\r\n    this.validateResolved();\r\n    return this.tenantDiscoveryResponse.AuthorizationEndpoint.replace(\"{tenant}\", this.Tenant);\r\n  }\r\n\r\n  public get EndSessionEndpoint(): string {\r\n    this.validateResolved();\r\n    return this.tenantDiscoveryResponse.EndSessionEndpoint.replace(\"{tenant}\", this.Tenant);\r\n  }\r\n\r\n  public get SelfSignedJwtAudience(): string {\r\n    this.validateResolved();\r\n    return this.tenantDiscoveryResponse.Issuer.replace(\"{tenant}\", this.Tenant);\r\n  }\r\n\r\n  private validateResolved() {\r\n    if (!this.tenantDiscoveryResponse) {\r\n      throw \"Please call ResolveEndpointsAsync first\";\r\n    }\r\n  }\r\n\r\n  /*\r\n   * A URL that is the authority set by the developer\r\n   */\r\n  public get CanonicalAuthority(): string {\r\n    return this.canonicalAuthority;\r\n  }\r\n\r\n  public set CanonicalAuthority(url: string) {\r\n    this.canonicalAuthority = Utils.CanonicalizeUri(url);\r\n    this.canonicalAuthorityUrlComponents = null;\r\n  }\r\n\r\n  private canonicalAuthority: string;\r\n  private canonicalAuthorityUrlComponents: IUri;\r\n\r\n  public get CanonicalAuthorityUrlComponents(): IUri {\r\n    if (!this.canonicalAuthorityUrlComponents) {\r\n      this.canonicalAuthorityUrlComponents = Utils.GetUrlComponents(this.CanonicalAuthority);\r\n    }\r\n\r\n    return this.canonicalAuthorityUrlComponents;\r\n  }\r\n\r\n  /*\r\n   * // http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\r\n   */\r\n  protected get DefaultOpenIdConfigurationEndpoint(): string {\r\n    return `${this.CanonicalAuthority}v2.0/.well-known/openid-configuration`;\r\n  }\r\n\r\n  /*\r\n   * Given a string, validate that it is of the form https://domain/path\r\n   */\r\n  private validateAsUri() {\r\n    let components;\r\n    try {\r\n      components = this.CanonicalAuthorityUrlComponents;\r\n    } catch (e) {\r\n      throw ErrorMessage.invalidAuthorityType;\r\n    }\r\n\r\n    if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n      throw ErrorMessage.authorityUriInsecure;\r\n    }\r\n\r\n    if (!components.PathSegments || components.PathSegments.length < 1) {\r\n      throw ErrorMessage.authorityUriInvalidPath;\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Calls the OIDC endpoint and returns the response\r\n   */\r\n  private DiscoverEndpoints(openIdConfigurationEndpoint: string): Promise<ITenantDiscoveryResponse> {\r\n    let client = new XhrClient();\r\n    return client.sendRequestAsync(openIdConfigurationEndpoint, \"GET\", /*enableCaching: */ true)\r\n        .then((response: any) => {\r\n            return <ITenantDiscoveryResponse>{\r\n                AuthorizationEndpoint: response.authorization_endpoint,\r\n                EndSessionEndpoint: response.end_session_endpoint,\r\n                Issuer: response.issuer\r\n            };\r\n        });\r\n  }\r\n\r\n  /*\r\n   * Returns a promise.\r\n   * Checks to see if the authority is in the cache\r\n   * Discover endpoints via openid-configuration\r\n   * If successful, caches the endpoint for later use in OIDC\r\n   */\r\n  public ResolveEndpointsAsync(): Promise<Authority> {\r\n    let openIdConfigurationEndpoint = \"\";\r\n    return this.GetOpenIdConfigurationEndpointAsync().then(openIdConfigurationEndpointResponse => {\r\n      openIdConfigurationEndpoint = openIdConfigurationEndpointResponse;\r\n      return this.DiscoverEndpoints(openIdConfigurationEndpoint);\r\n    }).then((tenantDiscoveryResponse: ITenantDiscoveryResponse) => {\r\n      this.tenantDiscoveryResponse = tenantDiscoveryResponse;\r\n      return this;\r\n    });\r\n  }\r\n\r\n  /*\r\n   * Returns a promise with the TenantDiscoveryEndpoint\r\n   */\r\n  public abstract GetOpenIdConfigurationEndpointAsync(): Promise<string>;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Authority.ts","/*\r\n  * Copyright (c) Microsoft Corporation\r\n  *  All Rights Reserved\r\n  *  MIT License\r\n  *\r\n  * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n  * software and associated documentation files (the \"Software\"), to deal in the Software\r\n  * without restriction, including without limitation the rights to use, copy, modify,\r\n  * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n  * permit persons to whom the Software is furnished to do so, subject to the following\r\n  * conditions:\r\n  *\r\n  * The above copyright notice and this permission notice shall be\r\n  * included in all copies or substantial portions of the Software.\r\n  *\r\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n  * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n  * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n  */\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class ErrorMessage {\r\n  static get authorityUriInvalidPath(): string { return \"AuthorityUriInvalidPath\"; }\r\n  static get authorityUriInsecure(): string { return \"AuthorityUriInsecure\"; }\r\n  static get invalidAuthorityType(): string { return \"InvalidAuthorityType\"; }\r\n  static get unsupportedAuthorityValidation(): string { return \"UnsupportedAuthorityValidation\"; }\r\n  static get b2cAuthorityUriInvalidPath(): string { return \"B2cAuthorityUriInvalidPath\"; }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ErrorMessage.ts","/*\r\n  * Copyright (c) Microsoft Corporation\r\n  *  All Rights Reserved\r\n  *  MIT License\r\n  *\r\n  * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n  * software and associated documentation files (the \"Software\"), to deal in the Software\r\n  * without restriction, including without limitation the rights to use, copy, modify,\r\n  * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n  * permit persons to whom the Software is furnished to do so, subject to the following\r\n  * conditions:\r\n  *\r\n  * The above copyright notice and this permission notice shall be\r\n  * included in all copies or substantial portions of the Software.\r\n  *\r\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n  * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n  * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n  */\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class Constants {\r\n  static get errorDescription(): string { return \"error_description\"; }\r\n  static get error(): string { return \"error\"; }\r\n  static get scope(): string { return \"scope\"; }\r\n  static get acquireTokenUser(): string { return \"msal_acquireTokenUser\"; }\r\n  static get clientInfo(): string { return \"client_info\"; }\r\n  static get clientId(): string { return \"clientId\"; }\r\n  static get authority(): string { return \"authority\"; }\r\n  static get idToken(): string { return \"id_token\"; }\r\n  static get accessToken(): string { return \"access_token\"; }\r\n  static get expiresIn(): string { return \"expires_in\"; }\r\n  static get sessionState(): string { return \"session_state\"; }\r\n  static get msalClientInfo(): string { return \"msal.client.info\"; }\r\n  static get msalError(): string { return \"msal.error\"; }\r\n  static get msalErrorDescription(): string { return \"msal.error.description\"; }\r\n  static get msalSessionState(): string { return \"msal.session.state\"; }\r\n  static get tokenKeys(): string { return \"msal.token.keys\"; }\r\n  static get accessTokenKey(): string { return \"msal.access.token.key\"; }\r\n  static get expirationKey(): string { return \"msal.expiration.key\"; }\r\n  static get stateLogin(): string { return \"msal.state.login\"; }\r\n  static get stateAcquireToken(): string { return \"msal.state.acquireToken\"; }\r\n  static get stateRenew(): string { return \"msal.state.renew\"; }\r\n  static get nonceIdToken(): string { return \"msal.nonce.idtoken\"; }\r\n  static get userName(): string { return \"msal.username\"; }\r\n  static get idTokenKey(): string { return \"msal.idtoken\"; }\r\n  static get loginRequest(): string { return \"msal.login.request\"; }\r\n  static get loginError(): string { return \"msal.login.error\"; }\r\n  static get renewStatus(): string { return \"msal.token.renew.status\"; }\r\n  static get msal(): string { return \"msal\"; }\r\n  static get resourceDelimeter(): string { return \"|\"; }\r\n  static get tokenRenewStatusCancelled(): string { return \"Canceled\"; }\r\n  static get tokenRenewStatusCompleted(): string { return \"Completed\"; }\r\n  static get tokenRenewStatusInProgress(): string { return \"In Progress\"; }\r\n  private static _popUpWidth: number = 483;\r\n  static get popUpWidth(): number { return this._popUpWidth; }\r\n  static set popUpWidth(width: number) {\r\n    this._popUpWidth = width;\r\n  }\r\n  private static _popUpHeight: number = 600;\r\n  static get popUpHeight(): number { return this._popUpHeight; }\r\n  static set popUpHeight(height: number) {\r\n    this._popUpHeight = height;\r\n  }\r\n  static get login(): string { return \"LOGIN\"; }\r\n  static get renewToken(): string { return \"renewToken\"; }\r\n  static get unknown(): string { return \"UNKNOWN\"; }\r\n  static get urlHash(): string { return \"msal.urlHash\"; }\r\n}\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class ErrorCodes {\r\n  static get loginProgressError(): string { return \"login_progress_error\"; }\r\n  static get acquireTokenProgressError(): string { return \"acquiretoken_progress_error\"; }\r\n  static get inputScopesError(): string { return \"input_scopes_error\"; }\r\n  static get endpointResolutionError(): string { return \"endpoints_resolution_error\"; }\r\n  static get popUpWindowError(): string { return \"popup_window_error\"; }\r\n  static get userLoginError(): string { return \"user_login_error\"; }\r\n  static get userCancelledError(): string { return \"user_cancelled\"; }\r\n}\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class ErrorDescription {\r\n  static get loginProgressError(): string { return \"Login is in progress\"; }\r\n  static get acquireTokenProgressError(): string { return \"Acquire token is in progress\"; }\r\n  static get inputScopesError(): string { return \"Invalid value of input scopes provided\"; }\r\n  static get endpointResolutionError(): string { return \"Endpoints cannot be resolved\"; }\r\n  static get popUpWindowError(): string { return \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"; }\r\n  static get userLoginError(): string { return \"User login is required\"; }\r\n  static get userCancelledError(): string { return \"User closed the popup window window and cancelled the flow\"; }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { ClientInfo } from \"./ClientInfo\";\r\nimport { IdToken } from \"./IdToken\";\r\nimport { Utils } from \"./Utils\";\r\n\r\nexport class User {\r\n\r\n    displayableId: string;\r\n    name: string;\r\n    identityProvider: string;\r\n    userIdentifier: string;\r\n    idToken: Object\r\n\r\n    /*\r\n     * @hidden\r\n     */\r\n    constructor(displayableId: string, name: string, identityProvider: string, userIdentifier: string, idToken:Object) {\r\n        this.displayableId = displayableId;\r\n        this.name = name;\r\n        this.identityProvider = identityProvider;\r\n        this.userIdentifier = userIdentifier;\r\n        this.idToken = idToken;\r\n    }\r\n\r\n    /*\r\n     * @hidden\r\n     */\r\n    static createUser(idToken: IdToken, clientInfo: ClientInfo, authority: string): User {\r\n        let uid: string;\r\n        let utid: string;\r\n        if (!clientInfo) {\r\n            uid = \"\";\r\n            utid = \"\";\r\n        }\r\n        else {\r\n            uid = clientInfo.uid;\r\n            utid = clientInfo.utid;\r\n        }\r\n\r\n        const userIdentifier = Utils.base64EncodeStringUrlSafe(uid) + \".\" + Utils.base64EncodeStringUrlSafe(utid);\r\n        return new User(idToken.preferredName, idToken.name, idToken.issuer, userIdentifier, idToken.decodedIdToken);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/User.ts","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { Authority, AuthorityType } from \"./Authority\";\r\nimport { XhrClient } from \"./XHRClient\";\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class AadAuthority extends Authority {\r\n  private static readonly AadInstanceDiscoveryEndpoint: string = \"https://login.microsoftonline.com/common/discovery/instance\";\r\n\r\n  private get AadInstanceDiscoveryEndpointUrl(): string {\r\n      return `${AadAuthority.AadInstanceDiscoveryEndpoint}?api-version=1.0&authorization_endpoint=${this.CanonicalAuthority}oauth2/v2.0/authorize`;\r\n  }\r\n\r\n  public constructor(authority: string, validateAuthority: boolean) {\r\n    super(authority, validateAuthority);\r\n  }\r\n\r\n  public get AuthorityType(): AuthorityType {\r\n    return AuthorityType.Aad;\r\n  }\r\n\r\n  private static readonly TrustedHostList: any = {\r\n    \"login.windows.net\": \"login.windows.net\",\r\n    \"login.chinacloudapi.cn\": \"login.chinacloudapi.cn\",\r\n    \"login.cloudgovapi.us\": \"login.cloudgovapi.us\",\r\n    \"login.microsoftonline.com\": \"login.microsoftonline.com\",\r\n    \"login.microsoftonline.de\": \"login.microsoftonline.de\",\r\n    \"login.microsoftonline.us\": \"login.microsoftonline.us\"\r\n  };\r\n\r\n  /**\r\n   * Returns a promise which resolves to the OIDC endpoint\r\n   * Only responds with the endpoint\r\n   */\r\n  public GetOpenIdConfigurationEndpointAsync(): Promise<string> {\r\n      var resultPromise: Promise<string> = new Promise<string>((resolve, reject) =>\r\n      resolve(this.DefaultOpenIdConfigurationEndpoint));\r\n\r\n    if (!this.IsValidationEnabled) {\r\n      return resultPromise;\r\n    }\r\n\r\n    let host: string = this.CanonicalAuthorityUrlComponents.HostNameAndPort;\r\n    if (this.IsInTrustedHostList(host)) {\r\n      return resultPromise;\r\n    }\r\n\r\n    let client: XhrClient = new XhrClient();\r\n\r\n    return client.sendRequestAsync(this.AadInstanceDiscoveryEndpointUrl, \"GET\", true)\r\n      .then((response) => {\r\n        return response.tenant_discovery_endpoint;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Checks to see if the host is in a list of trusted hosts\r\n   * @param {string} The host to look up\r\n   */\r\n  public IsInTrustedHostList(host: string): boolean {\r\n    return AadAuthority.TrustedHostList[host.toLowerCase()];\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AadAuthority.ts","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/*\r\n * XHR client for JSON endpoints\r\n * https://www.npmjs.com/package/async-promise\r\n * @hidden\r\n */\r\nexport class XhrClient {\r\n  public sendRequestAsync(url: string, method: string, enableCaching?: boolean): Promise<any> {\r\n    return new Promise<string>((resolve, reject) => {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(method, url, /*async: */ true);\r\n      if (enableCaching) {\r\n        // TODO: (shivb) ensure that this can be cached\r\n        // xhr.setRequestHeader(\"Cache-Control\", \"Public\");\r\n      }\r\n\r\n      xhr.onload = (ev) => {\r\n          if (xhr.status < 200 || xhr.status >= 300) {\r\n              reject(this.handleError(xhr.responseText));\r\n          }\r\n\r\n          try {\r\n              var jsonResponse = JSON.parse(xhr.responseText);\r\n          } catch (e) {\r\n              reject(this.handleError(xhr.responseText));\r\n          }\r\n\r\n          resolve(jsonResponse);\r\n      };\r\n\r\n      xhr.onerror = (ev) => {\r\n        reject(xhr.status);\r\n      };\r\n\r\n      if (method === \"GET\") {\r\n        xhr.send();\r\n      }\r\n      else {\r\n        throw \"not implemented\";\r\n      }\r\n    });\r\n  }\r\n\r\n  protected handleError(responseText: string): any {\r\n    var jsonResponse;\r\n    try {\r\n      jsonResponse = JSON.parse(responseText);\r\n      if (jsonResponse.error) {\r\n          return jsonResponse.error;\r\n      } else {\r\n          throw responseText;\r\n      }\r\n    } catch (e) {\r\n      return responseText;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/XHRClient.ts","export { UserAgentApplication } from \"./UserAgentApplication\";\r\nexport { Logger } from \"./Logger\";\r\nexport { LogLevel } from \"./Logger\";\r\nexport { User } from \"./User\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { AccessTokenCacheItem } from \"./AccessTokenCacheItem\";\r\nimport { AccessTokenKey } from \"./AccessTokenKey\";\r\nimport { AccessTokenValue } from \"./AccessTokenValue\";\r\nimport { AuthenticationRequestParameters } from \"./AuthenticationRequestParameters\";\r\nimport { Authority } from \"./Authority\";\r\nimport { ClientInfo } from \"./ClientInfo\";\r\nimport { Constants, ErrorCodes, ErrorDescription } from \"./Constants\";\r\nimport { IdToken } from \"./IdToken\";\r\nimport { Logger } from \"./Logger\";\r\nimport { Storage } from \"./Storage\";\r\nimport { TokenResponse } from \"./RequestInfo\";\r\nimport { User } from \"./User\";\r\nimport { Utils } from \"./Utils\";\r\nimport { AuthorityFactory } from \"./AuthorityFactory\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        msal: Object;\r\n        callBackMappedToRenewStates: Object;\r\n        callBacksMappedToRenewStates: Object; }\r\n}\r\n\r\n/*\r\n * @hidden\r\n */\r\nlet ResponseTypes = {\r\n  id_token: \"id_token\",\r\n  token: \"token\",\r\n  id_token_token: \"id_token token\"\r\n};\r\n\r\n/*\r\n * @hidden\r\n */\r\ninterface CacheResult {\r\n  errorDesc: string;\r\n  token: string;\r\n  error: string;\r\n}\r\n\r\n/*\r\n * A type alias of for a tokenReceivedCallback function.\r\n * @param tokenReceivedCallback.errorDesc error description returned from the STS if API call fails.\r\n * @param tokenReceivedCallback.token token returned from STS if token request is successful.\r\n * @param tokenReceivedCallback.error error code returned from the STS if API call fails.\r\n * @param tokenReceivedCallback.tokenType tokenType returned from the STS if API call is successful. Possible values are: id_token OR access_token.\r\n */\r\nexport type tokenReceivedCallback = (errorDesc: string, token: string, error: string, tokenType: string) => void;\r\nconst resolveTokenOnlyIfOutOfIframe = (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\r\n  const tokenAcquisitionMethod = descriptor.value;\r\n  descriptor.value = function (...args: any[]) {\r\n      return this.isInIframe()\r\n          ? new Promise(() => { })\r\n          : tokenAcquisitionMethod.apply(this, args);\r\n  };\r\n  return descriptor;\r\n};\r\nexport class UserAgentApplication {\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _cacheLocations = {\r\n    localStorage: \"localStorage\",\r\n    sessionStorage: \"sessionStorage\"\r\n  };\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _cacheLocation: string;\r\n\r\n  /*\r\n   * Used to get the cache location\r\n   */\r\n  get cacheLocation(): string {\r\n    return this._cacheLocation;\r\n  }\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _logger: Logger;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _loginInProgress: boolean;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _acquireTokenInProgress: boolean;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _renewStates: Array<string>;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _activeRenewals: Object;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _clockSkew = 300;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _cacheStorage: Storage;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _tokenReceivedCallback: tokenReceivedCallback = null;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private _user: User;\r\n\r\n  /*\r\n   * Client ID assigned to your app by Azure Active Directory.\r\n   */\r\n  clientId: string;\r\n\r\n  /*\r\n   * @hidden\r\n   */\r\n  private authorityInstance: Authority;\r\n\r\n  /*\r\n   * Used to set the authority.\r\n   * @param {string} authority - A URL indicating a directory that MSAL can use to obtain tokens.\r\n   * - In Azure AD, it is of the form https://&lt;tenant&gt;/&lt;tenant&gt;, where &lt;tenant&gt; is the directory host (e.g. https://login.microsoftonline.com) and &lt;tenant&gt; is a identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory)\r\n   * - In Azure B2C, it is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/<policyName>/\r\n   * - Default value is: \"https://login.microsoftonline.com/common\"\r\n   */\r\n  public set authority(val) {\r\n    this.authorityInstance = AuthorityFactory.CreateInstance(val, this.validateAuthority);\r\n  }\r\n\r\n  /*\r\n   * Used to get the authority.\r\n   */\r\n  public get authority(): string {\r\n    return this.authorityInstance.CanonicalAuthority;\r\n  }\r\n\r\n  /*\r\n   * Used to turn authority validation on/off.\r\n   * When set to true (default), MSAL will compare the application\"s authority against well-known URLs templates representing well-formed authorities. It is useful when the authority is obtained at run time to prevent MSAL from displaying authentication prompts from malicious pages.\r\n   */\r\n  validateAuthority: boolean;\r\n\r\n  /*\r\n   * The redirect URI of the application, this should be same as the value in the application registration portal.\r\n   * Defaults to `window.location.href`.\r\n   */\r\n  private _redirectUri: string;\r\n\r\n  /*\r\n   * Used to redirect the user to this location after logout.\r\n   * Defaults to `window.location.href`.\r\n   */\r\n  private _postLogoutredirectUri: string;\r\n\r\n  /*\r\n   * Used to keep track of opened popup windows.\r\n   */\r\n  private _openedWindows: Array<Window>;\r\n\r\n  /*\r\n   * Used to track the authentication request.\r\n   */\r\n  private _requestType: string;\r\n\r\n  loadFrameTimeout: number;\r\n\r\n  private _navigateToLoginRequestUrl: boolean;\r\n\r\n  /*\r\n   * Initialize a UserAgentApplication with a given clientId and authority.\r\n   * @constructor\r\n   * @param {string} clientId - The clientID of your application, you should get this from the application registration portal.\r\n   * @param {string} authority - A URL indicating a directory that MSAL can use to obtain tokens.\r\n   * - In Azure AD, it is of the form https://&lt;instance>/&lt;tenant&gt;,\\ where &lt;instance&gt; is the directory host (e.g. https://login.microsoftonline.com) and &lt;tenant&gt; is a identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory)\r\n   * - In Azure B2C, it is of the form https://&lt;instance&gt;/tfp/&lt;tenantId&gt;/&lt;policyName&gt;/\r\n   * - Default value is: \"https://login.microsoftonline.com/common\"\r\n   * @param _tokenReceivedCallback -  The function that will get the call back once this API is completed (either successfully or with a failure).\r\n   * @param {boolean} validateAuthority -  boolean to turn authority validation on/off.\r\n   */\r\n  constructor(\r\n    clientId: string,\r\n    authority: string | null,\r\n    tokenReceivedCallback: tokenReceivedCallback,\r\n    options:\r\n      {\r\n        validateAuthority?: boolean,\r\n        cacheLocation?: string,\r\n        redirectUri?: string,\r\n        postLogoutRedirectUri?: string,\r\n        logger?: Logger,\r\n        loadFrameTimeout?: number,\r\n        navigateToLoginRequestUrl?: boolean,\r\n      } = {}) {\r\n      const {\r\n          validateAuthority = true,\r\n          cacheLocation = \"sessionStorage\",\r\n          redirectUri = window.location.href.split(\"?\")[0].split(\"#\")[0],\r\n          postLogoutRedirectUri = window.location.href.split(\"?\")[0].split(\"#\")[0],\r\n          logger = new Logger(null),\r\n          loadFrameTimeout = 6000,\r\n          navigateToLoginRequestUrl = true\r\n      } = options;\r\n\r\n    this.loadFrameTimeout = loadFrameTimeout;\r\n    this.clientId = clientId;\r\n    this.validateAuthority = validateAuthority;\r\n    this.authority = authority || \"https://login.microsoftonline.com/common\";\r\n    this._tokenReceivedCallback = tokenReceivedCallback;\r\n    this._redirectUri = redirectUri;\r\n    this._postLogoutredirectUri = postLogoutRedirectUri;\r\n    this._loginInProgress = false;\r\n    this._acquireTokenInProgress = false;\r\n    this._renewStates = [];\r\n    this._activeRenewals = {};\r\n    this._cacheLocation = cacheLocation;\r\n    this._navigateToLoginRequestUrl = navigateToLoginRequestUrl;\r\n    if (!this._cacheLocations[cacheLocation]) {\r\n      throw new Error(\"Cache Location is not valid. Provided value:\" + this._cacheLocation + \".Possible values are: \" + this._cacheLocations.localStorage + \", \" + this._cacheLocations.sessionStorage);\r\n    }\r\n\r\n    this._cacheStorage = new Storage(this._cacheLocation); //cache keys msal\r\n    this._logger = logger;\r\n    this._openedWindows = [];\r\n    window.msal = this;\r\n    window.callBackMappedToRenewStates = {};\r\n    window.callBacksMappedToRenewStates = {};\r\n    var urlHash = window.location.hash;\r\n    var isCallback = this.isCallback(urlHash);\r\n    \r\n    if (isCallback) {\r\n        this.handleAuthenticationResponse.call(this, urlHash);\r\n    }\r\n    else {\r\n        var pendingCallback = this._cacheStorage.getItem(Constants.urlHash);\r\n        if (pendingCallback) {\r\n            this.processCallBack(pendingCallback);\r\n        }\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Used to call the constructor callback with the token/error\r\n   * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n   * @hidden\r\n   */\r\n  private processCallBack(hash: string): void {\r\n      this._logger.info('Processing the callback from redirect response');\r\n      const requestInfo = this.getRequestInfo(hash);\r\n      this.saveTokenFromHash(requestInfo);\r\n      const token = requestInfo.parameters[Constants.accessToken] || requestInfo.parameters[Constants.idToken];\r\n      const errorDesc = requestInfo.parameters[Constants.errorDescription];\r\n      const error = requestInfo.parameters[Constants.error];\r\n      var tokenType: string;\r\n\r\n      if (requestInfo.parameters[Constants.accessToken]) {\r\n          tokenType = Constants.accessToken;\r\n      }\r\n      else {\r\n          tokenType = Constants.idToken;\r\n      }\r\n\r\n      this._cacheStorage.removeItem(Constants.urlHash);\r\n\r\n      try {\r\n          if (this._tokenReceivedCallback) {\r\n              this._tokenReceivedCallback.call(this, errorDesc, token, error, tokenType);\r\n          }\r\n\r\n      } catch (err) {\r\n          this._logger.error(\"Error occurred in token received callback function: \" + err);\r\n      }\r\n  }\r\n\r\n  \r\n  /*\r\n   * Initiate the login process by redirecting the user to the STS authorization endpoint.\r\n   * @param {Array.<string>} scopes - Permissions you want included in the access token. Not all scopes are guaranteed to be included in the access token returned.\r\n   * @param {string} extraQueryParameters - Key-value pairs to pass to the authentication server during the interactive authentication flow.\r\n   */\r\n  loginRedirect(scopes?: Array<string>, extraQueryParameters?: string): void {\r\n    /*\r\n    1. Create navigate url\r\n    2. saves value in cache\r\n    3. redirect user to AAD\r\n     */\r\n    if (this._loginInProgress) {\r\n      if (this._tokenReceivedCallback) {\r\n        this._tokenReceivedCallback(\"Login is in progress\", null, null, Constants.idToken);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (scopes) {\r\n      const isValidScope = this.validateInputScope(scopes);\r\n      if (isValidScope && !Utils.isEmpty(isValidScope)) {\r\n        if (this._tokenReceivedCallback) {\r\n          this._tokenReceivedCallback(isValidScope, null, null, Constants.idToken);\r\n          return;\r\n        }\r\n      }\r\n      scopes = this.filterScopes(scopes);\r\n    }\r\n\r\n    this.authorityInstance.ResolveEndpointsAsync()\r\n      .then(() => {\r\n        const authenticationRequest = new AuthenticationRequestParameters(this.authorityInstance, this.clientId, scopes, ResponseTypes.id_token, this._redirectUri);\r\n        if (extraQueryParameters) {\r\n          authenticationRequest.extraQueryParameters = extraQueryParameters;\r\n        }\r\n\r\n        this._cacheStorage.setItem(Constants.loginRequest, window.location.href);\r\n        this._cacheStorage.setItem(Constants.loginError, \"\");\r\n        this._cacheStorage.setItem(Constants.stateLogin, authenticationRequest.state);\r\n        this._cacheStorage.setItem(Constants.nonceIdToken, authenticationRequest.nonce);\r\n        this._cacheStorage.setItem(Constants.msalError, \"\");\r\n        this._cacheStorage.setItem(Constants.msalErrorDescription, \"\");\r\n        const authorityKey = Constants.authority + Constants.resourceDelimeter + authenticationRequest.state;\r\n        if (Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\r\n          this._cacheStorage.setItem(authorityKey, this.authority);\r\n        }\r\n\r\n        const urlNavigate = authenticationRequest.createNavigateUrl(scopes) + \"&prompt=select_account\" + \"&response_mode=fragment\";\r\n        this._loginInProgress = true;\r\n        this._requestType = Constants.login;\r\n        this.promptUser(urlNavigate);\r\n      });\r\n  }\r\n\r\n  /*\r\n   * Initiate the login process by opening a popup window.\r\n   * @param {Array.<string>} scopes - Permissions you want included in the access token. Not all scopes are  guaranteed to be included in the access token returned.\r\n   * @param {string} extraQueryParameters - Key-value pairs to pass to the STS during the interactive authentication flow.\r\n   * @returns {Promise.<string>} - A Promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the token or error.\r\n   */\r\n  loginPopup(scopes: Array<string>, extraQueryParameters?: string): Promise<string> {\r\n    /*\r\n    1. Create navigate url\r\n    2. saves value in cache\r\n    3. redirect user to AAD\r\n     */\r\n    return new Promise<string>((resolve, reject) => {\r\n      if (this._loginInProgress) {\r\n        reject(ErrorCodes.loginProgressError + \":\" + ErrorDescription.loginProgressError);\r\n        return;\r\n      }\r\n\r\n      if (scopes) {\r\n        const isValidScope = this.validateInputScope(scopes);\r\n        if (isValidScope && !Utils.isEmpty(isValidScope)) {\r\n          reject(ErrorCodes.inputScopesError + \":\" + ErrorDescription.inputScopesError);\r\n          return;\r\n        }\r\n\r\n        scopes = this.filterScopes(scopes);\r\n      }\r\n      else {\r\n        scopes = [this.clientId];\r\n      }\r\n\r\n      const scope = scopes.join(\" \").toLowerCase();\r\n      var popUpWindow = this.openWindow(\"about:blank\", \"_blank\", 1, this, resolve, reject);\r\n      if (!popUpWindow) {\r\n        return;\r\n      }\r\n\r\n      this.authorityInstance.ResolveEndpointsAsync().then(() => {\r\n        const authenticationRequest = new AuthenticationRequestParameters(this.authorityInstance, this.clientId, scopes, ResponseTypes.id_token, this._redirectUri);\r\n        if (extraQueryParameters) {\r\n          authenticationRequest.extraQueryParameters = extraQueryParameters;\r\n        }\r\n\r\n        this._cacheStorage.setItem(Constants.loginRequest, window.location.href);\r\n        this._cacheStorage.setItem(Constants.loginError, \"\");\r\n        this._cacheStorage.setItem(Constants.nonceIdToken, authenticationRequest.nonce);\r\n        this._cacheStorage.setItem(Constants.msalError, \"\");\r\n        this._cacheStorage.setItem(Constants.msalErrorDescription, \"\");\r\n        const authorityKey = Constants.authority + Constants.resourceDelimeter + authenticationRequest.state;\r\n        if (Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\r\n          this._cacheStorage.setItem(authorityKey, this.authority);\r\n        }\r\n\r\n        const urlNavigate = authenticationRequest.createNavigateUrl(scopes) + \"&prompt=select_account\" + \"&response_mode=fragment\";\r\n        this._renewStates.push(authenticationRequest.state);\r\n        this.registerCallback(authenticationRequest.state, scope, resolve, reject);\r\n        this._requestType = Constants.login;\r\n        this._loginInProgress = true;\r\n        if (popUpWindow) {\r\n          popUpWindow.location.href = urlNavigate;\r\n        }\r\n\r\n      }, () => {\r\n        this._logger.info(ErrorCodes.endpointResolutionError + \":\" + ErrorDescription.endpointResolutionError);\r\n        this._cacheStorage.setItem(Constants.msalError, ErrorCodes.endpointResolutionError);\r\n        this._cacheStorage.setItem(Constants.msalErrorDescription, ErrorDescription.endpointResolutionError);\r\n        if (reject) {\r\n          reject(ErrorCodes.endpointResolutionError + \":\" + ErrorDescription.endpointResolutionError);\r\n        }\r\n\r\n        if (popUpWindow) {\r\n          popUpWindow.close();\r\n        }\r\n      }).catch((err) => {\r\n         reject(err)\r\n      });\r\n    });\r\n  }\r\n\r\n  /*\r\n    * Used to redirect the browser to the STS authorization endpoint\r\n    * @param {string} urlNavigate - URL of the authorization endpoint\r\n    * @hidden\r\n    */\r\n  private promptUser(urlNavigate: string) {\r\n    if (urlNavigate && !Utils.isEmpty(urlNavigate)) {\r\n      this._logger.info(\"Navigate to:\" + urlNavigate);\r\n      window.location.replace(urlNavigate);\r\n    } else {\r\n      this._logger.info(\"Navigate url is empty\");\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Used to send the user to the redirect_uri after authentication is complete. The user\"s bearer token is attached to the URI fragment as an id_token/access_token field.\r\n   * This function also closes the popup window after redirection.\r\n   * @hidden\r\n   * @ignore\r\n   */\r\n  private openWindow(urlNavigate: string, title: string, interval: number, instance: this, resolve?: Function, reject?: Function): Window {\r\n    var popupWindow = this.openPopup(urlNavigate, title, Constants.popUpWidth, Constants.popUpHeight);\r\n    if (popupWindow == null) {\r\n      instance._loginInProgress = false;\r\n      instance._acquireTokenInProgress = false;\r\n      this._logger.info(ErrorCodes.popUpWindowError + \":\" + ErrorDescription.popUpWindowError);\r\n      this._cacheStorage.setItem(Constants.msalError, ErrorCodes.popUpWindowError);\r\n      this._cacheStorage.setItem(Constants.msalErrorDescription, ErrorDescription.popUpWindowError);\r\n      if (reject) {\r\n        reject(ErrorCodes.popUpWindowError + \":\" + ErrorDescription.popUpWindowError);\r\n      }\r\n      return null;\r\n    }\r\n\r\n    this._openedWindows.push(popupWindow);\r\n    var pollTimer = window.setInterval(() => {\r\n      if (popupWindow && popupWindow.closed && instance._loginInProgress) {\r\n        instance._loginInProgress = false;\r\n        instance._acquireTokenInProgress = false;\r\n        if (reject) {\r\n          reject(ErrorCodes.userCancelledError + \":\" + ErrorDescription.userCancelledError);\r\n        }\r\n        window.clearInterval(pollTimer);\r\n      }\r\n\r\n      try {\r\n        var popUpWindowLocation = popupWindow.location;\r\n        if (popUpWindowLocation.href.indexOf(this._redirectUri) !== -1) {\r\n          window.clearInterval(pollTimer);\r\n          instance._loginInProgress = false;\r\n          instance._acquireTokenInProgress = false;\r\n          this._logger.info(\"Closing popup window\");\r\n        }\r\n      } catch (e) {\r\n        //Cross Domain url check error. Will be thrown until AAD redirects the user back to the app\"s root page with the token. No need to log or throw this error as it will create unnecessary traffic.\r\n      }\r\n    },\r\n      interval);\r\n\r\n    return popupWindow;\r\n  }\r\n\r\n  /*\r\n   * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n   * Defaults behaviour is to redirect the user to `window.location.href`.\r\n   */\r\n  logout(): void {\r\n    this.clearCache();\r\n    this._user = null;\r\n    let logout = \"\";\r\n    if (this._postLogoutredirectUri) {\r\n      logout = \"post_logout_redirect_uri=\" + encodeURIComponent(this._postLogoutredirectUri);\r\n    }\r\n\r\n    const urlNavigate = this.authority + \"/oauth2/v2.0/logout?\" + logout;\r\n    this.promptUser(urlNavigate);\r\n  }\r\n\r\n  /*\r\n   * Used to configure the popup window for login.\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private clearCache(): void {\r\n    this._renewStates = [];\r\n    const accessTokenItems = this._cacheStorage.getAllAccessTokens(Constants.clientId, Constants.authority);\r\n    for (let i = 0; i < accessTokenItems.length; i++) {\r\n      this._cacheStorage.removeItem(JSON.stringify(accessTokenItems[i].key));\r\n    }\r\n\r\n    this._cacheStorage.removeAcquireTokenEntries(Constants.acquireTokenUser, Constants.renewStatus);\r\n    this._cacheStorage.removeAcquireTokenEntries(Constants.authority + Constants.resourceDelimeter, Constants.renewStatus);\r\n    this._cacheStorage.resetCacheItems();\r\n  }\r\n\r\n  /*\r\n   * Configures popup window for login.\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private openPopup(urlNavigate: string, title: string, popUpWidth: number, popUpHeight: number) {\r\n    try {\r\n      /*\r\n       * adding winLeft and winTop to account for dual monitor\r\n       * using screenLeft and screenTop for IE8 and earlier\r\n       */\r\n      const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n      const winTop = window.screenTop ? window.screenTop : window.screenY;\r\n      /*\r\n       * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n       * using document.documentElement.clientWidth for IE8 and earlier\r\n       */\r\n      const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n      const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n      const left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r\n      const top = ((height / 2) - (popUpHeight / 2)) + winTop;\r\n\r\n      const popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top + \", left=\" + left);\r\n      if (popupWindow.focus) {\r\n        popupWindow.focus();\r\n      }\r\n\r\n      return popupWindow;\r\n    } catch (e) {\r\n      this._logger.error(\"error opening popup \" + e.message);\r\n      this._loginInProgress = false;\r\n      this._acquireTokenInProgress = false;\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Used to validate the scopes input parameter requested  by the developer.\r\n   * @param {Array<string>} scopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private validateInputScope(scopes: Array<string>): string {\r\n    if (!scopes || scopes.length < 1) {\r\n      return \"Scopes cannot be passed as an empty array\";\r\n    }\r\n\r\n    if (!Array.isArray(scopes)) {\r\n      throw new Error(\"API does not accept non-array scopes\");\r\n    }\r\n\r\n    if (scopes.indexOf(this.clientId) > -1) {\r\n      if (scopes.length > 1) {\r\n        return \"ClientId can only be provided as a single scope\";\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  /*\r\n    * Used to remove openid and profile from the list of scopes passed by the developer.These scopes are added by default\r\n    * @hidden\r\n    */\r\n  private filterScopes(scopes: Array<string>): Array<string> {\r\n    scopes = scopes.filter(function (element) {\r\n      return element !== \"openid\";\r\n    });\r\n\r\n    scopes = scopes.filter(function (element) {\r\n      return element !== \"profile\";\r\n    });\r\n\r\n    return scopes;\r\n  }\r\n  /*\r\n   * Used to add the developer requested callback to the array of callbacks for the specified scopes. The updated array is stored on the window object\r\n   * @param {string} scope - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n   * @param {string} expectedState - Unique state identifier (guid).\r\n   * @param {Function} resolve - The resolve function of the promise object.\r\n   * @param {Function} reject - The reject function of the promise object.\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private registerCallback(expectedState: string, scope: string, resolve: Function, reject: Function): void {\r\n    this._activeRenewals[scope] = expectedState;\r\n    if (!window.callBacksMappedToRenewStates[expectedState]) {\r\n      window.callBacksMappedToRenewStates[expectedState] = [];\r\n    }\r\n    window.callBacksMappedToRenewStates[expectedState].push({ resolve: resolve, reject: reject });\r\n    if (!window.callBackMappedToRenewStates[expectedState]) {\r\n      window.callBackMappedToRenewStates[expectedState] =\r\n        (errorDesc: string, token: string, error: string, tokenType: string) => {\r\n          this._activeRenewals[scope] = null;\r\n          for (let i = 0; i < window.callBacksMappedToRenewStates[expectedState].length; ++i) {\r\n            try {\r\n              if (errorDesc || error) {\r\n                window.callBacksMappedToRenewStates[expectedState][i].reject(errorDesc + \": \" + error);\r\n              }\r\n              else if (token) {\r\n                window.callBacksMappedToRenewStates[expectedState][i].resolve(token);\r\n              }\r\n            } catch (e) {\r\n              this._logger.warning(e);\r\n            }\r\n          }\r\n          window.callBacksMappedToRenewStates[expectedState] = null;\r\n          window.callBackMappedToRenewStates[expectedState] = null;\r\n        };\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Used to get token for the specified set of scopes from the cache\r\n   * @param {AuthenticationRequestParameters} authenticationRequest - Request sent to the STS to obtain an id_token/access_token\r\n   * @param {User} user - User for which the scopes were requested\r\n   * @hidden\r\n   */\r\n  private getCachedToken(authenticationRequest: AuthenticationRequestParameters, user: User): CacheResult {\r\n    let accessTokenCacheItem: AccessTokenCacheItem = null;\r\n    const scopes = authenticationRequest.scopes;\r\n    const tokenCacheItems = this._cacheStorage.getAllAccessTokens(this.clientId, user.userIdentifier); //filter by clientId and user\r\n    if (tokenCacheItems.length === 0) { // No match found after initial filtering\r\n      return null;\r\n    }\r\n\r\n    const filteredItems: Array<AccessTokenCacheItem> = [];\r\n    //if no authority passed\r\n    if (!authenticationRequest.authority) {\r\n      //filter by scope\r\n      for (let i = 0; i < tokenCacheItems.length; i++) {\r\n        const cacheItem = tokenCacheItems[i];\r\n        const cachedScopes = cacheItem.key.scopes.split(\" \");\r\n        if (Utils.containsScope(cachedScopes, scopes)) {\r\n          filteredItems.push(cacheItem);\r\n        }\r\n      }\r\n\r\n      //if only one cached token found\r\n      if (filteredItems.length === 1) {\r\n        accessTokenCacheItem = filteredItems[0];\r\n\r\n        authenticationRequest.authorityInstance = AuthorityFactory.CreateInstance(accessTokenCacheItem.key.authority, this.validateAuthority);\r\n      }\r\n      else if (filteredItems.length > 1) {\r\n        return {\r\n          errorDesc: \"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements like authority\",\r\n          token: null,\r\n          error: \"multiple_matching_tokens_detected\"\r\n        };\r\n      }\r\n      else {\r\n        //no match found. check if there was a single authority used\r\n        const authorityList = this.getUniqueAuthority(tokenCacheItems, \"authority\");\r\n        if (authorityList.length > 1) {\r\n          return {\r\n            errorDesc: \"Multiple authorities found in the cache. Pass authority in the API overload.\",\r\n            token: null,\r\n            error: \"multiple_matching_tokens_detected\"\r\n          };\r\n        }\r\n\r\n        authenticationRequest.authorityInstance = AuthorityFactory.CreateInstance(authorityList[0], this.validateAuthority);\r\n      }\r\n    }\r\n    else {\r\n      //authority was passed in the API, filter by authority and scope\r\n      for (let i = 0; i < tokenCacheItems.length; i++) {\r\n        const cacheItem = tokenCacheItems[i];\r\n        const cachedScopes = cacheItem.key.scopes.split(\" \");\r\n        if (Utils.containsScope(cachedScopes, scopes) && cacheItem.key.authority === authenticationRequest.authority) {\r\n          filteredItems.push(cacheItem);\r\n        }\r\n      }\r\n\r\n      //no match\r\n      if (filteredItems.length === 0) {\r\n        return null;\r\n      }\r\n      //only one cachedToken Found\r\n      else if (filteredItems.length === 1) {\r\n        accessTokenCacheItem = filteredItems[0];\r\n      }\r\n      else {\r\n        //more than one match found.\r\n        return {\r\n          errorDesc: \"The cache contains multiple tokens satisfying the requirements.Call AcquireToken again providing more requirements like authority\",\r\n          token: null,\r\n          error: \"multiple_matching_tokens_detected\"\r\n        };\r\n      }\r\n    }\r\n\r\n    if (accessTokenCacheItem != null) {\r\n      const expired = Number(accessTokenCacheItem.value.expiresIn);\r\n      // If expiration is within offset, it will force renew\r\n      const offset = this._clockSkew || 300;\r\n      if (expired && (expired > Utils.now() + offset)) {\r\n        return {\r\n          errorDesc: null,\r\n          token: accessTokenCacheItem.value.accessToken,\r\n          error: null\r\n        };\r\n      } else {\r\n        this._cacheStorage.removeItem(JSON.stringify(filteredItems[0].key));\r\n        return null;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Used to filter all cached items and return a list of unique users based on userIdentifier.\r\n   * @param {Array<User>} Users - users saved in the cache.\r\n   */\r\n  getAllUsers(): Array<User> {\r\n    const users: Array<User> = [];\r\n    const accessTokenCacheItems = this._cacheStorage.getAllAccessTokens(Constants.clientId, Constants.authority);\r\n    for (let i = 0; i < accessTokenCacheItems.length; i++) {\r\n      const idToken = new IdToken(accessTokenCacheItems[i].value.idToken);\r\n      const clientInfo = new ClientInfo(accessTokenCacheItems[i].value.clientInfo);\r\n      const user = User.createUser(idToken, clientInfo, this.authority);\r\n      users.push(user);\r\n    }\r\n\r\n    return this.getUniqueUsers(users);\r\n  }\r\n\r\n  /*\r\n   * Used to filter users based on userIdentifier\r\n   * @param {Array<User>}  Users - users saved in the cache\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private getUniqueUsers(users: Array<User>): Array<User> {\r\n    if (!users || users.length <= 1) {\r\n      return users;\r\n    }\r\n\r\n    const flags: Array<string> = [];\r\n    const uniqueUsers: Array<User> = [];\r\n    for (let index = 0; index < users.length; ++index) {\r\n      if (users[index].userIdentifier && flags.indexOf(users[index].userIdentifier) === -1) {\r\n        flags.push(users[index].userIdentifier);\r\n        uniqueUsers.push(users[index]);\r\n      }\r\n    }\r\n\r\n    return uniqueUsers;\r\n  }\r\n\r\n  /*\r\n  * Used to get a unique list of authoritues from the cache\r\n  * @param {Array<AccessTokenCacheItem>}  accessTokenCacheItems - accessTokenCacheItems saved in the cache\r\n  * @ignore\r\n  * @hidden\r\n  */\r\n  private getUniqueAuthority(accessTokenCacheItems: Array<AccessTokenCacheItem>, property: string): Array<string> {\r\n    const authorityList: Array<string> = [];\r\n    const flags: Array<string> = [];\r\n    accessTokenCacheItems.forEach(element => {\r\n      if (element.key.hasOwnProperty(property) && (flags.indexOf(element.key[property]) === -1)) {\r\n        flags.push(element.key[property]);\r\n        authorityList.push(element.key[property]);\r\n      }\r\n    });\r\n    return authorityList;\r\n  }\r\n\r\n  /*\r\n   * Adds login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time\r\n   * domain_hint can be one of users/organisations which when added skips the email based discovery process of the user\r\n   * domain_req utid received as part of the clientInfo\r\n   * login_req uid received as part of clientInfo\r\n   * @param {string} urlNavigate - Authentication request url\r\n   * @param {User} user - User for which the token is requested\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private addHintParameters(urlNavigate: string, user: User): string {\r\n    const userObject = user ? user : this.getUser();\r\n    const decodedClientInfo = userObject.userIdentifier.split(\".\");\r\n    const uid = Utils.base64DecodeStringUrlSafe(decodedClientInfo[0]);\r\n    const utid = Utils.base64DecodeStringUrlSafe(decodedClientInfo[1]);\r\n    if (!this.urlContainsQueryStringParameter(\"login_hint\", urlNavigate) && userObject.displayableId && !Utils.isEmpty(userObject.displayableId)) {\r\n      urlNavigate += \"&login_hint=\" + encodeURIComponent(user.displayableId);\r\n    }\r\n\r\n    if (!Utils.isEmpty(uid) && !Utils.isEmpty(utid)) {\r\n      if (!this.urlContainsQueryStringParameter(\"domain_req\", urlNavigate) && !Utils.isEmpty(utid)) {\r\n        urlNavigate += \"&domain_req=\" + encodeURIComponent(utid);\r\n      }\r\n\r\n      if (!this.urlContainsQueryStringParameter(\"login_req\", urlNavigate) && !Utils.isEmpty(uid)) {\r\n        urlNavigate += \"&login_req=\" + encodeURIComponent(uid);\r\n      }\r\n\r\n      if (!this.urlContainsQueryStringParameter(\"domain_hint\", urlNavigate) && !Utils.isEmpty(utid)) {\r\n        if (utid === \"9188040d-6c67-4c5b-b112-36a304b66dad\") {\r\n          urlNavigate += \"&domain_hint=\" + encodeURIComponent(\"consumers\");\r\n        } else {\r\n          urlNavigate += \"&domain_hint=\" + encodeURIComponent(\"organizations\");\r\n        }\r\n      }\r\n    }\r\n\r\n    return urlNavigate;\r\n  }\r\n\r\n  /*\r\n   * Checks if the authorization endpoint URL contains query string parameters\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private urlContainsQueryStringParameter(name: string, url: string): boolean {\r\n    // regex to detect pattern of a ? or & followed by the name parameter and an equals character\r\n    const regex = new RegExp(\"[\\\\?&]\" + name + \"=\");\r\n    return regex.test(url);\r\n  }\r\n\r\n  /*\r\n   * Used to obtain an access_token by redirecting the user to the authorization endpoint.\r\n   * To renew idToken, clientId should be passed as the only scope in the scopes array.\r\n   * @param {Array<string>} scopes - Permissions you want included in the access token. Not all scopes are  guaranteed to be included in the access token. Scopes like \"openid\" and \"profile\" are sent with every request.\r\n   * @param {string} authority - A URL indicating a directory that MSAL can use to obtain tokens.\r\n   * - In Azure AD, it is of the form https://{instance}/&lt;tenant&gt;, where &lt;tenant&gt; is the directory host (e.g. https://login.microsoftonline.com) and &lt;tenant&gt; is a identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory)\r\n   * - In Azure B2C, it is of the form https://{instance}/tfp/&lt;tenant&gt;/<policyName>\r\n   * - Default value is: \"https://login.microsoftonline.com/common\"\r\n   * @param {User} user - The user for which the scopes are requested.The default user is the logged in user.\r\n   * @param {string} extraQueryParameters - Key-value pairs to pass to the STS during the  authentication flow.\r\n   */\r\n  acquireTokenRedirect(scopes: Array<string>): void;\r\n  acquireTokenRedirect(scopes: Array<string>, authority: string): void;\r\n  acquireTokenRedirect(scopes: Array<string>, authority: string, user: User): void;\r\n  acquireTokenRedirect(scopes: Array<string>, authority: string, user: User, extraQueryParameters: string): void;\r\n  acquireTokenRedirect(scopes: Array<string>, authority?: string, user?: User, extraQueryParameters?: string): void {\r\n    const isValidScope = this.validateInputScope(scopes);\r\n    if (isValidScope && !Utils.isEmpty(isValidScope)) {\r\n      if (this._tokenReceivedCallback) {\r\n        this._tokenReceivedCallback(isValidScope, null, null, Constants.accessToken);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (scopes) {\r\n      scopes = this.filterScopes(scopes);\r\n    }\r\n\r\n    const userObject = user ? user : this.getUser();\r\n    if (this._acquireTokenInProgress) {\r\n      return;\r\n    }\r\n\r\n    const scope = scopes.join(\" \").toLowerCase();\r\n    if (!userObject) {\r\n      if (this._tokenReceivedCallback) {\r\n        this._tokenReceivedCallback(ErrorDescription.userLoginError, null, ErrorCodes.userLoginError, Constants.accessToken);\r\n        return;\r\n      }\r\n    }\r\n\r\n    this._acquireTokenInProgress = true;\r\n    let authenticationRequest: AuthenticationRequestParameters;\r\n    let acquireTokenAuthority = authority ? AuthorityFactory.CreateInstance(authority, this.validateAuthority) : this.authorityInstance;\r\n\r\n    acquireTokenAuthority.ResolveEndpointsAsync().then(() => {\r\n      if (Utils.compareObjects(userObject, this.getUser())) {\r\n        authenticationRequest = new AuthenticationRequestParameters(acquireTokenAuthority, this.clientId, scopes, ResponseTypes.token, this._redirectUri);\r\n      } else {\r\n        authenticationRequest = new AuthenticationRequestParameters(acquireTokenAuthority, this.clientId, scopes, ResponseTypes.id_token_token, this._redirectUri);\r\n      }\r\n\r\n      this._cacheStorage.setItem(Constants.nonceIdToken, authenticationRequest.nonce);\r\n      const acquireTokenUserKey = Constants.acquireTokenUser + Constants.resourceDelimeter + userObject.userIdentifier + Constants.resourceDelimeter + authenticationRequest.state;\r\n      if (Utils.isEmpty(this._cacheStorage.getItem(acquireTokenUserKey))) {\r\n        this._cacheStorage.setItem(acquireTokenUserKey, JSON.stringify(userObject));\r\n      }\r\n\r\n      const authorityKey = Constants.authority + Constants.resourceDelimeter + authenticationRequest.state;\r\n      if (Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\r\n        this._cacheStorage.setItem(authorityKey, acquireTokenAuthority.CanonicalAuthority);\r\n      }\r\n\r\n      if (extraQueryParameters) {\r\n        authenticationRequest.extraQueryParameters = extraQueryParameters;\r\n      }\r\n\r\n      let urlNavigate = authenticationRequest.createNavigateUrl(scopes) + \"&prompt=select_account\" + \"&response_mode=fragment\";\r\n      urlNavigate = this.addHintParameters(urlNavigate, userObject);\r\n      if (urlNavigate) {\r\n        this._cacheStorage.setItem(Constants.stateAcquireToken, authenticationRequest.state);\r\n        this._requestType = Constants.renewToken;\r\n        window.location.replace(urlNavigate);\r\n      }\r\n    });\r\n  }\r\n\r\n  /*\r\n   * Used to acquire an access token for a new user using interactive authentication via a popup Window.\r\n   * To request an id_token, pass the clientId as the only scope in the scopes array.\r\n   * @param {Array<string>} scopes - Permissions you want included in the access token. Not all scopes are  guaranteed to be included in the access token. Scopes like \"openid\" and \"profile\" are sent with every request.\r\n   * @param {string} authority - A URL indicating a directory that MSAL can use to obtain tokens.\r\n   * - In Azure AD, it is of the form https://&lt;tenant&gt;/&lt;tenant&gt;, where &lt;tenant&gt; is the directory host (e.g. https://login.microsoftonline.com) and &lt;tenant&gt; is a identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory)\r\n   * - In Azure B2C, it is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/<policyName>/\r\n   * - Default value is: \"https://login.microsoftonline.com/common\".\r\n   * @param {User} user - The user for which the scopes are requested.The default user is the logged in user.\r\n   * @param {string} extraQueryParameters - Key-value pairs to pass to the STS during the  authentication flow.\r\n   * @returns {Promise.<string>} - A Promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the token or error.\r\n   */\r\n  acquireTokenPopup(scopes: Array<string>): Promise<string>;\r\n  acquireTokenPopup(scopes: Array<string>, authority: string): Promise<string>;\r\n  acquireTokenPopup(scopes: Array<string>, authority: string, user: User): Promise<string>;\r\n  acquireTokenPopup(scopes: Array<string>, authority: string, user: User, extraQueryParameters: string): Promise<string>;\r\n  acquireTokenPopup(scopes: Array<string>, authority?: string, user?: User, extraQueryParameters?: string): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n      const isValidScope = this.validateInputScope(scopes);\r\n      if (isValidScope && !Utils.isEmpty(isValidScope)) {\r\n        reject(ErrorCodes.inputScopesError + \":\" + isValidScope);\r\n      }\r\n\r\n      if (scopes) {\r\n        scopes = this.filterScopes(scopes);\r\n      }\r\n\r\n      const userObject = user ? user : this.getUser();\r\n      if (this._acquireTokenInProgress) {\r\n        reject(ErrorCodes.acquireTokenProgressError + \":\" + ErrorDescription.acquireTokenProgressError);\r\n        return;\r\n      }\r\n\r\n      const scope = scopes.join(\" \").toLowerCase();\r\n      if (!userObject) {\r\n        reject(ErrorCodes.userLoginError + \":\" + ErrorDescription.userLoginError);\r\n        return;\r\n      }\r\n\r\n      this._acquireTokenInProgress = true;\r\n      let authenticationRequest: AuthenticationRequestParameters;\r\n      let acquireTokenAuthority = authority ? AuthorityFactory.CreateInstance(authority, this.validateAuthority) : this.authorityInstance;\r\n      var popUpWindow = this.openWindow(\"about:blank\", \"_blank\", 1, this, resolve, reject);\r\n      if (!popUpWindow) {\r\n        return;\r\n      }\r\n\r\n      acquireTokenAuthority.ResolveEndpointsAsync().then(() => {\r\n          if (Utils.compareObjects(userObject, this.getUser())) {\r\n          if (scopes.indexOf(this.clientId) > -1) {\r\n            authenticationRequest = new AuthenticationRequestParameters(acquireTokenAuthority, this.clientId, scopes, ResponseTypes.id_token, this._redirectUri);\r\n          }\r\n          else {\r\n            authenticationRequest = new AuthenticationRequestParameters(acquireTokenAuthority, this.clientId, scopes, ResponseTypes.token, this._redirectUri);\r\n          }\r\n        } else {\r\n          authenticationRequest = new AuthenticationRequestParameters(acquireTokenAuthority, this.clientId, scopes, ResponseTypes.id_token_token, this._redirectUri);\r\n        }\r\n\r\n        this._cacheStorage.setItem(Constants.nonceIdToken, authenticationRequest.nonce);\r\n        authenticationRequest.state = authenticationRequest.state;\r\n        const acquireTokenUserKey = Constants.acquireTokenUser + Constants.resourceDelimeter + userObject.userIdentifier + Constants.resourceDelimeter + authenticationRequest.state;\r\n        if (Utils.isEmpty(this._cacheStorage.getItem(acquireTokenUserKey))) {\r\n          this._cacheStorage.setItem(acquireTokenUserKey, JSON.stringify(userObject));\r\n        }\r\n\r\n        const authorityKey = Constants.authority + Constants.resourceDelimeter + authenticationRequest.state;\r\n        if (Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\r\n          this._cacheStorage.setItem(authorityKey, acquireTokenAuthority.CanonicalAuthority);\r\n        }\r\n\r\n        if (extraQueryParameters) {\r\n          authenticationRequest.extraQueryParameters = extraQueryParameters;\r\n        }\r\n\r\n        let urlNavigate = authenticationRequest.createNavigateUrl(scopes) + \"&prompt=select_account\" + \"&response_mode=fragment\";\r\n        urlNavigate = this.addHintParameters(urlNavigate, userObject);\r\n        this._renewStates.push(authenticationRequest.state);\r\n        this.registerCallback(authenticationRequest.state, scope, resolve, reject);\r\n        this._requestType = Constants.renewToken;\r\n        if (popUpWindow) {\r\n          popUpWindow.location.href = urlNavigate;\r\n        }\r\n\r\n      }, () => {\r\n        this._logger.info(ErrorCodes.endpointResolutionError + \":\" + ErrorDescription.endpointResolutionError);\r\n        this._cacheStorage.setItem(Constants.msalError, ErrorCodes.endpointResolutionError);\r\n        this._cacheStorage.setItem(Constants.msalErrorDescription, ErrorDescription.endpointResolutionError);\r\n        if (reject) {\r\n          reject(ErrorCodes.endpointResolutionError + \":\" + ErrorDescription.endpointResolutionError);\r\n        }\r\n        if (popUpWindow) {\r\n            popUpWindow.close();\r\n        }\r\n        }).catch((err) => {\r\n           reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  /*\r\n   * Used to get the token from cache.\r\n   * MSAL will return the cached token if it is not expired.\r\n   * Or it will send a request to the STS to obtain an access_token using a hidden iframe. To renew idToken, clientId should be passed as the only scope in the scopes array.\r\n   * @param {Array<string>} scopes - Permissions you want included in the access token. Not all scopes are  guaranteed to be included in the access token. Scopes like \"openid\" and \"profile\" are sent with every request.\r\n   * @param {string} authority - A URL indicating a directory that MSAL can use to obtain tokens.\r\n   * - In Azure AD, it is of the form https://&lt;tenant&gt;/&lt;tenant&gt;, where &lt;tenant&gt; is the directory host (e.g. https://login.microsoftonline.com) and &lt;tenant&gt; is a identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory)\r\n   * - In Azure B2C, it is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/<policyName>/\r\n   * - Default value is: \"https://login.microsoftonline.com/common\"\r\n   * @param {User} user - The user for which the scopes are requested.The default user is the logged in user.\r\n   * @param {string} extraQueryParameters - Key-value pairs to pass to the STS during the  authentication flow.\r\n   * @returns {Promise.<string>} - A Promise that is fulfilled when this function has completed, or rejected if an error was raised. Resolved with token or rejected with error.\r\n   */\r\n  @resolveTokenOnlyIfOutOfIframe\r\n  acquireTokenSilent(scopes: Array<string>, authority?: string, user?: User, extraQueryParameters?: string): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n      const isValidScope = this.validateInputScope(scopes);\r\n      if (isValidScope && !Utils.isEmpty(isValidScope)) {\r\n        reject(ErrorCodes.inputScopesError + \":\" + isValidScope);\r\n      } else {\r\n        if (scopes) {\r\n          scopes = this.filterScopes(scopes);\r\n        }\r\n\r\n        const scope = scopes.join(\" \").toLowerCase();\r\n        const userObject = user ? user : this.getUser();\r\n        if (!userObject) {\r\n          reject(ErrorCodes.userLoginError + \":\" + ErrorDescription.userLoginError);\r\n          return;\r\n        }\r\n\r\n        let authenticationRequest: AuthenticationRequestParameters;\r\n        let newAuthority = authority ? AuthorityFactory.CreateInstance(authority, this.validateAuthority) : this.authorityInstance;\r\n        if (Utils.compareObjects(userObject, this.getUser())) {\r\n          if (scopes.indexOf(this.clientId) > -1) {\r\n            authenticationRequest = new AuthenticationRequestParameters(newAuthority, this.clientId, scopes, ResponseTypes.id_token, this._redirectUri);\r\n          }\r\n          else {\r\n            authenticationRequest = new AuthenticationRequestParameters(newAuthority, this.clientId, scopes, ResponseTypes.token, this._redirectUri);\r\n          }\r\n        } else {\r\n          authenticationRequest = new AuthenticationRequestParameters(newAuthority, this.clientId, scopes, ResponseTypes.id_token_token, this._redirectUri);\r\n        }\r\n\r\n        const cacheResult = this.getCachedToken(authenticationRequest, userObject);\r\n        if (cacheResult) {\r\n          if (cacheResult.token) {\r\n            this._logger.info(\"Token is already in cache for scope:\" + scope);\r\n            resolve(cacheResult.token);\r\n            return;\r\n          }\r\n          else if (cacheResult.errorDesc || cacheResult.error) {\r\n            this._logger.info(cacheResult.errorDesc + \":\" + cacheResult.error);\r\n            reject(cacheResult.errorDesc + \": \" + cacheResult.error);\r\n            return;\r\n          }\r\n        }\r\n\r\n        this._requestType = Constants.renewToken;\r\n        // cache miss\r\n        return this.authorityInstance.ResolveEndpointsAsync()\r\n          .then(() => {\r\n            // refresh attept with iframe\r\n            //Already renewing for this scope, callback when we get the token.\r\n              if (this._activeRenewals[scope]) {\r\n              this._logger.verbose(\"Renew token for scope: \" + scope + \" is in progress. Registering callback\");\r\n              //Active renewals contains the state for each renewal.\r\n              this.registerCallback(this._activeRenewals[scope], scope, resolve, reject);\r\n            }\r\n            else {\r\n              if (scopes && scopes.indexOf(this.clientId) > -1 && scopes.length === 1) {\r\n                // App uses idToken to send to api endpoints\r\n                // Default scope is tracked as clientId to store this token\r\n                this._logger.verbose(\"renewing idToken\");\r\n                this.renewIdToken(scopes, resolve, reject, userObject, authenticationRequest, extraQueryParameters);\r\n              } else {\r\n                this._logger.verbose(\"renewing accesstoken\");\r\n                this.renewToken(scopes, resolve, reject, userObject, authenticationRequest, extraQueryParameters);\r\n              }\r\n            }\r\n          }).catch((err) => {\r\n             reject(err)\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /*\r\n   * Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left.\r\n   * registered when network errors occur and subsequent token requests for same resource are registered to the pending request.\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private loadIframeTimeout(urlNavigate: string, frameName: string, scope: string): void {\r\n    //set iframe session to pending\r\n    this._logger.verbose(\"Set loading state to pending for: \" + scope);\r\n    this._cacheStorage.setItem(Constants.renewStatus + scope, Constants.tokenRenewStatusInProgress);\r\n    this.loadFrame(urlNavigate, frameName);\r\n    setTimeout(() => {\r\n      if (this._cacheStorage.getItem(Constants.renewStatus + scope) === Constants.tokenRenewStatusInProgress) {\r\n          // fail the iframe session if it\"s in pending state\r\n        this._logger.verbose(\"Loading frame has timed out after: \" + (this.loadFrameTimeout / 1000) + \" seconds for scope \" + scope);\r\n        const expectedState = this._activeRenewals[scope];\r\n        if (expectedState && window.callBackMappedToRenewStates[expectedState]) {\r\n            window.callBackMappedToRenewStates[expectedState](\"Token renewal operation failed due to timeout\", null, \"Token Renewal Failed\", Constants.accessToken);\r\n        }\r\n              \r\n        this._cacheStorage.setItem(Constants.renewStatus + scope, Constants.tokenRenewStatusCancelled);\r\n      }\r\n    }, this.loadFrameTimeout);\r\n  }\r\n\r\n  /*\r\n   * Loads iframe with authorization endpoint URL\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private loadFrame(urlNavigate: string, frameName: string): void {\r\n    // This trick overcomes iframe navigation in IE\r\n    // IE does not load the page consistently in iframe\r\n    this._logger.info(\"LoadFrame: \" + frameName);\r\n    var frameCheck = frameName;\r\n    setTimeout(() => {\r\n      var frameHandle = this.addAdalFrame(frameCheck);\r\n      if (frameHandle.src === \"\" || frameHandle.src === \"about:blank\") {\r\n        frameHandle.src = urlNavigate;\r\n      }\r\n    },\r\n      500);\r\n  }\r\n\r\n  /*\r\n   * Adds the hidden iframe for silent token renewal.\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private addAdalFrame(iframeId: string): HTMLIFrameElement {\r\n    if (typeof iframeId === \"undefined\") {\r\n      return null;\r\n    }\r\n\r\n    this._logger.info(\"Add msal frame to document:\" + iframeId);\r\n    let adalFrame = document.getElementById(iframeId) as HTMLIFrameElement;\r\n    if (!adalFrame) {\r\n      if (document.createElement &&\r\n        document.documentElement &&\r\n        (window.navigator.userAgent.indexOf(\"MSIE 5.0\") === -1)) {\r\n        const ifr = document.createElement(\"iframe\");\r\n        ifr.setAttribute(\"id\", iframeId);\r\n        ifr.style.visibility = \"hidden\";\r\n        ifr.style.position = \"absolute\";\r\n        ifr.style.width = ifr.style.height = \"0\";\r\n        ifr.style.border = \"0\";\r\n        adalFrame = (document.getElementsByTagName(\"body\")[0].appendChild(ifr) as HTMLIFrameElement);\r\n      } else if (document.body && document.body.insertAdjacentHTML) {\r\n          document.body.insertAdjacentHTML('beforeend', '<iframe name=\"' + iframeId + '\" id=\"' + iframeId + '\" style=\"display:none\"></iframe>');\r\n      }\r\n\r\n      if (window.frames && window.frames[iframeId]) {\r\n        adalFrame = window.frames[iframeId];\r\n      }\r\n    }\r\n\r\n    return adalFrame;\r\n  }\r\n\r\n  /*\r\n   * Acquires access token using a hidden iframe.\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private renewToken(scopes: Array<string>, resolve: Function, reject: Function, user: User, authenticationRequest: AuthenticationRequestParameters, extraQueryParameters?: string): void {\r\n    const scope = scopes.join(\" \").toLowerCase();\r\n    this._logger.verbose(\"renewToken is called for scope:\" + scope);\r\n    const frameHandle = this.addAdalFrame(\"msalRenewFrame\" + scope);\r\n    if (extraQueryParameters) {\r\n      authenticationRequest.extraQueryParameters = extraQueryParameters;\r\n    }\r\n\r\n    const acquireTokenUserKey = Constants.acquireTokenUser + Constants.resourceDelimeter + user.userIdentifier + Constants.resourceDelimeter + authenticationRequest.state;\r\n    if (Utils.isEmpty(this._cacheStorage.getItem(acquireTokenUserKey))) {\r\n      this._cacheStorage.setItem(acquireTokenUserKey, JSON.stringify(user));\r\n    }\r\n\r\n    const authorityKey = Constants.authority + Constants.resourceDelimeter + authenticationRequest.state;\r\n    if (Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\r\n      this._cacheStorage.setItem(authorityKey, authenticationRequest.authority);\r\n    }\r\n\r\n    // renew happens in iframe, so it keeps javascript context\r\n    this._cacheStorage.setItem(Constants.nonceIdToken, authenticationRequest.nonce);\r\n    this._logger.verbose(\"Renew token Expected state: \" + authenticationRequest.state);\r\n    let urlNavigate = authenticationRequest.createNavigateUrl(scopes) + \"&prompt=none\";\r\n    urlNavigate = this.addHintParameters(urlNavigate, user);\r\n    this._renewStates.push(authenticationRequest.state);\r\n    this.registerCallback(authenticationRequest.state, scope, resolve, reject);\r\n    this._logger.infoPii(\"Navigate to:\" + urlNavigate);\r\n    frameHandle.src = \"about:blank\";\r\n    this.loadIframeTimeout(urlNavigate, \"msalRenewFrame\" + scope, scope);\r\n  }\r\n\r\n  /*\r\n   * Renews idtoken for app\"s own backend when clientId is passed as a single scope in the scopes array.\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private renewIdToken(scopes: Array<string>, resolve: Function, reject: Function, user: User, authenticationRequest: AuthenticationRequestParameters, extraQueryParameters?: string): void {\r\n    const scope = scopes.join(\" \").toLowerCase();\r\n    this._logger.info(\"renewidToken is called\");\r\n    const frameHandle = this.addAdalFrame(\"msalIdTokenFrame\");\r\n    if (extraQueryParameters) {\r\n      authenticationRequest.extraQueryParameters = extraQueryParameters;\r\n    }\r\n\r\n    const acquireTokenUserKey = Constants.acquireTokenUser + Constants.resourceDelimeter + user.userIdentifier + Constants.resourceDelimeter + authenticationRequest.state;\r\n    if (Utils.isEmpty(this._cacheStorage.getItem(acquireTokenUserKey))) {\r\n      this._cacheStorage.setItem(acquireTokenUserKey, JSON.stringify(user));\r\n    }\r\n\r\n    const authorityKey = Constants.authority + Constants.resourceDelimeter + authenticationRequest.state;\r\n    if (Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\r\n      this._cacheStorage.setItem(authorityKey, authenticationRequest.authority);\r\n    }\r\n\r\n    this._cacheStorage.setItem(Constants.nonceIdToken, authenticationRequest.nonce);\r\n    this._logger.verbose(\"Renew Idtoken Expected state: \" + authenticationRequest.state);\r\n    let urlNavigate = authenticationRequest.createNavigateUrl(scopes) + \"&prompt=none\";\r\n    urlNavigate = this.addHintParameters(urlNavigate, user);\r\n    this._renewStates.push(authenticationRequest.state);\r\n    this.registerCallback(authenticationRequest.state, this.clientId, resolve, reject);\r\n    this._logger.infoPii(\"Navigate to:\" + urlNavigate);\r\n    frameHandle.src = \"about:blank\";\r\n    this.loadIframeTimeout(urlNavigate, \"msalIdTokenFrame\", this.clientId);\r\n  }\r\n\r\n  /*\r\n    * Returns the signed in user (received from a user object created at the time of login) or null.\r\n    */\r\n  getUser(): User {\r\n    // idToken is first call\r\n    if (this._user) {\r\n      return this._user;\r\n    }\r\n\r\n    // frame is used to get idToken\r\n    const rawIdToken = this._cacheStorage.getItem(Constants.idTokenKey);\r\n    const rawClientInfo = this._cacheStorage.getItem(Constants.msalClientInfo);\r\n    if (!Utils.isEmpty(rawIdToken) && !Utils.isEmpty(rawClientInfo)) {\r\n      const idToken = new IdToken(rawIdToken);\r\n      const clientInfo = new ClientInfo(rawClientInfo);\r\n      this._user = User.createUser(idToken, clientInfo, this.authority);\r\n      return this._user;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /*\r\n   * This method must be called for processing the response received from the STS. It extracts the hash, processes the token or error information and saves it in the cache. It then\r\n   * calls the registered callbacks in case of redirect or resolves the promises with the result.\r\n   * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n   * @hidden\r\n   */\r\n  private handleAuthenticationResponse(hash: string): void {\r\n    if (hash == null) {\r\n      hash = window.location.hash;\r\n    }\r\n\r\n    var self = null;\r\n    var isPopup: boolean = false;\r\n    var isWindowOpenerMsal = false;\r\n\r\n    try {\r\n        isWindowOpenerMsal = window.opener && window.opener.msal && window.opener.msal !== window.msal;\r\n    } catch (err) {\r\n        // err = SecurityError: Blocked a frame with origin \"[url]\" from accessing a cross-origin frame.\r\n        isWindowOpenerMsal = false;\r\n    }\r\n\r\n    if (isWindowOpenerMsal) {\r\n        self = window.opener.msal;\r\n        isPopup = true;\r\n    }\r\n    else if (window.parent && window.parent.msal) {\r\n      self = window.parent.msal;\r\n    }\r\n\r\n    const requestInfo = self.getRequestInfo(hash);\r\n    let token: string = null, tokenReceivedCallback: (errorDesc: string, token: string, error: string, tokenType: string) => void = null, tokenType: string, saveToken:boolean = true;\r\n    \r\n    self._logger.info(\"Returned from redirect url\");\r\n    \r\n    if (window.parent !== window && window.parent.callBackMappedToRenewStates[requestInfo.stateResponse]) {\r\n        tokenReceivedCallback = window.parent.callBackMappedToRenewStates[requestInfo.stateResponse];\r\n    }\r\n    else if (window.opener && window.opener.msal && window.opener.callBackMappedToRenewStates[requestInfo.stateResponse]) {\r\n        tokenReceivedCallback = window.opener.callBackMappedToRenewStates[requestInfo.stateResponse];\r\n    }\r\n    else {\r\n        if (self._navigateToLoginRequestUrl) {\r\n            tokenReceivedCallback = null;\r\n            self._cacheStorage.setItem(Constants.urlHash, hash);\r\n            saveToken = false;\r\n            if (window.parent === window && !isPopup) {\r\n                window.location.href = self._cacheStorage.getItem(Constants.loginRequest);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            tokenReceivedCallback = self._tokenReceivedCallback;\r\n            window.location.hash = '';\r\n        }\r\n\r\n    }\r\n\r\n    self.saveTokenFromHash(requestInfo);\r\n\r\n    if ((requestInfo.requestType === Constants.renewToken) && window.parent) {\r\n        if (window.parent!==window) {\r\n            self._logger.verbose(\"Window is in iframe, acquiring token silently\");\r\n        } else {\r\n            self._logger.verbose(\"acquiring token interactive in progress\");\r\n        }\r\n\r\n    token = requestInfo.parameters[Constants.accessToken] || requestInfo.parameters[Constants.idToken];\r\n    tokenType = Constants.accessToken;\r\n    } else if (requestInfo.requestType === Constants.login) {\r\n    token = requestInfo.parameters[Constants.idToken];\r\n    tokenType = Constants.idToken;\r\n    }\r\n\r\n    var errorDesc = requestInfo.parameters[Constants.errorDescription];\r\n    var error = requestInfo.parameters[Constants.error];\r\n  \r\n    try {\r\n        if (tokenReceivedCallback) {\r\n            tokenReceivedCallback.call(self, errorDesc, token, error, tokenType);\r\n        }\r\n\r\n    } catch (err) {\r\n        self._logger.error(\"Error occurred in token received callback function: \" + err);\r\n    }\r\n    \r\n    for (var i = 0; i < self._openedWindows.length; i++) {\r\n        self._openedWindows[i].close();\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n   * This method must be called for processing the response received from AAD. It extracts the hash, processes the token or error, saves it in the cache and calls the registered callbacks with the result.\r\n   * @param {string} authority authority received in the redirect response from AAD.\r\n   * @param {TokenResponse} requestInfo an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n   * @param {User} user user object for which scopes are consented for. The default user is the logged in user.\r\n   * @param {ClientInfo} clientInfo clientInfo received as part of the response comprising of fields uid and utid.\r\n   * @param {IdToken} idToken idToken received as part of the response.\r\n   * @ignore\r\n   * @private\r\n   * @hidden\r\n   */\r\n  private saveAccessToken(authority: string, tokenResponse: TokenResponse, user: User, clientInfo: string, idToken: IdToken): void {\r\n    let scope: string;\r\n    let clientObj: ClientInfo = new ClientInfo(clientInfo);\r\n    if (tokenResponse.parameters.hasOwnProperty(\"scope\")) {\r\n      scope = tokenResponse.parameters[\"scope\"];\r\n      const consentedScopes = scope.split(\" \");\r\n      const accessTokenCacheItems =\r\n        this._cacheStorage.getAllAccessTokens(this.clientId, authority);\r\n      for (let i = 0; i < accessTokenCacheItems.length; i++) {\r\n        const accessTokenCacheItem = accessTokenCacheItems[i];\r\n        if (accessTokenCacheItem.key.userIdentifier === user.userIdentifier) {\r\n          const cachedScopes = accessTokenCacheItem.key.scopes.split(\" \");\r\n          if (Utils.isIntersectingScopes(cachedScopes, consentedScopes)) {\r\n              this._cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n          }\r\n        }\r\n      }\r\n      const accessTokenKey = new AccessTokenKey(authority, this.clientId, scope, clientObj.uid, clientObj.utid);\r\n      const accessTokenValue = new AccessTokenValue(tokenResponse.parameters[Constants.accessToken], idToken.rawIdToken, Utils.expiresIn(tokenResponse.parameters[Constants.expiresIn]).toString(), clientInfo);\r\n      this._cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\r\n    } else {\r\n      scope = this.clientId;\r\n      const accessTokenKey = new AccessTokenKey(authority, this.clientId, scope, clientObj.uid, clientObj.utid);\r\n      const accessTokenValue = new AccessTokenValue(tokenResponse.parameters[Constants.idToken], tokenResponse.parameters[Constants.idToken], idToken.expiration, clientInfo);\r\n      this._cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the user object.\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private saveTokenFromHash(tokenResponse: TokenResponse): void {\r\n    this._logger.info(\"State status:\" + tokenResponse.stateMatch + \"; Request type:\" + tokenResponse.requestType);\r\n    this._cacheStorage.setItem(Constants.msalError, \"\");\r\n    this._cacheStorage.setItem(Constants.msalErrorDescription, \"\");\r\n    var scope: string = \"\";\r\n    if (tokenResponse.parameters.hasOwnProperty(\"scope\")) {\r\n      scope = tokenResponse.parameters[\"scope\"];\r\n    }\r\n    else {\r\n      scope = this.clientId;\r\n    }\r\n\r\n    // Record error\r\n    if (tokenResponse.parameters.hasOwnProperty(Constants.errorDescription) || tokenResponse.parameters.hasOwnProperty(Constants.error)) {\r\n      this._logger.info(\"Error :\" + tokenResponse.parameters[Constants.error] + \"; Error description:\" + tokenResponse.parameters[Constants.errorDescription]);\r\n      this._cacheStorage.setItem(Constants.msalError, tokenResponse.parameters[\"error\"]);\r\n      this._cacheStorage.setItem(Constants.msalErrorDescription, tokenResponse.parameters[Constants.errorDescription]);\r\n      if (tokenResponse.requestType === Constants.login) {\r\n        this._loginInProgress = false;\r\n        this._cacheStorage.setItem(Constants.loginError, tokenResponse.parameters[Constants.errorDescription] + \":\" + tokenResponse.parameters[Constants.error]);\r\n      }\r\n\r\n      if (tokenResponse.requestType === Constants.renewToken) {\r\n        this._acquireTokenInProgress = false;\r\n      }\r\n    } else {\r\n      // It must verify the state from redirect\r\n      if (tokenResponse.stateMatch) {\r\n        // record tokens to storage if exists\r\n        this._logger.info(\"State is right\");\r\n        if (tokenResponse.parameters.hasOwnProperty(Constants.sessionState)) {\r\n            this._cacheStorage.setItem(Constants.msalSessionState, tokenResponse.parameters[Constants.sessionState]);\r\n        }\r\n        \r\n        var idToken: IdToken;\r\n        var clientInfo: string = \"\";\r\n        if (tokenResponse.parameters.hasOwnProperty(Constants.accessToken)) {\r\n          this._logger.info(\"Fragment has access token\");\r\n          this._acquireTokenInProgress = false;\r\n          let user: User;\r\n          if (tokenResponse.parameters.hasOwnProperty(Constants.idToken)) {\r\n            idToken = new IdToken(tokenResponse.parameters[Constants.idToken]);\r\n          } else {\r\n            idToken = new IdToken(this._cacheStorage.getItem(Constants.idTokenKey));\r\n          }\r\n\r\n          let authorityKey = Constants.authority + Constants.resourceDelimeter + tokenResponse.stateResponse;\r\n          let authority: string;\r\n          if (!Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\r\n            authority = this._cacheStorage.getItem(authorityKey);\r\n            authority = Utils.replaceFirstPath(authority, idToken.tenantId);\r\n          }\r\n\r\n          if (tokenResponse.parameters.hasOwnProperty(Constants.clientInfo)) {\r\n            clientInfo = tokenResponse.parameters[Constants.clientInfo];\r\n            user = User.createUser(idToken, new ClientInfo(clientInfo), authority);\r\n          } else {\r\n            this._logger.warning(\"ClientInfo not received in the response from AAD\");\r\n            user = User.createUser(idToken, new ClientInfo(clientInfo), authority);\r\n          }\r\n\r\n          let acquireTokenUserKey = Constants.acquireTokenUser + Constants.resourceDelimeter + user.userIdentifier + Constants.resourceDelimeter + tokenResponse.stateResponse;\r\n          let acquireTokenUser: User;\r\n          if (!Utils.isEmpty(this._cacheStorage.getItem(acquireTokenUserKey))) {\r\n            acquireTokenUser = JSON.parse(this._cacheStorage.getItem(acquireTokenUserKey));\r\n            if (user && acquireTokenUser && Utils.compareObjects(user, acquireTokenUser)) {\r\n              this.saveAccessToken(authority, tokenResponse, user, clientInfo, idToken);\r\n              this._logger.info(\r\n                \"The user object received in the response is the same as the one passed in the acquireToken request\");\r\n            } else {\r\n              this._logger.warning(\r\n                \"The user object created from the response is not the same as the one passed in the acquireToken request\");\r\n            }\r\n          }\r\n        }\r\n\r\n        if (tokenResponse.parameters.hasOwnProperty(Constants.idToken)) {\r\n          if (scope.indexOf(this.clientId) > -1) {\r\n            this._logger.info(\"Fragment has id token\");\r\n            this._loginInProgress = false;\r\n            idToken = new IdToken(tokenResponse.parameters[Constants.idToken]);\r\n            if (tokenResponse.parameters.hasOwnProperty(Constants.clientInfo)) {\r\n              clientInfo = tokenResponse.parameters[Constants.clientInfo];\r\n            } else {\r\n              this._logger.warning(\"ClientInfo not received in the response from AAD\");\r\n            }\r\n\r\n            let authorityKey = Constants.authority + Constants.resourceDelimeter + tokenResponse.stateResponse;\r\n            let authority: string;\r\n            if (!Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\r\n              authority = this._cacheStorage.getItem(authorityKey);\r\n              authority = Utils.replaceFirstPath(authority, idToken.tenantId);\r\n            }\r\n\r\n            this._user = User.createUser(idToken, new ClientInfo(clientInfo), authority);\r\n            if (idToken && idToken.nonce) {\r\n              if (idToken.nonce !== this._cacheStorage.getItem(Constants.nonceIdToken)) {\r\n                this._user = null;\r\n                this._cacheStorage.setItem(Constants.loginError, \"Nonce Mismatch.Expected: \" + this._cacheStorage.getItem(Constants.nonceIdToken) + \",\" + \"Actual: \" + idToken.nonce);\r\n              } else {\r\n                this._cacheStorage.setItem(Constants.idTokenKey, tokenResponse.parameters[Constants.idToken]);\r\n                this._cacheStorage.setItem(Constants.msalClientInfo, clientInfo);\r\n\r\n                // Save idToken as access token for app itself\r\n                this.saveAccessToken(authority, tokenResponse, this._user, clientInfo, idToken);\r\n              }\r\n            } else {\r\n              this._cacheStorage.setItem(Constants.msalError, \"invalid idToken\");\r\n              this._cacheStorage.setItem(Constants.msalErrorDescription, \"Invalid idToken. idToken: \" + tokenResponse.parameters[Constants.idToken]);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        this._cacheStorage.setItem(Constants.msalError, \"Invalid_state\");\r\n        this._cacheStorage.setItem(Constants.msalErrorDescription, \"Invalid_state. state: \" + tokenResponse.stateResponse);\r\n      }\r\n    }\r\n    this._cacheStorage.setItem(Constants.renewStatus + scope, Constants.tokenRenewStatusCompleted);\r\n    this._cacheStorage.removeAcquireTokenEntries(Constants.acquireTokenUser, Constants.renewStatus);\r\n    this._cacheStorage.removeAcquireTokenEntries(Constants.authority + Constants.resourceDelimeter, Constants.renewStatus);\r\n  }\r\n\r\n  /*\r\n   * Checks if the redirect response is received from the STS. In case of redirect, the url fragment has either id_token, access_token or error.\r\n   * @param {string} hash - Hash passed from redirect page.\r\n   * @returns {Boolean} - true if response contains id_token, access_token or error, false otherwise.\r\n   * @hidden\r\n   */\r\n  isCallback(hash: string): boolean {\r\n    hash = this.getHash(hash);\r\n    const parameters = Utils.deserialize(hash);\r\n    return (\r\n      parameters.hasOwnProperty(Constants.errorDescription) ||\r\n      parameters.hasOwnProperty(Constants.error) ||\r\n      parameters.hasOwnProperty(Constants.accessToken) ||\r\n      parameters.hasOwnProperty(Constants.idToken)\r\n\r\n    );\r\n  }\r\n\r\n  /*\r\n   * Returns the anchor part(#) of the URL\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private getHash(hash: string): string {\r\n    if (hash.indexOf(\"#/\") > -1) {\r\n      hash = hash.substring(hash.indexOf(\"#/\") + 2);\r\n    } else if (hash.indexOf(\"#\") > -1) {\r\n      hash = hash.substring(1);\r\n    }\r\n\r\n    return hash;\r\n  }\r\n\r\n  /*\r\n    * Creates a requestInfo object from the URL fragment and returns it.\r\n    * @param {string} hash  -  Hash passed from redirect page\r\n    * @returns {TokenResponse} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n    * @ignore\r\n    * @hidden\r\n    */\r\n  private getRequestInfo(hash: string): TokenResponse {\r\n    hash = this.getHash(hash);\r\n    const parameters = Utils.deserialize(hash);\r\n    const tokenResponse = new TokenResponse();\r\n    if (parameters) {\r\n      tokenResponse.parameters = parameters;\r\n      if (parameters.hasOwnProperty(Constants.errorDescription) ||\r\n        parameters.hasOwnProperty(Constants.error) ||\r\n        parameters.hasOwnProperty(Constants.accessToken) ||\r\n        parameters.hasOwnProperty(Constants.idToken)) {\r\n        tokenResponse.valid = true;\r\n        // which call\r\n        let stateResponse: string;\r\n        if (parameters.hasOwnProperty(\"state\")) {\r\n            stateResponse = parameters.state;\r\n        } else {\r\n            return tokenResponse;\r\n        }\r\n\r\n        tokenResponse.stateResponse = stateResponse;\r\n        // async calls can fire iframe and login request at the same time if developer does not use the API as expected\r\n        // incoming callback needs to be looked up to find the request type\r\n        if (stateResponse === this._cacheStorage.getItem(Constants.stateLogin)) { // loginRedirect\r\n          tokenResponse.requestType = Constants.login;\r\n          tokenResponse.stateMatch = true;\r\n          return tokenResponse;\r\n        } else if (stateResponse === this._cacheStorage.getItem(Constants.stateAcquireToken)) { //acquireTokenRedirect\r\n          tokenResponse.requestType = Constants.renewToken;\r\n          tokenResponse.stateMatch = true;\r\n          return tokenResponse;\r\n        }\r\n\r\n        // external api requests may have many renewtoken requests for different resource\r\n        if (!tokenResponse.stateMatch) {\r\n          if (window.parent && window.parent !== window) {\r\n            tokenResponse.requestType = Constants.renewToken;\r\n          }\r\n          else {\r\n            tokenResponse.requestType = this._requestType;\r\n          }\r\n          const statesInParentContext = this._renewStates;\r\n          for (let i = 0; i < statesInParentContext.length; i++) {\r\n            if (statesInParentContext[i] === tokenResponse.stateResponse) {\r\n              tokenResponse.stateMatch = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return tokenResponse;\r\n  }\r\n\r\n  /*\r\n    * Extracts scope value from the state sent with the authentication request.\r\n    * @returns {string} scope.\r\n    * @ignore\r\n    * @hidden\r\n    */\r\n  private getScopeFromState(state: string): string {\r\n    if (state) {\r\n      const splitIndex = state.indexOf(\"|\");\r\n      if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n        return state.substring(splitIndex + 1);\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  /*\r\n    * Returns whether current window is in ifram for token renewal\r\n    * @ignore\r\n    * @hidden\r\n    */\r\n  private isInIframe() {\r\n      return window.parent !== window;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/UserAgentApplication.ts","/*\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the \"Software\"), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { Utils } from \"./Utils\";\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class AccessTokenKey {\r\n\r\n  authority: string;\r\n  clientId: string;\r\n  userIdentifier: string;\r\n  scopes: string;\r\n\r\n  constructor(authority: string, clientId: string, scopes: string, uid: string, utid: string) {\r\n    this.authority = authority;\r\n    this.clientId = clientId;\r\n    this.scopes = scopes;\r\n    this.userIdentifier = Utils.base64EncodeStringUrlSafe(uid) + \".\" + Utils.base64EncodeStringUrlSafe(utid);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AccessTokenKey.ts","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class AccessTokenValue {\r\n\r\n  accessToken: string;\r\n  idToken: string;\r\n  expiresIn: string;\r\n  clientInfo: string;\r\n\r\n  constructor(accessToken: string, idToken: string, expiresIn: string, clientInfo: string) {\r\n    this.accessToken = accessToken;\r\n    this.idToken = idToken;\r\n    this.expiresIn = expiresIn;\r\n    this.clientInfo = clientInfo;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AccessTokenValue.ts","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { Authority } from \"./Authority\";\r\nimport { Utils } from \"./Utils\";\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class AuthenticationRequestParameters {\r\n  authorityInstance: Authority;\r\n  clientId: string;\r\n  nonce: string;\r\n  state: string;\r\n  correlationId: string;\r\n  xClientVer: string;\r\n  xClientSku: string;\r\n  scopes: Array<string>;\r\n  responseType: string;\r\n  promptValue: string;\r\n  extraQueryParameters: string;\r\n  loginHint: string;\r\n  domainHint: string;\r\n  redirectUri: string;\r\n  public get authority(): string {\r\n    return this.authorityInstance.CanonicalAuthority;\r\n  }\r\n\r\n  constructor(authority: Authority, clientId: string, scope: Array<string>, responseType: string, redirectUri: string) {\r\n    this.authorityInstance = authority;\r\n    this.clientId = clientId;\r\n    this.scopes = scope;\r\n    this.responseType = responseType;\r\n    this.redirectUri = redirectUri;\r\n    // randomly generated values\r\n    this.correlationId = Utils.createNewGuid();\r\n    this.state = Utils.createNewGuid();\r\n    this.nonce = Utils.createNewGuid();\r\n    // telemetry information\r\n    this.xClientSku = \"MSAL.JS\";\r\n    this.xClientVer = Utils.getLibraryVersion();\r\n  }\r\n\r\n  createNavigateUrl(scopes: Array<string>): string {\r\n    if (!scopes) {\r\n      scopes = [this.clientId];\r\n    }\r\n\r\n    if (scopes.indexOf(this.clientId) === -1) {\r\n      scopes.push(this.clientId);\r\n    }\r\n\r\n    const str: Array<string> = [];\r\n    str.push(\"response_type=\" + this.responseType);\r\n    this.translateclientIdUsedInScope(scopes);\r\n    str.push(\"scope=\" + encodeURIComponent(this.parseScope(scopes)));\r\n    str.push(\"client_id=\" + encodeURIComponent(this.clientId));\r\n    str.push(\"redirect_uri=\" + encodeURIComponent(this.redirectUri));\r\n    str.push(\"state=\" + encodeURIComponent(this.state));\r\n    str.push(\"nonce=\" + encodeURIComponent(this.nonce));\r\n    str.push(\"client_info=1\");\r\n    str.push(`x-client-SKU=${this.xClientSku}`);\r\n    str.push(`x-client-Ver=${this.xClientVer}`);\r\n\r\n    if (this.extraQueryParameters) {\r\n      str.push(this.extraQueryParameters);\r\n    }\r\n\r\n    str.push(\"client-request-id=\" + encodeURIComponent(this.correlationId));\r\n    let authEndpoint: string = this.authorityInstance.AuthorizationEndpoint;\r\n\r\n    // if the endpoint already has queryparams, lets add to it, otherwise add the first one\r\n    if (authEndpoint.indexOf(\"?\") < 0) {\r\n      authEndpoint += \"?\";\r\n    } else {\r\n      authEndpoint += \"&\";\r\n    }\r\n\r\n    let requestUrl: string = `${authEndpoint}${str.join(\"&\")}`;\r\n    return requestUrl;\r\n  }\r\n\r\n  translateclientIdUsedInScope(scopes: Array<string>): void {\r\n    const clientIdIndex: number = scopes.indexOf(this.clientId);\r\n    if (clientIdIndex >= 0) {\r\n      scopes.splice(clientIdIndex, 1);\r\n      if (scopes.indexOf(\"openid\") === -1) {\r\n        scopes.push(\"openid\");\r\n      }\r\n      if (scopes.indexOf(\"profile\") === -1) {\r\n        scopes.push(\"profile\");\r\n      }\r\n    }\r\n  }\r\n\r\n  parseScope(scopes: Array<string>): string {\r\n    let scopeList: string = \"\";\r\n    if (scopes) {\r\n        for (let i: number = 0; i < scopes.length; ++i) {\r\n        scopeList += (i !== scopes.length - 1) ? scopes[i] + \" \" : scopes[i];\r\n      }\r\n    }\r\n\r\n    return scopeList;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AuthenticationRequestParameters.ts","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { Utils } from \"./Utils\";\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class ClientInfo {\r\n\r\n  private _uid: string;\r\n  get uid(): string {\r\n    return this._uid ? this._uid : \"\";\r\n  }\r\n\r\n  set uid(uid: string) {\r\n    this._uid = uid;\r\n  }\r\n\r\n  private _utid: string;\r\n  get utid(): string {\r\n    return this._utid ? this._utid : \"\";\r\n  }\r\n\r\n  set utid(utid: string) {\r\n    this._utid = utid;\r\n  }\r\n\r\n  constructor(rawClientInfo: string) {\r\n    if (!rawClientInfo || Utils.isEmpty(rawClientInfo)) {\r\n      this.uid = \"\";\r\n      this.utid = \"\";\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const decodedClientInfo: string = Utils.base64DecodeStringUrlSafe(rawClientInfo);\r\n      const clientInfo: ClientInfo = <ClientInfo>JSON.parse(decodedClientInfo);\r\n      if (clientInfo) {\r\n        if (clientInfo.hasOwnProperty(\"uid\")) {\r\n          this.uid = clientInfo.uid;\r\n        }\r\n\r\n        if (clientInfo.hasOwnProperty(\"utid\")) {\r\n          this.utid = clientInfo.utid;\r\n        }\r\n      }\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ClientInfo.ts","/*\r\n  * Copyright (c) Microsoft Corporation\r\n  *  All Rights Reserved\r\n  *  MIT License\r\n  *\r\n  * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n  * software and associated documentation files (the \"Software\"), to deal in the Software\r\n  * without restriction, including without limitation the rights to use, copy, modify,\r\n  * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n  * permit persons to whom the Software is furnished to do so, subject to the following\r\n  * conditions:\r\n  *\r\n  * The above copyright notice and this permission notice shall be\r\n  * included in all copies or substantial portions of the Software.\r\n  *\r\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n  * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n  * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n  */\r\n\r\nimport { Utils } from \"./Utils\";\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class IdToken {\r\n\r\n  issuer: string;\r\n  objectId: string;\r\n  subject: string;\r\n  tenantId: string;\r\n  version: string;\r\n  preferredName: string;\r\n  name: string;\r\n  homeObjectId: string;\r\n  nonce: string;\r\n  expiration: string;\r\n  rawIdToken: string;\r\n  decodedIdToken: Object\r\n\r\n  constructor(rawIdToken: string) {\r\n    if (Utils.isEmpty(rawIdToken)) {\r\n      throw new Error(\"null or empty raw idtoken\");\r\n    }\r\n    try {\r\n      this.rawIdToken = rawIdToken;\r\n      this.decodedIdToken = Utils.extractIdToken(rawIdToken);\r\n      if (this.decodedIdToken) {\r\n        if (this.decodedIdToken.hasOwnProperty(\"iss\")) {\r\n          this.issuer = this.decodedIdToken[\"iss\"];\r\n        }\r\n\r\n        if (this.decodedIdToken.hasOwnProperty(\"oid\")) {\r\n            this.objectId = this.decodedIdToken['oid'];\r\n        }\r\n\r\n        if (this.decodedIdToken.hasOwnProperty(\"sub\")) {\r\n          this.subject = this.decodedIdToken[\"sub\"];\r\n        }\r\n\r\n        if (this.decodedIdToken.hasOwnProperty(\"tid\")) {\r\n          this.tenantId = this.decodedIdToken[\"tid\"];\r\n        }\r\n\r\n        if (this.decodedIdToken.hasOwnProperty(\"ver\")) {\r\n          this.version = this.decodedIdToken[\"ver\"];\r\n        }\r\n\r\n        if (this.decodedIdToken.hasOwnProperty(\"preferred_username\")) {\r\n          this.preferredName = this.decodedIdToken[\"preferred_username\"];\r\n        }\r\n\r\n        if (this.decodedIdToken.hasOwnProperty(\"name\")) {\r\n          this.name = this.decodedIdToken[\"name\"];\r\n        }\r\n\r\n        if (this.decodedIdToken.hasOwnProperty(\"nonce\")) {\r\n          this.nonce = this.decodedIdToken[\"nonce\"];\r\n        }\r\n\r\n        if (this.decodedIdToken.hasOwnProperty(\"exp\")) {\r\n          this.expiration = this.decodedIdToken[\"exp\"];\r\n        }\r\n\r\n        if (this.decodedIdToken.hasOwnProperty(\"home_oid\")) {\r\n            this.homeObjectId = this.decodedIdToken[\"home_oid\"];\r\n        }\r\n      }\r\n    } catch (e) {\r\n      throw new Error(\"Failed to parse the returned id token\");\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/IdToken.ts","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { Constants } from \"./Constants\";\r\nimport { AccessTokenCacheItem } from \"./AccessTokenCacheItem\";\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class Storage {// Singleton\r\n\r\n  private static _instance: Storage;\r\n  private _localStorageSupported: boolean;\r\n  private _sessionStorageSupported: boolean;\r\n  private _cacheLocation: string;\r\n\r\n  constructor(cacheLocation: string) {\r\n    if (Storage._instance) {\r\n      return Storage._instance;\r\n    }\r\n\r\n    this._cacheLocation = cacheLocation;\r\n    this._localStorageSupported = typeof window[this._cacheLocation] !== \"undefined\" && window[this._cacheLocation] != null;\r\n    this._sessionStorageSupported = typeof window[cacheLocation] !== \"undefined\" && window[cacheLocation] != null;\r\n    Storage._instance = this;\r\n    if (!this._localStorageSupported && !this._sessionStorageSupported) {\r\n      throw new Error(\"localStorage and sessionStorage not supported\");\r\n    }\r\n\r\n    return Storage._instance;\r\n  }\r\n\r\n  // add value to storage\r\n  setItem(key: string, value: string): void {\r\n    if (window[this._cacheLocation]) {\r\n      window[this._cacheLocation].setItem(key, value);\r\n    } else {\r\n      throw new Error(\"localStorage and sessionStorage are not supported\");\r\n    }\r\n  }\r\n\r\n  // get one item by key from storage\r\n  getItem(key: string): string {\r\n    if (window[this._cacheLocation]) {\r\n      return window[this._cacheLocation].getItem(key);\r\n    } else {\r\n      throw new Error(\"localStorage and sessionStorage are not supported\");\r\n    }\r\n  }\r\n\r\n  // remove value from storage\r\n  removeItem(key: string): void {\r\n    if (window[this._cacheLocation]) {\r\n      return window[this._cacheLocation].removeItem(key);\r\n    } else {\r\n      throw new Error(\"localStorage and sessionStorage are not supported\");\r\n    }\r\n  }\r\n\r\n  // clear storage (remove all items from it)\r\n  clear(): void {\r\n    if (window[this._cacheLocation]) {\r\n      return window[this._cacheLocation].clear();\r\n    } else {\r\n      throw new Error(\"localStorage and sessionStorage are not supported\");\r\n    }\r\n  }\r\n\r\n  getAllAccessTokens(clientId: string, userIdentifier: string): Array<AccessTokenCacheItem> {\r\n    const results: Array<AccessTokenCacheItem> = [];\r\n    let accessTokenCacheItem: AccessTokenCacheItem;\r\n    const storage = window[this._cacheLocation];\r\n    if (storage) {\r\n      let key: string;\r\n      for (key in storage) {\r\n        if (storage.hasOwnProperty(key)) {\r\n          if (key.match(clientId) && key.match(userIdentifier)) {\r\n            let value = this.getItem(key);\r\n            if (value) {\r\n              accessTokenCacheItem = new AccessTokenCacheItem(JSON.parse(key), JSON.parse(value));\r\n              results.push(accessTokenCacheItem);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error(\"localStorage and sessionStorage are not supported\");\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  removeAcquireTokenEntries(acquireTokenUser: string, acquireTokenStatus: string): void {\r\n    const storage = window[this._cacheLocation];\r\n    if (storage) {\r\n      let key: string;\r\n      for (key in storage) {\r\n        if (storage.hasOwnProperty(key)) {\r\n          if ((key.indexOf(acquireTokenUser) > -1) || (key.indexOf(acquireTokenStatus) > -1)) {\r\n            this.removeItem(key);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error(\"localStorage and sessionStorage are not supported\");\r\n    }\r\n  }\r\n\r\n  resetCacheItems(): void {\r\n    const storage = window[this._cacheLocation];\r\n    if (storage) {\r\n      let key: string;\r\n      for (key in storage) {\r\n        if (storage.hasOwnProperty(key) && key.indexOf(Constants.msal) !== -1) {\r\n          storage[key] = \"\";\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error(\"localStorage and sessionStorage are not supported\");\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Storage.ts","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { AccessTokenKey } from \"./AccessTokenKey\";\r\nimport { AccessTokenValue } from \"./AccessTokenValue\";\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class AccessTokenCacheItem {\r\n\r\n  key: AccessTokenKey;\r\n  value: AccessTokenValue;\r\n\r\n  constructor(key: AccessTokenKey, value: AccessTokenValue) {\r\n    this.key = key;\r\n    this.value = value;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AccessTokenCacheItem.ts","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class TokenResponse {\r\n  valid: boolean;\r\n  parameters: Object;\r\n  stateMatch: boolean;\r\n  stateResponse: string;\r\n  requestType: string;\r\n\r\n  constructor() {\r\n    this.valid = false;\r\n    this.parameters = {};\r\n    this.stateMatch = false;\r\n    this.stateResponse = \"\";\r\n    this.requestType = \"unknown\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/RequestInfo.ts","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/*\r\n * @hidden\r\n */\r\nimport { Utils } from \"./Utils\";\r\nimport { AadAuthority } from \"./AadAuthority\";\r\nimport { B2cAuthority } from \"./B2cAuthority\";\r\nimport { Authority, AuthorityType } from \"./Authority\";\r\nimport { ErrorMessage } from \"./ErrorMessage\";\r\n\r\nexport class AuthorityFactory {\r\n    /*\r\n    * Parse the url and determine the type of authority\r\n    */\r\n    private static DetectAuthorityFromUrl(authorityUrl: string): AuthorityType {\r\n        authorityUrl = Utils.CanonicalizeUri(authorityUrl);\r\n        let components = Utils.GetUrlComponents(authorityUrl);\r\n        let pathSegments = components.PathSegments;\r\n        switch (pathSegments[0]) {\r\n            case \"tfp\":\r\n                return AuthorityType.B2C;\r\n            case \"adfs\":\r\n                return AuthorityType.Adfs;\r\n            default:\r\n                return AuthorityType.Aad;\r\n        }\r\n    }\r\n\r\n    /*\r\n    * Create an authority object of the correct type based on the url\r\n    * Performs basic authority validation - checks to see if the authority is of a valid type (eg aad, b2c)\r\n    */\r\n    public static CreateInstance(authorityUrl: string, validateAuthority: boolean): Authority {\r\n        let type = AuthorityFactory.DetectAuthorityFromUrl(authorityUrl);\r\n        // Depending on above detection, create the right type.\r\n        switch (type) {\r\n            case AuthorityType.B2C:\r\n                return new B2cAuthority(authorityUrl, validateAuthority);\r\n            case AuthorityType.Aad:\r\n                return new AadAuthority(authorityUrl, validateAuthority);\r\n            default:\r\n                throw ErrorMessage.invalidAuthorityType;\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AuthorityFactory.ts","/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { AadAuthority } from \"./AadAuthority\";\r\nimport { Authority, AuthorityType } from \"./Authority\";\r\nimport { ErrorMessage } from \"./ErrorMessage\";\r\nimport { Utils } from \"./Utils\";\r\n\r\n/*\r\n * @hidden\r\n */\r\nexport class B2cAuthority extends AadAuthority {\r\n  public constructor(authority: string, validateAuthority: boolean) {\r\n    super(authority, validateAuthority);\r\n    let urlComponents = Utils.GetUrlComponents(authority);\r\n\r\n    let pathSegments = urlComponents.PathSegments;\r\n    if (pathSegments.length < 3) {\r\n        throw ErrorMessage.b2cAuthorityUriInvalidPath;\r\n    }\r\n\r\n    this.CanonicalAuthority = `https://${urlComponents.HostNameAndPort}/${pathSegments[0]}/${pathSegments[1]}/${pathSegments[2]}/`;\r\n  }\r\n\r\n  public get AuthorityType(): AuthorityType {\r\n    return AuthorityType.B2C;\r\n  }\r\n\r\n  /*\r\n   * Returns a promise with the TenantDiscoveryEndpoint\r\n   */\r\n  public GetOpenIdConfigurationEndpointAsync(): Promise<string> {\r\n    var resultPromise = new Promise<string>((resolve, reject) =>\r\n      resolve(this.DefaultOpenIdConfigurationEndpoint));\r\n\r\n    if (!this.IsValidationEnabled) {\r\n      return resultPromise;\r\n    }\r\n\r\n    if (this.IsInTrustedHostList(this.CanonicalAuthorityUrlComponents.HostNameAndPort)) {\r\n      return resultPromise;\r\n    }\r\n\r\n    return new Promise<string>((resolve, reject) =>\r\n      reject(ErrorMessage.unsupportedAuthorityValidation));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/B2cAuthority.ts"],"sourceRoot":""}